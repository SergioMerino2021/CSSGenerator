(self["webpackChunktest"]=self["webpackChunktest"]||[]).push([[998],{9662:function(e,t,n){var r=n(614),s=n(6330),i=TypeError;e.exports=function(e){if(r(e))return e;throw i(s(e)+" is not a function")}},6077:function(e,t,n){var r=n(614),s=String,i=TypeError;e.exports=function(e){if("object"==typeof e||r(e))return e;throw i("Can't set "+s(e)+" as a prototype")}},5787:function(e,t,n){var r=n(7976),s=TypeError;e.exports=function(e,t){if(r(t,e))return e;throw s("Incorrect invocation")}},9670:function(e,t,n){var r=n(111),s=String,i=TypeError;e.exports=function(e){if(r(e))return e;throw i(s(e)+" is not an object")}},3013:function(e){e.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},260:function(e,t,n){"use strict";var r,s,i,a=n(3013),o=n(9781),l=n(7854),u=n(614),c=n(111),h=n(2597),d=n(648),p=n(6330),f=n(8880),g=n(8052),m=n(3070).f,b=n(7976),x=n(9518),y=n(7674),v=n(5112),w=n(9711),k=n(9909),I=k.enforce,S=k.get,C=l.Int8Array,$=C&&C.prototype,N=l.Uint8ClampedArray,T=N&&N.prototype,E=C&&x(C),R=$&&x($),_=Object.prototype,A=l.TypeError,F=v("toStringTag"),D=w("TYPED_ARRAY_TAG"),O="TypedArrayConstructor",M=a&&!!y&&"Opera"!==d(l.opera),L=!1,z={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},P={BigInt64Array:8,BigUint64Array:8},B=function(e){if(!c(e))return!1;var t=d(e);return"DataView"===t||h(z,t)||h(P,t)},W=function(e){var t=x(e);if(c(t)){var n=S(t);return n&&h(n,O)?n[O]:W(t)}},U=function(e){if(!c(e))return!1;var t=d(e);return h(z,t)||h(P,t)},V=function(e){if(U(e))return e;throw A("Target is not a typed array")},G=function(e){if(u(e)&&(!y||b(E,e)))return e;throw A(p(e)+" is not a typed array constructor")},H=function(e,t,n,r){if(o){if(n)for(var s in z){var i=l[s];if(i&&h(i.prototype,e))try{delete i.prototype[e]}catch(a){try{i.prototype[e]=t}catch(u){}}}R[e]&&!n||g(R,e,n?t:M&&$[e]||t,r)}},j=function(e,t,n){var r,s;if(o){if(y){if(n)for(r in z)if(s=l[r],s&&h(s,e))try{delete s[e]}catch(i){}if(E[e]&&!n)return;try{return g(E,e,n?t:M&&E[e]||t)}catch(i){}}for(r in z)s=l[r],!s||s[e]&&!n||g(s,e,t)}};for(r in z)s=l[r],i=s&&s.prototype,i?I(i)[O]=s:M=!1;for(r in P)s=l[r],i=s&&s.prototype,i&&(I(i)[O]=s);if((!M||!u(E)||E===Function.prototype)&&(E=function(){throw A("Incorrect invocation")},M))for(r in z)l[r]&&y(l[r],E);if((!M||!R||R===_)&&(R=E.prototype,M))for(r in z)l[r]&&y(l[r].prototype,R);if(M&&x(T)!==R&&y(T,R),o&&!h(R,F))for(r in L=!0,m(R,F,{get:function(){return c(this)?this[D]:void 0}}),z)l[r]&&f(l[r],D,r);e.exports={NATIVE_ARRAY_BUFFER_VIEWS:M,TYPED_ARRAY_TAG:L&&D,aTypedArray:V,aTypedArrayConstructor:G,exportTypedArrayMethod:H,exportTypedArrayStaticMethod:j,getTypedArrayConstructor:W,isView:B,isTypedArray:U,TypedArray:E,TypedArrayPrototype:R}},1318:function(e,t,n){var r=n(5656),s=n(1400),i=n(6244),a=function(e){return function(t,n,a){var o,l=r(t),u=i(l),c=s(a,u);if(e&&n!=n){while(u>c)if(o=l[c++],o!=o)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},9671:function(e,t,n){var r=n(9974),s=n(8361),i=n(7908),a=n(6244),o=function(e){var t=1==e;return function(n,o,l){var u,c,h=i(n),d=s(h),p=r(o,l),f=a(d);while(f-- >0)if(u=d[f],c=p(u,f,h),c)switch(e){case 0:return u;case 1:return f}return t?-1:void 0}};e.exports={findLast:o(0),findLastIndex:o(1)}},3658:function(e,t,n){"use strict";var r=n(9781),s=n(3157),i=TypeError,a=Object.getOwnPropertyDescriptor,o=r&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=o?function(e,t){if(s(e)&&!a(e,"length").writable)throw i("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},206:function(e,t,n){var r=n(1702);e.exports=r([].slice)},4326:function(e,t,n){var r=n(1702),s=r({}.toString),i=r("".slice);e.exports=function(e){return i(s(e),8,-1)}},648:function(e,t,n){var r=n(1694),s=n(614),i=n(4326),a=n(5112),o=a("toStringTag"),l=Object,u="Arguments"==i(function(){return arguments}()),c=function(e,t){try{return e[t]}catch(n){}};e.exports=r?i:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=c(t=l(e),o))?n:u?i(t):"Object"==(r=i(t))&&s(t.callee)?"Arguments":r}},9920:function(e,t,n){var r=n(2597),s=n(3887),i=n(1236),a=n(3070);e.exports=function(e,t,n){for(var o=s(t),l=a.f,u=i.f,c=0;c<o.length;c++){var h=o[c];r(e,h)||n&&r(n,h)||l(e,h,u(t,h))}}},8544:function(e,t,n){var r=n(7293);e.exports=!r((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},8880:function(e,t,n){var r=n(9781),s=n(3070),i=n(9114);e.exports=r?function(e,t,n){return s.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},9114:function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},7045:function(e,t,n){var r=n(6339),s=n(3070);e.exports=function(e,t,n){return n.get&&r(n.get,t,{getter:!0}),n.set&&r(n.set,t,{setter:!0}),s.f(e,t,n)}},8052:function(e,t,n){var r=n(614),s=n(3070),i=n(6339),a=n(3072);e.exports=function(e,t,n,o){o||(o={});var l=o.enumerable,u=void 0!==o.name?o.name:t;if(r(n)&&i(n,u,o),o.global)l?e[t]=n:a(t,n);else{try{o.unsafe?e[t]&&(l=!0):delete e[t]}catch(c){}l?e[t]=n:s.f(e,t,{value:n,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return e}},3072:function(e,t,n){var r=n(7854),s=Object.defineProperty;e.exports=function(e,t){try{s(r,e,{value:t,configurable:!0,writable:!0})}catch(n){r[e]=t}return t}},5117:function(e,t,n){"use strict";var r=n(6330),s=TypeError;e.exports=function(e,t){if(!delete e[t])throw s("Cannot delete property "+r(t)+" of "+r(e))}},9781:function(e,t,n){var r=n(7293);e.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},317:function(e,t,n){var r=n(7854),s=n(111),i=r.document,a=s(i)&&s(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},7207:function(e){var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},3678:function(e){e.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},6833:function(e,t,n){var r=n(8113);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(r)},5268:function(e,t,n){var r=n(4326),s=n(7854);e.exports="process"==r(s.process)},8113:function(e,t,n){var r=n(5005);e.exports=r("navigator","userAgent")||""},7392:function(e,t,n){var r,s,i=n(7854),a=n(8113),o=i.process,l=i.Deno,u=o&&o.versions||l&&l.version,c=u&&u.v8;c&&(r=c.split("."),s=r[0]>0&&r[0]<4?1:+(r[0]+r[1])),!s&&a&&(r=a.match(/Edge\/(\d+)/),(!r||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/),r&&(s=+r[1]))),e.exports=s},748:function(e){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1060:function(e,t,n){var r=n(1702),s=Error,i=r("".replace),a=function(e){return String(s(e).stack)}("zxcasd"),o=/\n\s*at [^:]*:[^\n]*/,l=o.test(a);e.exports=function(e,t){if(l&&"string"==typeof e&&!s.prepareStackTrace)while(t--)e=i(e,o,"");return e}},2914:function(e,t,n){var r=n(7293),s=n(9114);e.exports=!r((function(){var e=Error("a");return!("stack"in e)||(Object.defineProperty(e,"stack",s(1,7)),7!==e.stack)}))},2109:function(e,t,n){var r=n(7854),s=n(1236).f,i=n(8880),a=n(8052),o=n(3072),l=n(9920),u=n(4705);e.exports=function(e,t){var n,c,h,d,p,f,g=e.target,m=e.global,b=e.stat;if(c=m?r:b?r[g]||o(g,{}):(r[g]||{}).prototype,c)for(h in t){if(p=t[h],e.dontCallGetSet?(f=s(c,h),d=f&&f.value):d=c[h],n=u(m?h:g+(b?".":"#")+h,e.forced),!n&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),a(c,h,p,e)}}},7293:function(e){e.exports=function(e){try{return!!e()}catch(t){return!0}}},2104:function(e,t,n){var r=n(4374),s=Function.prototype,i=s.apply,a=s.call;e.exports="object"==typeof Reflect&&Reflect.apply||(r?a.bind(i):function(){return a.apply(i,arguments)})},9974:function(e,t,n){var r=n(1702),s=n(9662),i=n(4374),a=r(r.bind);e.exports=function(e,t){return s(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},4374:function(e,t,n){var r=n(7293);e.exports=!r((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:function(e,t,n){var r=n(4374),s=Function.prototype.call;e.exports=r?s.bind(s):function(){return s.apply(s,arguments)}},6530:function(e,t,n){var r=n(9781),s=n(2597),i=Function.prototype,a=r&&Object.getOwnPropertyDescriptor,o=s(i,"name"),l=o&&"something"===function(){}.name,u=o&&(!r||r&&a(i,"name").configurable);e.exports={EXISTS:o,PROPER:l,CONFIGURABLE:u}},1702:function(e,t,n){var r=n(4374),s=Function.prototype,i=s.bind,a=s.call,o=r&&i.bind(a,a);e.exports=r?function(e){return e&&o(e)}:function(e){return e&&function(){return a.apply(e,arguments)}}},5005:function(e,t,n){var r=n(7854),s=n(614),i=function(e){return s(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?i(r[e]):r[e]&&r[e][t]}},8173:function(e,t,n){var r=n(9662),s=n(8554);e.exports=function(e,t){var n=e[t];return s(n)?void 0:r(n)}},7854:function(e,t,n){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof n.g&&n.g)||function(){return this}()||Function("return this")()},2597:function(e,t,n){var r=n(1702),s=n(7908),i=r({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(s(e),t)}},3501:function(e){e.exports={}},490:function(e,t,n){var r=n(5005);e.exports=r("document","documentElement")},4664:function(e,t,n){var r=n(9781),s=n(7293),i=n(317);e.exports=!r&&!s((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},8361:function(e,t,n){var r=n(1702),s=n(7293),i=n(4326),a=Object,o=r("".split);e.exports=s((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?o(e,""):a(e)}:a},9587:function(e,t,n){var r=n(614),s=n(111),i=n(7674);e.exports=function(e,t,n){var a,o;return i&&r(a=t.constructor)&&a!==n&&s(o=a.prototype)&&o!==n.prototype&&i(e,o),e}},2788:function(e,t,n){var r=n(1702),s=n(614),i=n(5465),a=r(Function.toString);s(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},8340:function(e,t,n){var r=n(111),s=n(8880);e.exports=function(e,t){r(t)&&"cause"in t&&s(e,"cause",t.cause)}},9909:function(e,t,n){var r,s,i,a=n(4811),o=n(7854),l=n(1702),u=n(111),c=n(8880),h=n(2597),d=n(5465),p=n(6200),f=n(3501),g="Object already initialized",m=o.TypeError,b=o.WeakMap,x=function(e){return i(e)?s(e):r(e,{})},y=function(e){return function(t){var n;if(!u(t)||(n=s(t)).type!==e)throw m("Incompatible receiver, "+e+" required");return n}};if(a||d.state){var v=d.state||(d.state=new b),w=l(v.get),k=l(v.has),I=l(v.set);r=function(e,t){if(k(v,e))throw m(g);return t.facade=e,I(v,e,t),t},s=function(e){return w(v,e)||{}},i=function(e){return k(v,e)}}else{var S=p("state");f[S]=!0,r=function(e,t){if(h(e,S))throw m(g);return t.facade=e,c(e,S,t),t},s=function(e){return h(e,S)?e[S]:{}},i=function(e){return h(e,S)}}e.exports={set:r,get:s,has:i,enforce:x,getterFor:y}},3157:function(e,t,n){var r=n(4326);e.exports=Array.isArray||function(e){return"Array"==r(e)}},614:function(e){e.exports=function(e){return"function"==typeof e}},4705:function(e,t,n){var r=n(7293),s=n(614),i=/#|\.prototype\./,a=function(e,t){var n=l[o(e)];return n==c||n!=u&&(s(t)?r(t):!!t)},o=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},8554:function(e){e.exports=function(e){return null===e||void 0===e}},111:function(e,t,n){var r=n(614),s="object"==typeof document&&document.all,i="undefined"==typeof s&&void 0!==s;e.exports=i?function(e){return"object"==typeof e?null!==e:r(e)||e===s}:function(e){return"object"==typeof e?null!==e:r(e)}},1913:function(e){e.exports=!1},2190:function(e,t,n){var r=n(5005),s=n(614),i=n(7976),a=n(3307),o=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=r("Symbol");return s(t)&&i(t.prototype,o(e))}},6244:function(e,t,n){var r=n(7466);e.exports=function(e){return r(e.length)}},6339:function(e,t,n){var r=n(7293),s=n(614),i=n(2597),a=n(9781),o=n(6530).CONFIGURABLE,l=n(2788),u=n(9909),c=u.enforce,h=u.get,d=Object.defineProperty,p=a&&!r((function(){return 8!==d((function(){}),"length",{value:8}).length})),f=String(String).split("String"),g=e.exports=function(e,t,n){"Symbol("===String(t).slice(0,7)&&(t="["+String(t).replace(/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!i(e,"name")||o&&e.name!==t)&&(a?d(e,"name",{value:t,configurable:!0}):e.name=t),p&&n&&i(n,"arity")&&e.length!==n.arity&&d(e,"length",{value:n.arity});try{n&&i(n,"constructor")&&n.constructor?a&&d(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(s){}var r=c(e);return i(r,"source")||(r.source=f.join("string"==typeof t?t:"")),e};Function.prototype.toString=g((function(){return s(this)&&h(this).source||l(this)}),"toString")},4758:function(e){var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var r=+e;return(r>0?n:t)(r)}},6277:function(e,t,n){var r=n(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:r(e)}},3070:function(e,t,n){var r=n(9781),s=n(4664),i=n(3353),a=n(9670),o=n(4948),l=TypeError,u=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",d="configurable",p="writable";t.f=r?i?function(e,t,n){if(a(e),t=o(t),a(n),"function"===typeof e&&"prototype"===t&&"value"in n&&p in n&&!n[p]){var r=c(e,t);r&&r[p]&&(e[t]=n.value,n={configurable:d in n?n[d]:r[d],enumerable:h in n?n[h]:r[h],writable:!1})}return u(e,t,n)}:u:function(e,t,n){if(a(e),t=o(t),a(n),s)try{return u(e,t,n)}catch(r){}if("get"in n||"set"in n)throw l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},1236:function(e,t,n){var r=n(9781),s=n(6916),i=n(5296),a=n(9114),o=n(5656),l=n(4948),u=n(2597),c=n(4664),h=Object.getOwnPropertyDescriptor;t.f=r?h:function(e,t){if(e=o(e),t=l(t),c)try{return h(e,t)}catch(n){}if(u(e,t))return a(!s(i.f,e,t),e[t])}},8006:function(e,t,n){var r=n(6324),s=n(748),i=s.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,i)}},5181:function(e,t){t.f=Object.getOwnPropertySymbols},9518:function(e,t,n){var r=n(2597),s=n(614),i=n(7908),a=n(6200),o=n(8544),l=a("IE_PROTO"),u=Object,c=u.prototype;e.exports=o?u.getPrototypeOf:function(e){var t=i(e);if(r(t,l))return t[l];var n=t.constructor;return s(n)&&t instanceof n?n.prototype:t instanceof u?c:null}},7976:function(e,t,n){var r=n(1702);e.exports=r({}.isPrototypeOf)},6324:function(e,t,n){var r=n(1702),s=n(2597),i=n(5656),a=n(1318).indexOf,o=n(3501),l=r([].push);e.exports=function(e,t){var n,r=i(e),u=0,c=[];for(n in r)!s(o,n)&&s(r,n)&&l(c,n);while(t.length>u)s(r,n=t[u++])&&(~a(c,n)||l(c,n));return c}},5296:function(e,t){"use strict";var n={}.propertyIsEnumerable,r=Object.getOwnPropertyDescriptor,s=r&&!n.call({1:2},1);t.f=s?function(e){var t=r(this,e);return!!t&&t.enumerable}:n},7674:function(e,t,n){var r=n(1702),s=n(9670),i=n(6077);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{e=r(Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set),e(n,[]),t=n instanceof Array}catch(a){}return function(n,r){return s(n),i(r),t?e(n,r):n.__proto__=r,n}}():void 0)},2140:function(e,t,n){var r=n(6916),s=n(614),i=n(111),a=TypeError;e.exports=function(e,t){var n,o;if("string"===t&&s(n=e.toString)&&!i(o=r(n,e)))return o;if(s(n=e.valueOf)&&!i(o=r(n,e)))return o;if("string"!==t&&s(n=e.toString)&&!i(o=r(n,e)))return o;throw a("Can't convert object to primitive value")}},3887:function(e,t,n){var r=n(5005),s=n(1702),i=n(8006),a=n(5181),o=n(9670),l=s([].concat);e.exports=r("Reflect","ownKeys")||function(e){var t=i.f(o(e)),n=a.f;return n?l(t,n(e)):t}},2626:function(e,t,n){var r=n(3070).f;e.exports=function(e,t,n){n in e||r(e,n,{configurable:!0,get:function(){return t[n]},set:function(e){t[n]=e}})}},7066:function(e,t,n){"use strict";var r=n(9670);e.exports=function(){var e=r(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},4488:function(e,t,n){var r=n(8554),s=TypeError;e.exports=function(e){if(r(e))throw s("Can't call method on "+e);return e}},6200:function(e,t,n){var r=n(2309),s=n(9711),i=r("keys");e.exports=function(e){return i[e]||(i[e]=s(e))}},5465:function(e,t,n){var r=n(7854),s=n(3072),i="__core-js_shared__",a=r[i]||s(i,{});e.exports=a},2309:function(e,t,n){var r=n(1913),s=n(5465);(e.exports=function(e,t){return s[e]||(s[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.25.1",mode:r?"pure":"global",copyright:"© 2014-2022 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.25.1/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:function(e,t,n){var r=n(7392),s=n(7293);e.exports=!!Object.getOwnPropertySymbols&&!s((function(){var e=Symbol();return!String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&r&&r<41}))},261:function(e,t,n){var r,s,i,a,o=n(7854),l=n(2104),u=n(9974),c=n(614),h=n(2597),d=n(7293),p=n(490),f=n(206),g=n(317),m=n(8053),b=n(6833),x=n(5268),y=o.setImmediate,v=o.clearImmediate,w=o.process,k=o.Dispatch,I=o.Function,S=o.MessageChannel,C=o.String,$=0,N={},T="onreadystatechange";try{r=o.location}catch(F){}var E=function(e){if(h(N,e)){var t=N[e];delete N[e],t()}},R=function(e){return function(){E(e)}},_=function(e){E(e.data)},A=function(e){o.postMessage(C(e),r.protocol+"//"+r.host)};y&&v||(y=function(e){m(arguments.length,1);var t=c(e)?e:I(e),n=f(arguments,1);return N[++$]=function(){l(t,void 0,n)},s($),$},v=function(e){delete N[e]},x?s=function(e){w.nextTick(R(e))}:k&&k.now?s=function(e){k.now(R(e))}:S&&!b?(i=new S,a=i.port2,i.port1.onmessage=_,s=u(a.postMessage,a)):o.addEventListener&&c(o.postMessage)&&!o.importScripts&&r&&"file:"!==r.protocol&&!d(A)?(s=A,o.addEventListener("message",_,!1)):s=T in g("script")?function(e){p.appendChild(g("script"))[T]=function(){p.removeChild(this),E(e)}}:function(e){setTimeout(R(e),0)}),e.exports={set:y,clear:v}},1400:function(e,t,n){var r=n(9303),s=Math.max,i=Math.min;e.exports=function(e,t){var n=r(e);return n<0?s(n+t,0):i(n,t)}},5656:function(e,t,n){var r=n(8361),s=n(4488);e.exports=function(e){return r(s(e))}},9303:function(e,t,n){var r=n(4758);e.exports=function(e){var t=+e;return t!==t||0===t?0:r(t)}},7466:function(e,t,n){var r=n(9303),s=Math.min;e.exports=function(e){return e>0?s(r(e),9007199254740991):0}},7908:function(e,t,n){var r=n(4488),s=Object;e.exports=function(e){return s(r(e))}},7593:function(e,t,n){var r=n(6916),s=n(111),i=n(2190),a=n(8173),o=n(2140),l=n(5112),u=TypeError,c=l("toPrimitive");e.exports=function(e,t){if(!s(e)||i(e))return e;var n,l=a(e,c);if(l){if(void 0===t&&(t="default"),n=r(l,e,t),!s(n)||i(n))return n;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),o(e,t)}},4948:function(e,t,n){var r=n(7593),s=n(2190);e.exports=function(e){var t=r(e,"string");return s(t)?t:t+""}},1694:function(e,t,n){var r=n(5112),s=r("toStringTag"),i={};i[s]="z",e.exports="[object z]"===String(i)},1340:function(e,t,n){var r=n(648),s=String;e.exports=function(e){if("Symbol"===r(e))throw TypeError("Cannot convert a Symbol value to a string");return s(e)}},6330:function(e){var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},9711:function(e,t,n){var r=n(1702),s=0,i=Math.random(),a=r(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++s+i,36)}},3307:function(e,t,n){var r=n(6293);e.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(e,t,n){var r=n(9781),s=n(7293);e.exports=r&&s((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},8053:function(e){var t=TypeError;e.exports=function(e,n){if(e<n)throw t("Not enough arguments");return e}},4811:function(e,t,n){var r=n(7854),s=n(614),i=r.WeakMap;e.exports=s(i)&&/native code/.test(String(i))},5112:function(e,t,n){var r=n(7854),s=n(2309),i=n(2597),a=n(9711),o=n(6293),l=n(3307),u=s("wks"),c=r.Symbol,h=c&&c["for"],d=l?c:c&&c.withoutSetter||a;e.exports=function(e){if(!i(u,e)||!o&&"string"!=typeof u[e]){var t="Symbol."+e;o&&i(c,e)?u[e]=c[e]:u[e]=l&&h?h(t):d(t)}return u[e]}},9191:function(e,t,n){"use strict";var r=n(5005),s=n(2597),i=n(8880),a=n(7976),o=n(7674),l=n(9920),u=n(2626),c=n(9587),h=n(6277),d=n(8340),p=n(1060),f=n(2914),g=n(9781),m=n(1913);e.exports=function(e,t,n,b){var x="stackTraceLimit",y=b?2:1,v=e.split("."),w=v[v.length-1],k=r.apply(null,v);if(k){var I=k.prototype;if(!m&&s(I,"cause")&&delete I.cause,!n)return k;var S=r("Error"),C=t((function(e,t){var n=h(b?t:e,void 0),r=b?new k(e):new k;return void 0!==n&&i(r,"message",n),f&&i(r,"stack",p(r.stack,2)),this&&a(I,this)&&c(r,this,C),arguments.length>y&&d(r,arguments[y]),r}));if(C.prototype=I,"Error"!==w?o?o(C,S):l(C,S,{name:!0}):g&&x in k&&(u(C,k,x),u(C,k,"prepareStackTrace")),l(C,k),!m)try{I.name!==w&&i(I,"name",w),I.constructor=C}catch($){}return C}}},7658:function(e,t,n){"use strict";var r=n(2109),s=n(7908),i=n(6244),a=n(3658),o=n(7207),l=n(7293),u=l((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:u||c},{push:function(e){var t=s(this),n=i(t),r=arguments.length;o(n+r);for(var l=0;l<r;l++)t[n]=arguments[l],n++;return a(t,n),n}})},541:function(e,t,n){"use strict";var r=n(2109),s=n(7908),i=n(6244),a=n(3658),o=n(5117),l=n(7207),u=1!==[].unshift(0),c=!function(){try{Object.defineProperty([],"length",{writable:!1}).unshift()}catch(e){return e instanceof TypeError}}();r({target:"Array",proto:!0,arity:1,forced:u||c},{unshift:function(e){var t=s(this),n=i(t),r=arguments.length;if(r){l(n+r);var u=n;while(u--){var c=u+r;u in t?t[c]=t[u]:o(t,c)}for(var h=0;h<r;h++)t[h]=arguments[h]}return a(t,n+r)}})},1703:function(e,t,n){var r=n(2109),s=n(7854),i=n(2104),a=n(9191),o="WebAssembly",l=s[o],u=7!==Error("e",{cause:7}).cause,c=function(e,t){var n={};n[e]=a(e,t,u),r({global:!0,constructor:!0,arity:1,forced:u},n)},h=function(e,t){if(l&&l[e]){var n={};n[e]=a(o+"."+e,t,u),r({target:o,stat:!0,constructor:!0,arity:1,forced:u},n)}};c("Error",(function(e){return function(t){return i(e,this,arguments)}})),c("EvalError",(function(e){return function(t){return i(e,this,arguments)}})),c("RangeError",(function(e){return function(t){return i(e,this,arguments)}})),c("ReferenceError",(function(e){return function(t){return i(e,this,arguments)}})),c("SyntaxError",(function(e){return function(t){return i(e,this,arguments)}})),c("TypeError",(function(e){return function(t){return i(e,this,arguments)}})),c("URIError",(function(e){return function(t){return i(e,this,arguments)}})),h("CompileError",(function(e){return function(t){return i(e,this,arguments)}})),h("LinkError",(function(e){return function(t){return i(e,this,arguments)}})),h("RuntimeError",(function(e){return function(t){return i(e,this,arguments)}}))},2087:function(e,t,n){var r=n(7854),s=n(9781),i=n(7045),a=n(7066),o=n(7293),l=r.RegExp,u=l.prototype,c=s&&o((function(){var e=!0;try{l(".","d")}catch(c){e=!1}var t={},n="",r=e?"dgimsy":"gimsy",s=function(e,r){Object.defineProperty(t,e,{get:function(){return n+=r,!0}})},i={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var a in e&&(i.hasIndices="d"),i)s(a,i[a]);var o=Object.getOwnPropertyDescriptor(u,"flags").get.call(t);return o!==r||n!==r}));c&&i(u,"flags",{configurable:!0,get:a})},8675:function(e,t,n){"use strict";var r=n(260),s=n(6244),i=n(9303),a=r.aTypedArray,o=r.exportTypedArrayMethod;o("at",(function(e){var t=a(this),n=s(t),r=i(e),o=r>=0?r:n+r;return o<0||o>=n?void 0:t[o]}))},4590:function(e,t,n){"use strict";var r=n(260),s=n(9671).findLastIndex,i=r.aTypedArray,a=r.exportTypedArrayMethod;a("findLastIndex",(function(e){return s(i(this),e,arguments.length>1?arguments[1]:void 0)}))},3408:function(e,t,n){"use strict";var r=n(260),s=n(9671).findLast,i=r.aTypedArray,a=r.exportTypedArrayMethod;a("findLast",(function(e){return s(i(this),e,arguments.length>1?arguments[1]:void 0)}))},1091:function(e,t,n){var r=n(2109),s=n(7854),i=n(261).clear;r({global:!0,bind:!0,enumerable:!0,forced:s.clearImmediate!==i},{clearImmediate:i})},2801:function(e,t,n){"use strict";var r=n(2109),s=n(7854),i=n(5005),a=n(9114),o=n(3070).f,l=n(2597),u=n(5787),c=n(9587),h=n(6277),d=n(3678),p=n(1060),f=n(9781),g=n(1913),m="DOMException",b=i("Error"),x=i(m),y=function(){u(this,v);var e=arguments.length,t=h(e<1?void 0:arguments[0]),n=h(e<2?void 0:arguments[1],"Error"),r=new x(t,n),s=b(t);return s.name=m,o(r,"stack",a(1,p(s.stack,1))),c(r,this,y),r},v=y.prototype=x.prototype,w="stack"in b(m),k="stack"in new x(1,2),I=x&&f&&Object.getOwnPropertyDescriptor(s,m),S=!!I&&!(I.writable&&I.configurable),C=w&&!S&&!k;r({global:!0,constructor:!0,forced:g||C},{DOMException:C?y:x});var $=i(m),N=$.prototype;if(N.constructor!==$)for(var T in g||o(N,"constructor",a(1,$)),d)if(l(d,T)){var E=d[T],R=E.s;l($,R)||o($,R,a(6,E.c))}},4633:function(e,t,n){n(1091),n(2986)},2986:function(e,t,n){var r=n(2109),s=n(7854),i=n(261).set;r({global:!0,bind:!0,enumerable:!0,forced:s.setImmediate!==i},{setImmediate:i})},3792:function(e,t,n){"use strict";n.d(t,{FBF:function(){return $I},XeE:function(){return li}});var r={};n.r(r),n.d(r,{assertParamsValid:function(){return za},computeFlatOffset:function(){return Ya},computeOutShape:function(){return Ba},getNormalizedAxes:function(){return Ga},isSliceContinous:function(){return Ja},maskToAxes:function(){return Pa},parseSliceParams:function(){return Za},sliceInfo:function(){return Qa},startForAxis:function(){return qa},startIndicesWithElidedDims:function(){return Ha},stopForAxis:function(){return Xa},stopIndicesWithElidedDims:function(){return ja},stridesForAxis:function(){return Ka},stridesWithElidedDims:function(){return Wa}});var s={};n.r(s),n.d(s,{collectGatherOpShapeInfo:function(){return Zf},computeOutShape:function(){return Yf},segOpComputeOptimalWindowSize:function(){return Jf}});var i={};n.r(i),n.d(i,{ERF_A1:function(){return ff},ERF_A2:function(){return gf},ERF_A3:function(){return mf},ERF_A4:function(){return bf},ERF_A5:function(){return xf},ERF_P:function(){return pf},PARALLELIZE_THRESHOLD:function(){return Zp},RowPartitionType:function(){return Kp},SELU_SCALE:function(){return df},SELU_SCALEALPHA:function(){return hf},applyActivation:function(){return Mh},assertAndGetBroadcastShape:function(){return Oa},assertAxesAreInnerMostDims:function(){return ju},assertParamsConsistent:function(){return Hp},assignToTypedArray:function(){return Sf},axesAreInnerMostDims:function(){return Uu},calculateShapes:function(){return cf},checkEinsumDimSizes:function(){return Ff},checkPadOnDimRoundingMode:function(){return Ho},combineLocations:function(){return Vu},combineRaggedTensorToTensorShapes:function(){return qp},complexWithEvenIndex:function(){return wf},complexWithOddIndex:function(){return kf},computeConv2DInfo:function(){return _o},computeConv3DInfo:function(){return Ao},computeDefaultPad:function(){return Oo},computeDilation2DInfo:function(){return To},computeOptimalWindowSize:function(){return Qp},computeOutAndReduceShapes:function(){return Gu},computeOutShape:function(){return jp},computePool2DInfo:function(){return Eo},computePool3DInfo:function(){return Ro},convertConv2DDataFormat:function(){return Go},decodeEinsumEquation:function(){return _f},eitherStridesOrDilationsAreOne:function(){return Vo},expandShapeToKeepDim:function(){return Hu},exponent:function(){return $f},exponents:function(){return Cf},fromStringArrayToUint8:function(){return eg},fromUint8ToStringArray:function(){return Qf},getAxesPermutation:function(){return Ku},getBroadcastDims:function(){return Fa},getComplexWithIndex:function(){return If},getEinsumComputePath:function(){return Df},getEinsumPermutation:function(){return Af},getFusedBiasGradient:function(){return Oh},getFusedDyActivation:function(){return Dh},getImageCenter:function(){return ef},getInnerMostAxes:function(){return Xu},getPermuted:function(){return nf},getRaggedRank:function(){return Jp},getReductionAxes:function(){return Da},getReshaped:function(){return tf},getReshapedPermuted:function(){return rf},getRowPartitionTypesHelper:function(){return Xp},getSliceBeginCoords:function(){return sf},getSliceSize:function(){return af},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return zf},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Pf},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Bf},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return Vf},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Hf},getSparseReshapeInputOutputMultipleErrorMessage:function(){return Gf},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return Wf},getSparseReshapeNegativeOutputDimErrorMessage:function(){return Uf},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return Xf},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return jf},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return Kf},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return qf},getUndoAxesPermutation:function(){return qu},isIdentityPermutation:function(){return Of},log:function(){return Ir},mergeRealAndImagArrays:function(){return yf},prepareAndValidate:function(){return of},prepareSplitSize:function(){return Lf},segment_util:function(){return s},shouldFuse:function(){return Lh},slice_util:function(){return r},splitRealAndImagArrays:function(){return vf},tupleValuesAreOne:function(){return Uo},upcastType:function(){return Fs},validateDefaultValueShape:function(){return Yp},validateInput:function(){return uf},validateUpdateShape:function(){return lf},warn:function(){return kr}});var a={};n.r(a),n.d(a,{addImpl:function(){return fN},bincountImpl:function(){return vT},bincountReduceImpl:function(){return wT},castImpl:function(){return uN},ceilImpl:function(){return $T},concatImpl:function(){return FT},equalImpl:function(){return _E},expImpl:function(){return UE},expm1Impl:function(){return KE},floorImpl:function(){return fR},gatherNdImpl:function(){return SR},gatherV2Impl:function(){return NR},greaterEqualImpl:function(){return FR},greaterImpl:function(){return RR},lessEqualImpl:function(){return KR},lessImpl:function(){return GR},linSpaceImpl:function(){return JR},logImpl:function(){return QR},maxImpl:function(){return m_},maximumImpl:function(){return y_},minimumImpl:function(){return M_},multiplyImpl:function(){return wE},negImpl:function(){return q_},notEqualImpl:function(){return aA},prodImpl:function(){return kA},raggedGatherImpl:function(){return AA},raggedRangeImpl:function(){return MA},raggedTensorToTensorImpl:function(){return VA},rangeImpl:function(){return jA},rsqrtImpl:function(){return cF},scatterImpl:function(){return pF},sigmoidImpl:function(){return eN},simpleAbsImpl:function(){return SN},sliceImpl:function(){return gT},sparseFillEmptyRowsImpl:function(){return PF},sparseReshapeImpl:function(){return UF},sparseSegmentReductionImpl:function(){return HF},sqrtImpl:function(){return eD},squaredDifferenceImpl:function(){return sD},stridedSliceImpl:function(){return uD},stringNGramsImpl:function(){return pD},stringSplitImpl:function(){return bD},stringToHashBucketFastImpl:function(){return vD},subImpl:function(){return QE},tileImpl:function(){return ND},topKImpl:function(){return AD},transposeImpl:function(){return FN},uniqueImpl:function(){return HD}});n(1703),n(7658);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const o=1e-7,l=1e-4;class u{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class c{refCount(e){return h("refCount")}incRef(e){return h("incRef")}timerAvailable(){return!0}time(e){return h("time")}read(e){return h("read")}readSync(e){return h("readSync")}readToGPU(e,t){return h("readToGPU")}numDataIds(){return h("numDataIds")}disposeData(e,t){return h("disposeData")}write(e,t,n){return h("write")}move(e,t,n,r,s){return h("move")}createTensorFromTexture(e,t,n){return h("createTensorFromTexture")}memory(){return h("memory")}floatPrecision(){return h("floatPrecision")}epsilon(){return 32===this.floatPrecision()?o:l}dispose(){return h("dispose")}}function h(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}n(2087),n(8675),n(3408),n(4590);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,g(e,t,n)}function p(e,t,n){return Math.max(e,Math.min(t,n))}function f(e){return e%2===0?e:e+1}function g(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function m(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function b(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function x(e,t,n=""){b(k(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function y(e){b(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function v(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||O(e)&&!n)for(let r=0;r<e.length;++r)v(e[r],t,n);else t.push(e);return t}function w(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function I(e){return e%1===0}function S(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function C(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function $(e,t=(e=>0),n,r){return new Promise(((s,i)=>{let a=0;const o=()=>{if(e())return void s();a++;const l=t(a);null!=n&&a>=n?i():null!=r?r(o,l):setTimeout(o,l)};o()}))}function N(e,t){let n=1,r=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${i}`);r=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function T(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),b(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),b(e.every((e=>I(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||s?null:T(t,e).sort();let a=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[a]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),i[a]<=o&&a++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function R(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function O(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function M(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function L(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function z(e){return"string"===typeof e||e instanceof String}function P(e){return"boolean"===typeof e}function B(e){return"number"===typeof e}function W(e){return Array.isArray(e)?W(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":B(e)?"float32":z(e)?"string":P(e)?"bool":"float32"}function U(e){return!!(e&&e.constructor&&e.call&&e.apply)}function V(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function G(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function H(e,t,n,r=!1){const s=new Array;if(1===t.length){const i=t[0]*(r?2:1);for(let t=0;t<i;t++)s[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<i;t++)s[t]=H(e+t*o,a,n,r)}return s}function j(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return H(0,e,t,n)}function K(e,t){const n=q(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function X(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return j(e,new Float32Array(n));if("int32"===t)return j(e,new Int32Array(n));if("bool"===t)return j(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function J(e){e.forEach((t=>{b(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Y(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function Z(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"===typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ee="tfjsflags";class te{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ne,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Q(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ee in e){const t=e[ee].split(",");t.forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=se(t,n)}))}}}function ne(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(re(t,n[0],n[1]),n.join("=")))),t}function re(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function se(e,t){if(t=t.toLowerCase(),"true"===t||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function ie(){return oe}let ae,oe=null;function le(e){oe=e}function ue(){if(null==ae){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ae=e}return ae}function ce(){const e=ue();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function he(e,t){const n=ce();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const de="Abs",pe="Acos",fe="Acosh",ge="Add",me="AddN",be="All",xe="Any",ye="ArgMax",ve="ArgMin",we="Asin",ke="Asinh",Ie="Atan",Se="Atanh",Ce="Atan2",$e="AvgPool",Ne="AvgPoolGrad",Te="AvgPool3D",Ee="AvgPool3DGrad",Re="BatchMatMul",_e="BatchToSpaceND",Ae="Bincount",Fe="BroadcastTo",De="BroadcastArgs",Oe="Cast",Me="Ceil",Le="ClipByValue",ze="Complex",Pe="ComplexAbs",Be="Concat",We="Conv2D",Ue="Conv2DBackpropFilter",Ve="Conv2DBackpropInput",Ge="Conv3D",He="Conv3DBackpropFilterV2",je="Conv3DBackpropInputV2",Ke="Cos",qe="Cosh",Xe="Cumprod",Je="Cumsum",Ye="CropAndResize",Ze="DenseBincount",Qe="DepthToSpace",et="DepthwiseConv2dNative",tt="DepthwiseConv2dNativeBackpropFilter",nt="DepthwiseConv2dNativeBackpropInput",rt="Diag",st="Dilation2D",it="Dilation2DBackpropInput",at="Dilation2DBackpropFilter",ot="RealDiv",lt="Einsum",ut="Elu",ct="EluGrad",ht="Erf",dt="Equal",pt="Exp",ft="ExpandDims",gt="Expm1",mt="FFT",bt="Fill",xt="FlipLeftRight",yt="Floor",vt="FloorDiv",wt="FusedBatchNorm",kt="GatherV2",It="GatherNd",St="Greater",Ct="GreaterEqual",$t="Identity",Nt="IFFT",Tt="Imag",Et="IsFinite",Rt="IsInf",_t="IsNan",At="LeakyRelu",Ft="Less",Dt="LessEqual",Ot="LinSpace",Mt="Log",Lt="Log1p",zt="LogicalAnd",Pt="LogicalNot",Bt="LogicalOr",Wt="LogSoftmax",Ut="LRN",Vt="LRNGrad",Gt="Max",Ht="Maximum",jt="MaxPool",Kt="MaxPoolGrad",qt="MaxPool3D",Xt="MaxPool3DGrad",Jt="MaxPoolWithArgmax",Yt="Mean",Zt="Min",Qt="Minimum",en="MirrorPad",tn="Mod",nn="Multinomial",rn="Multiply",sn="Neg",an="NotEqual",on="NonMaxSuppressionV3",ln="NonMaxSuppressionV4",un="NonMaxSuppressionV5",cn="OnesLike",hn="OneHot",dn="Pack",pn="PadV2",fn="Pow",gn="Prelu",mn="Prod",bn="RaggedGather",xn="RaggedRange",yn="RaggedTensorToTensor",vn="Range",wn="Real",kn="Reciprocal",In="Relu",Sn="Reshape",Cn="ResizeNearestNeighbor",$n="ResizeNearestNeighborGrad",Nn="ResizeBilinear",Tn="ResizeBilinearGrad",En="Relu6",Rn="Reverse",_n="Round",An="Rsqrt",Fn="ScatterNd",Dn="SearchSorted",On="Select",Mn="Selu",Ln="Slice",zn="Sin",Pn="Sinh",Bn="Sign",Wn="Sigmoid",Un="Softplus",Vn="Sqrt",Gn="Sum",Hn="SpaceToBatchND",jn="SplitV",Kn="Softmax",qn="SparseFillEmptyRows",Xn="SparseReshape",Jn="SparseSegmentMean",Yn="SparseSegmentSum",Zn="SparseToDense",Qn="SquaredDifference",er="Square",tr="StridedSlice",nr="StringNGrams",rr="StringSplit",sr="StringToHashBucketFast",ir="Sub",ar="Tan",or="Tanh",lr="Tile",ur="TopK",cr="Transform",hr="Transpose",dr="Unique",pr="Unpack",fr="UnsortedSegmentSum",gr="ZerosLike",mr="Step",br="FromPixels",xr="RotateWithOffset",yr="_FusedMatMul",vr="FusedConv2D",wr="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kr(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(...e)}function Ir(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Sr=he("kernelRegistry",(()=>new Map)),Cr=he("gradRegistry",(()=>new Map));function $r(e,t){const n=_r(e,t);return Sr.get(n)}function Nr(e){return Cr.get(e)}function Tr(e){const t=Sr.entries(),n=[];while(1){const{done:r,value:s}=t.next();if(r)break;const[i,a]=s,[o]=i.split("_");o===e&&n.push(a)}return n}function Er(e){const{kernelName:t,backendName:n}=e,r=_r(t,n);Sr.has(r)&&kr(`The kernel '${t}' for backend '${n}' is already registered`),Sr.set(r,e)}function Rr(e){const{kernelName:t}=e;Cr.has(t)&&ie().getBool("DEBUG")&&kr(`Overriding the gradient for '${t}'`),Cr.set(t,e)}function _r(e,t){return`${t}_${e}`}var Ar=n(9438),Fr=n.n(Ar);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Dr=Fr()||Ar;function Or(e){return Dr.fromString(e,!0,16)}const Mr=Or("c3a5c85c97cb3127"),Lr=Or("b492b66fbe98f273"),zr=Or("9ae16a3b2f90404f");function Pr(e){return e.xor(e.shru(47))}function Br(e,t,n){const r=e.slice(t,t+n);return Dr.fromBytes(Array.from(r),!0,!0)}function Wr(e,t){return Br(e,t,8)}function Ur(e,t){return Br(e,t,4)}function Vr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Gr(e,t,n=Or("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Hr(e,t,n,r,s,i){s=s.add(e),i=Vr(i.add(s).add(r),21);const a=s;return s=s.add(t),s=s.add(n),i=i.add(Vr(s,44)),[s.add(r),i.add(a)]}function jr(e,t,n,r){return Hr(Wr(e,t),Wr(e,t+8),Wr(e,t+16),Wr(e,t+24),n,r)}function Kr(e,t=e.length){if(t>=8){const n=zr.add(2*t),r=Wr(e,0).add(zr),s=Wr(e,t-8),i=Vr(s,37).mul(n).add(r),a=Vr(r,25).add(s).mul(n);return Gr(i,a,n)}if(t>=4){const n=zr.add(2*t),r=Ur(e,0);return Gr(r.shl(3).add(t),Ur(e,t-4),n)}if(t>0){const n=e[0],r=e[t>>1],s=e[t-1],i=n+(r<<8),a=t+(s<<2);return Pr(zr.mul(i).xor(Mr.mul(a))).mul(zr)}return zr}function qr(e,t=e.length){const n=zr.add(2*t),r=Wr(e,0).mul(Lr),s=Wr(e,8),i=Wr(e,t-8).mul(n),a=Wr(e,t-16).mul(zr);return Gr(Vr(r.add(s),43).add(Vr(i,30)).add(a),r.add(Vr(s.add(zr),18)).add(i),n)}function Xr(e,t=e.length){const n=zr.add(2*t),r=Wr(e,0).mul(zr),s=Wr(e,8),i=Wr(e,t-8).mul(n),a=Wr(e,t-16).mul(zr),o=Vr(r.add(s),43).add(Vr(i,30)).add(a),l=Gr(o,r.add(Vr(s.add(zr),18)).add(i),n),u=Wr(e,16).mul(n),c=Wr(e,24),h=o.add(Wr(e,t-32)).mul(n),d=l.add(Wr(e,t-24)).mul(n);return Gr(Vr(u.add(c),43).add(Vr(h,30)).add(d),u.add(Vr(c.add(r),18)).add(h),n)}function Jr(e,t=e.length){const n=Dr.fromNumber(81,!0);if(t<=32)return t<=16?Kr(e,t):qr(e,t);if(t<=64)return Xr(e,t);let r=n,s=n.mul(Lr).add(113),i=Pr(s.mul(zr).add(113)).mul(zr),a=[Dr.UZERO,Dr.UZERO],o=[Dr.UZERO,Dr.UZERO];r=r.mul(zr).add(Wr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Vr(r.add(s).add(a[0]).add(Wr(e,l+8)),37).mul(Lr),s=Vr(s.add(a[1]).add(Wr(e,l+48)),42).mul(Lr),r=r.xor(o[1]),s=s.add(a[0]).add(Wr(e,l+40)),i=Vr(i.add(o[0]),33).mul(Lr),a=jr(e,l,a[1].mul(Lr),r.add(o[0])),o=jr(e,l+32,i.add(o[1]),s.add(Wr(e,l+16))),[i,r]=[r,i],l+=64}while(l!==u);const h=Lr.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),r=Vr(r.add(s).add(a[0]).add(Wr(e,l+8)),37).mul(h),s=Vr(s.add(a[1]).add(Wr(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(a[0].mul(9).add(Wr(e,l+40))),i=Vr(i.add(o[0]),33).mul(h),a=jr(e,l,a[1].mul(h),r.add(o[0])),o=jr(e,l+32,i.add(o[1]),s.add(Wr(e,l+16))),[i,r]=[r,i],Gr(Gr(a[0],o[0],h).add(Pr(s).mul(Mr)).add(i),Gr(a[1],o[1],h).add(r),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yr(e,t){return"string"===t?ts(e):Qr([e],t)}function Zr(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Qr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=v(e)),ie().getBool("DEBUG")&&A(e,t),Zr(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function es(){return ie().platform.now()}function ts(e,t="utf-8"){return t=t||"utf-8",ie().platform.encode(e,t)}function ns(e,t="utf-8"){return t=t||"utf-8",ie().platform.decode(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rs{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new is)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const a=es();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:es()-a})}if(ie().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<r.length;l++){const t=r[l];t.data().then((n=>{ss(n,t.dtype,e)}))}const o={kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))};return o}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),r,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function ss(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class is{logKernelProfile(e,t,n,r,s,i){const a="number"===typeof r?C(`${r}ms`,9):r["error"],o=C(e,25),l=t.rank,u=t.size,c=C(t.shape.toString(),14);let h="";for(const d in s){const e=s[d];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${d}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function as(e,t,n){const r={},s={};for(let l=0;l<t.length;l++)r[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],i=n.inputs;for(const e in i){const a=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[a.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(const e in n)i[n[e].id]=!0,a[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(s[t.id]&&a[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function os(e,t,n,r){for(let s=t.length-1;s>=0;s--){const i=t[s],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const a=i.inputs[t];if(!k(s.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=s;else{const t=e[a.id];e[a.id]=r(t,s),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ls=20,us=3,cs=7;function hs(e,t,n,r){const s=G(t),i=ds(e,t,n,s),a=t.length,o=gs(e,t,n,s,i),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function ds(e,t,n,r){const s=w(t),i=r[r.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?ms(e):e;if(o>1)for(let u=0;u<s/i;u++){const e=u*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],ps(l[e+t],0,n).length)}return a}function ps(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(cs))} + ${parseFloat(e[1].toFixed(cs))}j`:z(e)?`'${e}'`:"bool"===n?fs(e):parseFloat(e.toFixed(cs)).toString(),C(r,t)}function fs(e){return 0===e?"false":"true"}function gs(e,t,n,r,s,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){const t=ms(e);return[ps(t[0],0,n)]}return"bool"===n?[fs(e[0])]:[e[0].toString()]}if(1===l){if(o>ls){const t=us*a;let r=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-us)*a,o*a));return"complex64"===n&&(r=ms(r),i=ms(i)),["["+r.map(((e,t)=>ps(e,s[t],n))).join(", ")+", ..., "+i.map(((e,t)=>ps(e,s[o-us+t],n))).join(", ")+"]"]}const t="complex64"===n?ms(e):Array.from(e);return["["+t.map(((e,t)=>ps(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*a,d=[];if(o>ls){for(let t=0;t<us;t++){const r=t*h,i=r+h;d.push(...gs(e.slice(r,i),u,n,c,s,!1))}d.push("...");for(let t=o-us;t<o;t++){const r=t*h,i=r+h;d.push(...gs(e.slice(r,i),u,n,c,s,t===o-1))}}else for(let g=0;g<o;g++){const t=g*h,r=t+h;d.push(...gs(e.slice(t,r),u,n,c,s,g===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function ms(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=w(e),null!=n){const e=n.length;b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||_(t,this.size),this.strides=G(e)}set(e,...t){0===t.length&&(t=[0]),b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return xs().makeTensor(this.values,this.shape,this.dtype)}}let xs=null,ys=null,vs=null;function ws(e){xs=e}function ks(e){ys=e}function Is(e){vs=e}class Ss{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=w(e),this.strides=G(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ys.buffer(this.shape,this.dtype,e)}bufferSync(){return ys.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return j(this.shape,e,"complex64"===this.dtype)}arraySync(){return j(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=xs().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>ns(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),xs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=xs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>ns(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await xs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(xs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ys.print(this,e)}clone(){return this.throwIfDisposed(),ys.clone(this)}toString(e=!1){const t=this.dataSync();return hs(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ys.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),xs().makeVariable(this,e,t,n)}}function Cs(){return he("Tensor",(()=>Ss))}Object.defineProperty(Ss,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Cs();class $s extends Ss{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);xs().disposeTensor(this),this.dataId=e.dataId,xs().incRef(this,null)}dispose(){xs().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Ns,Ts,Es,Rs,_s;Object.defineProperty($s,Symbol.hasInstance,{value:e=>e instanceof Ss&&null!=e.assign&&e.assign instanceof Function}),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(Ns||(Ns={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(Ts||(Ts={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(Es||(Es={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(Rs||(Rs={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(_s||(_s={}));const As={float32:Rs,int32:Ts,bool:Es,complex64:_s};function Fs(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return As[e][t]}function Ds(e){return Fs(e,"int32")}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Os(e,t){if(e.dtype===t.dtype)return[e,t];const n=Fs(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ms(e,t){return t.some((t=>t.id===e.id))}function Ls(e){const t=[],n=new Set;return zs(e,t,n),t}function zs(e,t,n){if(null==e)return;if(e instanceof Ss)return void t.push(e);if(!Ps(e))return;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),zs(e,t,n))}}function Ps(e){return Array.isArray(e)||"object"===typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bs(e){return null!=e.kernelName}class Ws{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Us{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ws}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],r=await this.initializeBackend(n).success;if(r)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(kr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),r=n?await t:t;if(!r)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new rs(this.backendInstance),!0}setupRegisteredKernels(){const e=Tr(this.backendName);e.forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){const t=Tr(e);t.forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof c||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,kr(`Initialization of backend ${e} failed`),kr(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return kr(`Initialization of backend ${e} failed`),kr(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),i=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return Us.nextTensorId++}nextVariableId(){return Us.nextVariableId++}clone(e){const t=Hs.runKernel($t,{x:e}),n={x:e},r=e=>({x:()=>{const t="float32",n={x:e},r={dtype:t};return Hs.runKernel(Oe,n,r)}}),s=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,s,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const r=null!=$r(e,this.backendName);if(!r)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-s-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Bs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Bs(e)){const{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;const l=$r(t,this.backendName);b(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Bs(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=Nr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let i;r.saveAllInputs?(b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>s[t]));return i.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&z(e[0])&&(s=e.map((e=>ts(e))));const i=r.write(s,t,n),a=new Ss(t,n,i,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(i),t=L(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){n=n||"float32";const s={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,i=new Ss(r,s,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new $s(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*M(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof $s||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*M(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=Nr(e);null!=o&&(r=o.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=q(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ls(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));b(s instanceof Ss,(()=>"The result y returned by f() must be a tensor."));const i=as(this.state.activeTape,t,s);if(!r&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?Vs(s.shape):n,os(e,i,(e=>this.tidy(e)),js);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return b(U(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;b(t.every((e=>e instanceof Ss)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));const s=(r,s)=>(n=e(...t,s),b(n.value instanceof Ss,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),b(U(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),i=(e,r)=>{const s=n.gradFunc(e,r),i=Array.isArray(s)?s:[s];b(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),b(i.every((e=>e instanceof Ss)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a};return this.runKernelFunc({forwardFunc:s,backwardsFunc:i,inputs:r})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){const t=es(),n=await this.backend.time(e);return n.wallMs=es()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ws;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Vs(e){const t=K(w(e),"float32");return Hs.makeTensor(t,e,"float32")}function Gs(){const e=ue();if(null==e._tfengine){const t=new te(e);e._tfengine=new Us(t)}return le(e._tfengine.ENV),ws((()=>e._tfengine)),e._tfengine}Us.nextTensorId=0,Us.nextVariableId=0;const Hs=Gs();function js(e,t){const n={a:e,b:t};return Hs.runKernel(ge,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ks(){return"undefined"!==typeof navigator&&null!=navigator}let qs;function Xs(e){if(void 0!==qs)return qs;if(e||Ks()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Js(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ys=ie();Ys.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Ys.registerFlag("IS_BROWSER",(()=>Js())),Ys.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),Ys.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Ys.registerFlag("PROD",(()=>!1)),Ys.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Ys.getBool("DEBUG"))),Ys.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Ys.registerFlag("IS_TEST",(()=>!1)),Ys.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Ys.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Ys.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),Ys.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Ys.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));n(2801);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zs(e,t){let n=e;if(O(e))return"string"===t?[]:[e.length];if("object"===typeof e&&"texture"in e){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(!Array.isArray(e))return[];const r=[];while(Array.isArray(n)||O(n)&&"string"!==t)r.push(n.length),n=n[0];return Array.isArray(e)&&ie().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Qs(e,r,[]),r}function Qs(e,t,n){if(n=n||[],!Array.isArray(e)&&!O(e))return void b(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));b(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),b(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)Qs(e[s],r,n.concat(s))}function ei(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ti(e,t,n,r="numeric"){if(e instanceof Ss)return ei(r,e.dtype,t,n),e;let s=W(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ei(r,s,t,n),null==e||!O(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const i=Zs(e,s);O(e)||Array.isArray(e)||(e=[e]);const a=!0,o="string"!==s?Qr(e,s):v(e,[],a);return Hs.makeTensor(o,i,s)}function ni(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const s=e;return s.map(((e,s)=>ti(e,`${t}[${s}]`,n,r)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ri="__op";function si(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=ri;const s=(...e)=>{Hs.startScope(n);try{const t=r(...e);return Q(t)&&console.error("Cannot return a Promise inside of tidy."),Hs.endScope(t),t}catch(t){throw Hs.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ii(e,t){const n=ti(e,"real","complex"),r=ti(t,"imag","complex");x(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Hs.runKernel(ze,s)}const ai=si({complex_:ii});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oi(e,t,n,r){if(null==r&&(r=W(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"===typeof e&&"texture"in e){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return e.channels=e.channels||"RGBA",Hs.backend.createTensorFromTexture(e,t||n,r)}if(!O(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){J(t);const e=w(t),r=w(n);b(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==w(t.slice(s));b(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return O(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Qr(e,r):v(e,[],!0),Hs.makeTensor(e,t,r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function li(e,t,n){const r=Zs(e,n);return oi(e,t,r,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ui={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},ci=4;async function hi(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+ci*t.length,r=new Uint8Array(n);let s=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=ci,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}const i=await Promise.all(r);return{data:pi(i),specs:n}}function di(e,t){const n={};let r,s=0;for(const i of t){const t=i.name,a=i.dtype,o=i.shape,l=w(o);let u;if("quantization"in i){const n=i.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${i.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${i.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${i.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const o=ui[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ni()),u=r(h)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*o}else if("string"===a){const t=w(i.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+ci))[0];s+=ci;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=ui[a],i=e.slice(s,s+l*r);if("float32"===a)u=new Float32Array(i);else if("int32"===a)u=new Int32Array(i);else if("bool"===a)u=new Uint8Array(i);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{u=new Float32Array(i);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=li(e,o,"float32"),a=li(r,o,"float32");n[t]=ai(s,a),s.dispose(),a.dispose()}}s+=l*r}"complex64"!==a&&(n[t]=li(u,o,a))}return n}function pi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const fi="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function gi(e){return fi?Buffer.byteLength(e):new Blob([e]).size}function mi(e){if(fi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function bi(e){if(fi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function xi(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function yi(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function vi(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function wi(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),vi(e,n,r)}function ki(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:gi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:gi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ii(e){const t=[];for(const n of e)t.push(...n.weights);return t}function Si(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Ci(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function $i(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function Ni(){const e=Si(),t=Ci(),n=$i();return r=>{const s=new ArrayBuffer(4*r.length),i=new Uint32Array(s);for(let a=0;a<r.length;a++){const s=r[a],o=e[n[s>>10]+(1023&s)]+t[s>>10];i[a]=o}return new Float32Array(s)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ti{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ti.instance&&(Ti.instance=new Ti),Ti.instance}static registerSaveRouter(e){Ti.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ti.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ti.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ti.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[],s="load"===t?Ti.getInstance().loadRouters:Ti.getInstance().saveRouters;return s.forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Ei=e=>Ti.getSaveHandlers(e),Ri=(e,t)=>Ti.getLoadHandlers(e,t),_i="tensorflowjs",Ai=1,Fi="models_store",Di="model_info_store";function Oi(){if(!ie().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Mi(e){const t=e.result;t.createObjectStore(Fi,{keyPath:"modelPath"}),t.createObjectStore(Di,{keyPath:"modelPath"})}class Li{constructor(e){if(this.indexedDB=Oi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(_i,Ai);r.onupgradeneeded=()=>Mi(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Fi,"readonly"),r=t.objectStore(Fi),i=r.get(this.modelPath);i.onsuccess=()=>{if(null==i.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(i.result.modelArtifacts)},i.onerror=e=>(s.close(),n(i.error)),t.oncomplete=()=>s.close()}else{const r=ki(t),i=s.transaction(Di,"readwrite");let a=i.objectStore(Di);const o=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Fi,"readwrite");const o=l.objectStore(Fi),u=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{a=i.objectStore(Di);const t=a.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Li.URL_SCHEME="indexeddb://";const zi=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Li.URL_SCHEME)?Pi(e.slice(Li.URL_SCHEME.length)):null;function Pi(e){return new Li(e)}function Bi(e){return e.startsWith(Li.URL_SCHEME)?e.slice(Li.URL_SCHEME.length):e}Ti.registerSaveRouter(zi),Ti.registerLoadRouter(zi);class Wi{constructor(){this.indexedDB=Oi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(_i,Ai);n.onupgradeneeded=()=>Mi(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Di,"readonly"),i=s.objectStore(Di),a=i.getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=Bi(e),new Promise(((t,n)=>{const r=this.indexedDB.open(_i,Ai);r.onupgradeneeded=()=>Mi(r),r.onsuccess=()=>{const s=r.result,i=s.transaction(Di,"readwrite"),a=i.objectStore(Di),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),i=()=>{l=s.transaction(Fi,"readwrite");const r=l.objectStore(Fi),i=r.delete(e);i.onsuccess=()=>t(o.result.modelArtifactsInfo),i.onerror=e=>n(o.error)};r.onsuccess=i,r.onerror=e=>(i(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),i.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ui="/",Vi="tensorflowjs_models",Gi="info",Hi="model_topology",ji="weight_specs",Ki="weight_data",qi="model_metadata";function Xi(e){return{info:[Vi,e,Gi].join(Ui),topology:[Vi,e,Hi].join(Ui),weightSpecs:[Vi,e,ji].join(Ui),weightData:[Vi,e,Ki].join(Ui),modelMetadata:[Vi,e,qi].join(Ui)}}function Ji(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function Yi(e){const t=e.split(Ui);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ui)}function Zi(e){return e.startsWith(Qi.URL_SCHEME)?e.slice(Qi.URL_SCHEME.length):e}class Qi{constructor(e){if(!ie().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Xi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=ki(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,mi(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:s}}catch(t){throw Ji(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=bi(i),t}}Qi.URL_SCHEME="localstorage://";const ea=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qi.URL_SCHEME)?ta(e.slice(Qi.URL_SCHEME.length)):null;function ta(e){return new Qi(e)}Ti.registerSaveRouter(ea),Ti.registerLoadRouter(ea);class na{constructor(){b(ie().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),b("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Vi+Ui,n=Ui+Gi;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){const t=Yi(s);e[t]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){e=Zi(e);const t=Xi(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return Ji(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ra="://";class sa{constructor(){this.managers={}}static getInstance(){return null==sa.instance&&(sa.instance=new sa),sa.instance}static registerManager(e,t){b(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ra)&&(e=e.slice(0,e.indexOf(ra))),b(e.length>0,(()=>"scheme must not be an empty string."));const n=sa.getInstance();b(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=sa.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(sa.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ia{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ie().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}}if(ie().get("IS_BROWSER")){ie().setPlatform("browser",new ia);try{sa.registerManager(Qi.URL_SCHEME,new na)}catch(SX){}try{sa.registerManager(Li.URL_SCHEME,new Wi)}catch(SX){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const aa={importFetch:()=>n(5410)};let oa;class la{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ie().global.fetch?ie().global.fetch(e,t):(null==oa&&(oa=aa.importFetch()),oa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ua(e,t="float32",n){return t=t||"float32",J(e),new bs(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ca(e,t){const n=ti(e,"x","cast");if(!F(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Hs.runKernel(Oe,r,s)}ie().get("IS_NODE")&&!ie().get("IS_BROWSER")&&ie().setPlatform("node",new la);const ha=si({cast_:ca});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function da(e){const t=ti(e,"x","clone","string_or_numeric"),n={x:t};return Hs.runKernel($t,n)}const pa=si({clone_:da});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fa(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Gs();const ga={buffer:ua,cast:ha,clone:pa,print:fa};ks(ga);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ma="model",ba=".json",xa=".weights.bin";function ya(e){return new Promise((e=>setTimeout(e))).then(e)}class va{constructor(e){if(!ie().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(va.URL_SCHEME)&&(e=e.slice(va.URL_SCHEME.length)),null!=e&&0!==e.length||(e=ma),this.modelJsonFileName=e+ba,this.weightDataFileName=e+xa}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=yi(e,n),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await ya((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ya((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ki(e)}}}}va.URL_SCHEME="downloads://";const wa=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(va.URL_SCHEME)?ka(e.slice(va.URL_SCHEME.length)):null;function ka(e="model"){return new va(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ia(e,t,n,r){a(e),n=null==n?0:n,r=null==r?1:r,o(n,r);let s=0;const i=i=>(i.then((i=>{const a=n+ ++s/e.length*(r-n);return t(a),i})),i);function a(e){b(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){b(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),b(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),b(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(i))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Sa(e,t){null==t&&(t={});const n=null==t.fetchFunc?ie().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=0,i=.5,a=null==t.onProgress?await Promise.all(r):await Ia(r,t.onProgress,s,i),o=a.map((e=>e.arrayBuffer())),l=.5,u=1,c=null==t.onProgress?await Promise.all(o):await Ia(o,t.onProgress,l,u);return c}Ti.registerSaveRouter(wa);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ca="application/octet-stream",$a="application/json";class Na{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(b("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ie().platform.fetch,b(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&b(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=yi(e,n);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:$a}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:Ca}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ki(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(s){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return wi(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=Ta(t),s=this.weightPathPrefix||n,i=Ii(e),a=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(s+e+r);this.weightUrlConverter&&a.push(...await Promise.all(o));const l=await Sa(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,xi(l)]}}function Ta(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}function Ea(e){return null!=e.match(Na.URL_SCHEME_REGEX)}Na.URL_SCHEME_REGEX=/^https?:\/\//;const Ra=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ea(e))):Ea(e),n)return _a(e,t)}return null};function _a(e,t){return new Na(e,t)}function Aa(e,t){return _a(e,t)}Ti.registerSaveRouter(Ra),Ti.registerLoadRouter(Ra);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
n(541);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fa(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const i=n-1-s,a=e[i]||1,o=t[t.length-1-s]||1;o>1&&1===a&&r.unshift(i)}return r}function Da(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],i=t.length-r-1,a=t[i];(null==s||1===s&&a>1)&&n.unshift(i)}return n}function Oa(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===r)n.unshift(i);else if(1===i)n.unshift(r);else{if(r!==i){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}n.unshift(r)}}return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ma=-2,La=-1;function za(e,t,n){const r=e.shape.length;b(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),b(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)b(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function Pa(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function Ba(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Wa(e,t,n,r){const s=[...e];for(let i=s.length;i<r.length;i++)s.push(1);for(let i=0;i<n;i++)0===i?s[t]=1:(s.splice(t,0,1),s.pop());return s}function Ua(e,t,n){return n<=e?n:n-(t-1)}function Va(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ga(e,t,n,r,s,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Ha(a,l,u,r,e),h=ja(o,l,u,s,e),d=Wa(i,l,u,e)}else for(let p=0;p<u;p++)c[p]=qa(a,r,i,e,p,l),h[p]=Xa(o,s,i,e,p,l),d[p]=Ka(i,p,l);return{begin:c,end:h,strides:d}}function Ha(e,t,n,r,s){const i=[...s],a=Va(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const s=Ua(t,n,o);let a=r[s];e&1<<s&&(a=0),i[o]=a}return i}function ja(e,t,n,r,s){const i=[...s],a=Va(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const s=Ua(t,n,o);let a=r[s];e&1<<s&&(a=Number.MAX_SAFE_INTEGER),i[o]=a}for(let o=0;o<i.length;o++){const e=s[o];i[o]<0&&(i[o]+=e),i[o]=p(0,i[o],s[o])}return i}function Ka(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function qa(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=p(0,a,l-1),a}function Xa(e,t,n,r,s,i){let a=t[s];const o=n[s]||1;(e&1<<s||i&1<<s||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return a<0&&(a+=l),a=o>0?p(0,a,l):p(-1,a,l-1),a}function Ja(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Ya(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Za(e,t,n){let r;const s=e.shape.length;let i;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function Qa(e,t,n,r,s,i,a,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let y=0;y<h.dims;y++)c&&0!==(1<<y&o)&&h.numAddAxisAfterEllipsis++,1<<y&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};eo(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let y=0;y<e.length;++y){if(0===d.strides[y])throw Error(`strides[${y}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<y),n=e[y];if(-1===n){m.push(t?1:-1);continue}const r=[d.beginMask&1<<y,d.endMask&1<<y],s=[d.strides[y]>0?0:-1,d.strides[y]>0?n:n-1];if(t&&d.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[y];const i=!!(d.beginMask&1<<y&&d.endMask&1<<y);if(d.beginValid&&d.endValid){if(t){const e=d.begin[y]<0?n+d.begin[y]:d.begin[y];if(d.begin[y]=e,d.end[y]=d.begin[y]+1,e<0||e>=n)throw Error(`slice index ${d.begin[y]} of dimension ${y} out of bounds.`)}else d.begin[y]=to(d.begin[y],0,d.strides[y],n,r,s),d.end[y]=to(d.end[y],1,d.strides[y],n,r,s);const e=1===d.strides[y]&&0===d.begin[y]&&d.end[y]===n;p=p&&e,f=f&&(0===y&&1===d.strides[y]||e)}else p=p&&1===d.strides[y]&&i,f=f&&(0===y&&1===d.strides[y]||i);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[y]-d.begin[y],o=!0):t?(a=1,o=!0):i&&n>=0&&(a=d.strides[y]<0?-n:n,o=!0),o){let e;e=0===a||a<0!==d.strides[y]<0?0:Math.trunc(a/d.strides[y])+(a%d.strides[y]!==0?1:0),m.push(e)}else m.push(-1)}for(let y=0;y<d.finalShapeGatherIndices.length;++y){const e=d.finalShapeGatherIndices[y];e>=0?b.push(m[e]):e===Ma&&b.push(1)}const x=b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==Ma));return{finalShapeSparse:x,finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function eo(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(Ma),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(La),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function to(e,t,n,r,s,i){if(s[t])return n>0?i[t]:i[t+1&1];{const t=e<0?r+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class no{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ro{constructor(){this.classNameMap={}}static getMap(){return null==ro.instance&&(ro.instance=new ro),ro.instance}static register(e){ro.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function so(e){b(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),b("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),b(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ro.register(e)}function io(e){ie().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ao(){return Hs}function oo(){return Hs.memory()}function lo(e,t){return Hs.tidy(e,t)}function uo(e){const t=Ls(e);t.forEach((e=>e.dispose()))}function co(e){return Hs.keep(e)}function ho(e,t,n=1){return Hs.registerBackend(e,t,n)}function po(){return Hs.backend}function fo(e,t){b(U(e),(()=>"The f passed in variableGrads(f) must be a function")),b(null==t||Array.isArray(t)&&t.every((e=>e instanceof $s)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Hs.registeredVariables)t.push(Hs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const i=!0,{value:a,grads:o}=Hs.gradients(e,t,null,i);b(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),b(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=o[t]&&(l[e.name]=o[t])})),null!=r&&r.forEach((e=>l[e.name]=null)),{value:a,grads:l}}function go(e){return Hs.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mo(e,t){if((O(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&O(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],r=[];return oi(e,n,r,t)}Is(io);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bo extends no{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return uo(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return fo(e,t)}dispose(){null!=this.iterations_&&uo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xo(e){const t=ti(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Hs.runKernel(Pe,e)}{const e={x:t};return Hs.runKernel(de,e)}}Object.defineProperty(bo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const yo=si({abs_:xo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vo(e,t){let n=ti(e,"a","add"),r=ti(t,"b","add");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(ge,s)}const wo=si({add_:vo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ko(e,t=null,n=!1){const r=ti(e,"x","all","bool"),s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(be,s,i)}const Io=si({all_:ko});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function So(e,t=null,n=!1){const r=ti(e,"x","any","bool"),s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(xe,s,i)}const Co=si({any_:So});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $o(e,t=0){const n=ti(e,"x","argMax"),r={x:n},s={axis:t};return Hs.runKernel(ye,r,s)}const No=si({argMax_:$o});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function To(e,t,n,r,s="NHWC",i){const a=e[3],o=[...t,a],l=Go(s);return _o(e,o,n,i,r,null,null,l)}function Eo(e,t,n,r,s,i,a="channelsLast"){const[o,l]=Mo(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return _o(e,u,n,r,s,i,!1,a)}function Ro(e,t,n,r,s,i,a="NDHWC"){const[o,l,u]=Lo(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Ao(e,c,n,r,s,!1,h,i)}function _o(e,t,n,r,s,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Mo(n),[b,x]=Mo(r),y=zo(d,b),v=zo(p,x),{padInfo:w,outHeight:k,outWidth:I}=Po(s,u,c,g,m,y,v,i,o),S=a?f*h:f;let C;return"channelsFirst"===o?C=[l,S,k,I]:"channelsLast"===o&&(C=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:C,filterShape:t}}function Ao(e,t,n,r,s,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=Lo(n),[v,w,k]=Lo(r),I=zo(p,v),S=zo(f,w),C=zo(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=Bo(s,u,c,h,b,x,y,I,S,C,o),R=i?m*d:m;let _;return"channelsFirst"===a?_=[l,R,N,T,E]:"channelsLast"===a&&(_=[l,N,T,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:C,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:_,filterShape:t}}function Fo(e,t,n,r,s){null==r&&(r=Oo(e,t,n));const i=e[0],a=e[1],o=Wo((i-t+2*r)/n+1,s),l=Wo((a-t+2*r)/n+1,s);return[o,l]}function Do(e,t,n,r,s,i){null==s&&(s=Oo(e,t,r));const a=e[0],o=e[1],l=e[2],u=Wo((a-t+2*s)/r+1,i),c=Wo((o-t+2*s)/r+1,i),h=Wo((l-t+2*s)/r+1,i);return[u,c,h,n]}function Oo(e,t,n,r=1){const s=zo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Mo(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Lo(e){return"number"===typeof e?[e,e,e]:e}function zo(e,t){return t<=1?e:e+(e-1)*(t-1)}function Po(e,t,n,r,s,i,a,o,l){let u,c,h;if("number"===typeof e){const s=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,type:s};const a=Fo([t,n],i,r,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+i-t),o=Math.max(0,(h-1)*s+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2),f=o-p;u={top:l,bottom:d,left:p,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/r),h=Math.ceil((n-a+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1],m=0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT";u={top:d,bottom:p,left:f,right:g,type:m},c=Wo((t-i+d+p)/r+1,o),h=Wo((n-a+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}function Bo(e,t,n,r,s,i,a,o,l,u,c){let h,d,p,f;if("number"===typeof e){const i=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:i};const a=Do([t,n,r,1],o,1,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/i),f=Math.ceil(r/a);const e=(d-1)*s+o-t,c=(p-1)*i+l-n,g=(f-1)*a+u-r,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,v=Math.floor(g/2),w=g-v;h={top:x,bottom:y,left:v,right:w,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/i),f=Math.ceil((r-u+1)/a)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Wo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Uo(e){const[t,n,r]=Mo(e);return 1===t&&1===n&&1===r}function Vo(e,t){return Uo(e)||Uo(t)}function Go(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ho(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)b(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{b(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jo(e,t){const n=ti(e,"x","reshape","string_or_numeric"),r={x:n},s={shape:t};return Hs.runKernel(Sn,r,s)}const Ko=si({reshape_:jo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qo(e,t,n,r,s){const i=ti(e,"x","avgPool","float32"),a=1;b(Vo(n,a),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));let o=i,l=!1;3===i.rank&&(l=!0,o=Ko(i,[1,i.shape[0],i.shape[1],i.shape[2]])),b(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Ho("avgPool",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let h=Hs.runKernel($e,u,c);return h=ha(h,i.dtype),l?Ko(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Xo=si({avgPool_:qo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jo(e,t,n,r,s,i="NDHWC"){const a=ti(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),b(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),b("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Ho("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i};let h=Hs.runKernel(Te,u,c);return h=ha(h,o.dtype),l?Ko(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Yo=si({avgPool3d_:Jo});function Zo(e){let t;return t=0===e.rank||1===e.rank?Ko(e,[1,1,1,e.size]):2===e.rank?Ko(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qo(e,t,n,r,s,i){null==i&&(i=.001);const a=ti(e,"x","batchNorm"),o=ti(t,"mean","batchNorm"),l=ti(n,"variance","batchNorm");let u,c;null!=s&&(u=ti(s,"scale","batchNorm")),null!=r&&(c=ti(r,"offset","batchNorm")),b(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),b(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),b(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=Zo(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},f=Hs.runKernel(wt,d,p);return Ko(f,a.shape)}const el=si({batchNorm_:Qo});function tl(e,t,n,r,s,i){const a=ti(e,"x","batchNorm"),o=ti(t,"mean","batchNorm"),l=ti(n,"variance","batchNorm");let u,c;return null!=s&&(u=ti(s,"scale","batchNorm")),null!=r&&(c=ti(r,"offset","batchNorm")),b(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),b(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),el(a,o,l,c,u,i)}const nl=si({batchNorm2d_:tl});function rl(e,t,n,r,s,i){const a=ti(e,"x","batchNorm"),o=ti(t,"mean","batchNorm"),l=ti(n,"variance","batchNorm");let u,c;return null!=s&&(u=ti(s,"scale","batchNorm")),null!=r&&(c=ti(r,"offset","batchNorm")),b(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),b(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),el(a,o,l,c,u,i)}const sl=si({batchNorm3d_:rl});function il(e,t,n,r,s,i){const a=ti(e,"x","batchNorm"),o=ti(t,"mean","batchNorm"),l=ti(n,"variance","batchNorm");let u,c;return null!=s&&(u=ti(s,"scale","batchNorm")),null!=r&&(c=ti(r,"offset","batchNorm")),b(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),b(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),el(a,o,l,c,u,i)}const al=si({batchNorm4d_:il});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ol(e,t){let n=ti(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Ko(n,e)}const s=n.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(s[u]===t[u])i[u]=1;else if(1!==n.shape[u])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);const a=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===a.length)return pa(n);const o={x:n},l={reps:i};return Hs.runKernel(lr,o,l)}const ll=si({broadcastTo_:ol});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ul(e,t,n){const r={shape:e,value:t,dtype:n};return Hs.runKernel(bt,{},r)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cl(e,t,n){const r=ti(e,"x","clipByValue");if(b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return ul(r.shape,t,r.dtype);const s={x:r},i={clipValueMin:t,clipValueMax:n};return Hs.runKernel(Le,s,i)}const hl=si({clipByValue_:cl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dl(e,t=0){b(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ni(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return pa(n[0]);const r=n,s={axis:t};return Hs.runKernel(Be,r,s)}const pl=si({concat_:dl});function fl(e){return pl(e,0)}const gl=si({concat1d_:fl});function ml(e,t){return pl(e,t)}const bl=si({concat2d_:ml});function xl(e,t){return pl(e,t)}const yl=si({concat3d_:xl});function vl(e,t){return pl(e,t)}const wl=si({concat4d_:vl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kl(e,t,n,r,s="NHWC",i=[1,1],a){const o=ti(e,"x","conv2d","float32"),l=ti(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),b(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),b(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ho("conv2d",r,a);const h="NHWC"===s?u.shape[3]:u.shape[1];b(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),b(Vo(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Hs.runKernel(We,d,p);return c?Ko(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Il=si({conv2d_:kl});function Sl(e,t,n,r,s="NWC",i=1,a){const o=ti(e,"x","conv1d"),l=ti(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Ko(o,[1,o.shape[0],o.shape[1]])),b(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),b(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Ho("conv1d",r,a),b(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),b(Vo(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),b("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Ko(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Ko(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=[1,n],f=[1,i],g="NHWC",m=Il(d,h,p,r,g,f,a);return Ko(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}const Cl=si({conv1d_:Sl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $l(e,t,n,r,s,i="NHWC",a){b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),b(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),b(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];b(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),b(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ho("conv2dDerInput",s,a);const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,inputShape:o},f=Hs.runKernel(Ve,d,p);return u?Ko(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Nl=si({conv2DBackpropInput_:$l});function Tl(e,t,n,r,s,i){const a=ti(e,"x","conv2dTranspose"),o=ti(t,"filter","conv2dTranspose");return Nl(n,a,o,r,s,"NHWC",i)}const El=si({conv2dTranspose_:Tl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rl(e,t,n,r,s="NDHWC",i=[1,1,1]){const a=ti(e,"x","conv3d"),o=ti(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),b(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),b(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),b(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),b(Vo(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),b("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:i},d=Hs.runKernel(Ge,c,h);return u?Ko(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const _l=si({conv3d_:Rl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Al(e,t,n,r,s){b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];b(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),b(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),b(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),b(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:s,strides:r,inputShape:i},d=Hs.runKernel(je,c,h);return o?Ko(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Fl=si({conv3DBackpropInput_:Al});function Dl(e,t,n,r,s){const i=ti(e,"x","conv3dTranspose"),a=ti(t,"filter","conv3dTranspose");return Fl(n,i,a,r,s)}const Ol=si({conv3dTranspose_:Dl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ml(e,t,n,r=!1){const s=ti(e,"x","denseBincount"),i=ti(t,"weights","denseBincount");b("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),b(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),b(i.size===s.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${i.shape}.`));const a={x:s,weights:i},o={size:n,binaryOutput:r};return Hs.runKernel(Ze,a,o)}const Ll=si({denseBincount_:Ml});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zl(e,t,n,r,s="NHWC",i=[1,1],a){const o=ti(e,"x","depthwiseConv2d","float32"),l=ti(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),b(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),b(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];b(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Ho("depthwiseConv2d",r,a);const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a},f=Hs.runKernel(et,d,p);return c?Ko(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Pl=si({depthwiseConv2d_:zl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bl(e,t){let n=ti(e,"a","floorDiv"),r=ti(t,"b","floorDiv");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(vt,s)}const Wl=si({floorDiv_:Bl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ul(e,t){let n=ti(e,"a","div"),r=ti(t,"b","div");if([n,r]=Os(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Wl(n,r);const s={a:n,b:r},i={};return Hs.runKernel(ot,s,i)}const Vl=si({div_:Ul});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gl(e){const t=ti(e,"x","elu","float32"),n={x:t};return Hs.runKernel(ut,n)}const Hl=si({elu_:Gl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jl(e,t){let n=ti(e,"a","equal","string_or_numeric"),r=ti(t,"b","equal","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(dt,s)}const Kl=si({equal_:jl});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ql(e){const t=ti(e,"x","exp"),n={x:t};return Hs.runKernel(pt,n)}const Xl=si({exp_:ql});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jl(e,t=0){const n=ti(e,"x","expandDims","string_or_numeric");b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Hs.runKernel(ft,r,s)}const Yl=si({expandDims_:Jl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zl(e,t){const n=ti(e,"x","tile","string_or_numeric");b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Hs.runKernel(lr,r,s)}const Ql=si({tile_:Zl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eu(e,t,n,r="float32"){null==t&&(t=e);const s=ua([e,t],r),i=e<=t?e:t;for(let o=0;o<i;++o)s.set(1,o,o);const a=Ko(s.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Ql(Yl(a,0),[n[0],1,1]);if(2===n.length)return Ql(Yl(Yl(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ql(Yl(Yl(Yl(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const tu=si({eye_:eu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nu(e){const t=ti(e,"x","floor","float32"),n={x:t};return Hs.runKernel(yt,n)}const ru=si({floor_:nu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function su(e,t,n=0,r=0){const s=ti(e,"x","gather"),i=ti(t,"indices","gather","int32"),a={x:s,indices:i},o={axis:n,batchDims:r};return Hs.runKernel(kt,a,o)}const iu=si({gather_:su});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function au(e,t){let n=ti(e,"a","greater","string_or_numeric"),r=ti(t,"b","greater","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(St,s)}const ou=si({greater_:au});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lu(e,t){let n=ti(e,"a","greaterEqual","string_or_numeric"),r=ti(t,"b","greaterEqual","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Ct,s)}const uu=si({greaterEqual_:lu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cu(e,t=.2){const n=ti(e,"x","leakyRelu"),r={x:n},s={alpha:t};return Hs.runKernel(At,r,s)}const hu=si({leakyRelu_:cu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function du(e){const t=ti(e,"x","log","float32"),n={x:t};return Hs.runKernel(Mt,n)}const pu=si({log_:du});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fu(e){const t=ti(e,"x","log1p"),n={x:t};return Hs.runKernel(Lt,n)}const gu=si({log1p_:fu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mu(e,t=null,n=!1){const r=ti(e,"x","max"),s={x:r},i={reductionIndices:t,keepDims:n};return Hs.runKernel(Gt,s,i)}const bu=si({max_:mu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xu(e,t){let n=ti(e,"a","mul"),r=ti(t,"b","mul");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(rn,s)}const yu=si({mul_:xu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vu(e,t){let n=ti(e,"a","sub"),r=ti(t,"b","sub");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(ir,s)}const wu=si({sub_:vu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ku(e,t=null,n=!1){let r=ti(e,"x","sum");"bool"===r.dtype&&(r=ha(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(Gn,s,i)}const Iu=si({sum_:ku});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Su(e,t=-1){const n=ti(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=go(((e,n)=>{const r=!0,s=bu(e,t,!0),i=wu(e,s),a=wu(ha(i,"float32"),pu(Iu(Xl(i),t,r)));n([a]);const o=(e,n)=>{const[r]=n,s=!0,i=Xl(r);return wu(e,yu(Iu(e,t,s),i))};return{value:a,gradFunc:o}}));return r(n)}const Cu=si({logSoftmax_:Su});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $u(e,t){const n=ti(e,"a","logicalAnd","bool"),r=ti(t,"b","logicalAnd","bool");Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(zt,s)}const Nu=si({logicalAnd_:$u});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tu(e,t,n=!1,r=!1){let s=ti(e,"a","matMul"),i=ti(t,"b","matMul");[s,i]=Os(s,i);const a={a:s,b:i},o={transposeA:n,transposeB:r};return Hs.runKernel(Re,a,o)}const Eu=si({matMul_:Tu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ru(e,t,n,r,s){const i=ti(e,"x","maxPool"),a=1;let o=i,l=!1;3===i.rank&&(l=!0,o=Ko(i,[1,i.shape[0],i.shape[1],i.shape[2]])),b(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),b(Vo(n,a),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Ho("maxPool",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s},h=Hs.runKernel(jt,u,c);return l?Ko(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const _u=si({maxPool_:Ru});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Au(e,t=[1,1,1],n,r,s,i="NDHWC"){const a=ti(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),b(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),b("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Ho("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:i},h=Hs.runKernel(qt,u,c);return l?Ko(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Fu=si({maxPool3d_:Au});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Du(e,t){let n=ti(e,"a","maximum"),r=ti(t,"b","maximum");[n,r]=Os(n,r),"bool"===n.dtype&&(n=ha(n,"int32"),r=ha(r,"int32")),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Ht,s)}const Ou=si({maximum_:Du});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mu(e,t=null,n=!1){const r=ti(e,"x","mean"),s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(Yt,s,i)}const Lu=si({mean_:Mu});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zu(e,t=null,n=!1){const r=ti(e,"x","min"),s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(Zt,s,i)}const Pu=si({min_:zu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bu(e,t){let n=ti(e,"a","minimum"),r=ti(t,"b","minimum");[n,r]=Os(n,r),"bool"===n.dtype&&(n=ha(n,"int32"),r=ha(r,"int32")),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Qt,s)}const Wu=si({minimum_:Bu});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uu(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Vu(e,t,n){const r=e.length+t.length,s=[];let i=0,a=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[i++]):s.push(t[a++]);return s}function Gu(e,t){const n=[],r=e.length;for(let i=0;i<r;i++)-1===t.indexOf(i)&&n.push(e[i]);const s=t.map((t=>e[t]));return[n,s]}function Hu(e,t){const n=t.map((e=>1));return Vu(e,n,t)}function ju(e,t,n){b(Uu(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ku(e,t){if(Uu(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function qu(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Xu(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ju(e){const t=ti(e,"x","square"),n={};return Hs.runKernel("Square",{x:t},n)}const Yu=si({square_:Ju});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zu(e,t=null,n=!1){e=ti(e,"x","moments");const r=T(t,e.shape),s=Lu(e,r,n);let i=s.shape;n||(i=Hu(s.shape,r));const a=Yu(wu(ha(e,"float32"),Ko(s,i))),o=Lu(a,r,n);return{mean:s,variance:o}}const Qu=si({moments_:Zu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ec(e){const t=ti(e,"x","neg"),n={x:t};return Hs.runKernel(sn,n)}const tc=si({neg_:ec});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nc(e,t){let n=ti(e,"a","notEqual","string_or_numeric"),r=ti(t,"b","notEqual","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(an,s)}const rc=si({notEqual_:nc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sc(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i=ti(e,"indices","oneHot","int32"),a={indices:i},o={dtype:s,depth:t,onValue:n,offValue:r};return Hs.runKernel(hn,a,o)}const ic=si({oneHot_:sc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ac(e,t="float32"){if("complex64"===t){const t=ac(e,"float32"),n=ac(e,"float32");return ai(t,n)}const n=q(w(e),t);return Hs.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oc(e,t="float32"){if("complex64"===t){const t=oc(e,"float32"),n=ac(e,"float32");return ai(t,n)}const n=K(w(e),t);return Hs.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lc(e){const t=ti(e,"x","onesLike"),n={x:t};return Hs.runKernel(cn,n)}const uc=si({onesLike_:lc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cc(e,t,n=0){const r=ti(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},i={x:r};return Hs.runKernel(pn,i,s)}const hc=si({pad_:cc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dc(e,t){const n=ti(e,"x","prelu"),r=ti(t,"alpha","prelu"),s={x:n,alpha:r};return Hs.runKernel(gn,s)}const pc=si({prelu_:dc});var fc=n(4332);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gc{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=fc.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let r,s,i;do{r=2*this.random()-1,s=2*this.random()-1,i=r*r+s*s}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*s*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class mc{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=fc.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bc(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const i=new gc(t,n,r,!1,s),a=ua(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const xc=si({randomNormal_:bc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yc(e,t=0,n=1,r="float32",s){const i=ua(e,r),a=new mc(t,n,null,s);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const vc=si({randomUniform_:yc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wc(e){const t=ti(e,"x","relu"),n={x:t};return Hs.runKernel(In,n)}const kc=si({relu_:wc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ic(e,t){const n=ti(e,"x","reverse"),r={x:n},s={dims:t};return Hs.runKernel(Rn,r,s)}const Sc=si({reverse_:Ic});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cc(e){const t=ti(e,"x","selu"),n={x:t};return Hs.runKernel(Mn,n)}const $c=si({selu_:Cc});function Nc(e,t,n,r,s,i=[1,1],a="NHWC"){const o=ti(e,"x","separableConv2d"),l=ti(t,"depthwiseFilter","separableConv2d"),u=ti(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");b(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),b(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),b(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),b(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),b(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];b(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Pl(c,l,r,s,a,i),g=1,m=Il(f,u,g,"valid",a);return h?Ko(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Tc=si({separableConv2d_:Nc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ec(e){const t=ti(e,"x","sigmoid","float32"),n={x:t};return Hs.runKernel(Wn,n)}const Rc=si({sigmoid_:Ec});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _c(e,t,n){const r=ti(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},i={begin:t,size:n};return Hs.runKernel(Ln,s,i)}const Ac=si({slice_:_c});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fc(e,t,n){const r=ti(e,"x","slice1d");return b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Ac(r,[t],[n])}const Dc=si({slice1d_:Fc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oc(e,t,n){const r=ti(e,"x","slice2d");return b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Ac(r,t,n)}const Mc=si({slice2d_:Oc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lc(e,t,n){const r=ti(e,"x","slice3d");return b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Ac(r,t,n)}const zc=si({slice3d_:Lc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pc(e,t,n){const r=ti(e,"x","slice4d");return b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Ac(r,t,n)}const Bc=si({slice4d_:Pc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wc(e,t=-1){const n=ti(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Hs.runKernel(Kn,r,s)}const Uc=si({softmax_:Wc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vc(e){const t=ti(e,"x","softplus"),n={x:t};return Hs.runKernel(Un,n)}const Gc=si({softplus_:Vc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hc(e,t,n=0){const r=ti(e,"x","split"),s={x:r},i={numOrSizeSplits:t,axis:n};return Hs.runKernel(jn,s,i)}const jc=si({split_:Hc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kc(e){const t=ti(e,"x","sqrt","float32"),n={x:t};return Hs.runKernel(Vn,n)}const qc=si({sqrt_:Kc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xc(e,t){const n=ti(e,"x","squeeze","string_or_numeric");return Ko(n,E(n.shape,t).newShape)}const Jc=si({squeeze_:Xc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yc(e,t=0){const n=ni(e,"tensors","stack","string_or_numeric");b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Hs.runKernel(dn,r,s)}const Zc=si({stack_:Yc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qc(e){const t=ti(e,"x","tanh","float32"),n={x:t};return Hs.runKernel(or,n)}const eh=si({tanh_:Qc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function th(e,t){y(e);const n=Zs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const r=null;return oi(e,r,n,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nh(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const i=new gc(t,n,r,!0,s),a=ua(e,r);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const rh=si({truncatedNormal_:nh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sh(e,t=0){const n=ti(e,"x","unstack","string_or_numeric");b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Hs.runKernel(pr,r,s)}const ih=si({unstack_:sh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ah(e,t=!0,n,r){return Hs.makeVariable(e,t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oh(e,t,n){const r=ti(t,"a","where"),s=ti(n,"b","where"),i=ti(e,"condition","where","bool"),a=Oa(Oa(i.shape,r.shape),s.shape),o=ll(i,a),l=ll(r,a),u=ll(s,a),c={condition:o,t:l,e:u};return Hs.runKernel(On,c)}const lh=si({where_:oh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uh(e){const t=ti(e,"x","zerosLike"),n={x:t};return Hs.runKernel(gr,n)}const ch=si({zerosLike_:uh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hh(e){const t=ti(e,"input","imag"),n={input:t};return Hs.runKernel(Tt,n)}const dh=si({imag_:hh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ph(e){const t=ti(e,"input","real"),n={input:t};return Hs.runKernel(wn,n)}const fh=si({real_:ph});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gh(e,t,n){const r=ti(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),b(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{b(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},i={perm:t};return"complex64"===r.dtype?lo((()=>{let e=fh(r),t=dh(r);return e=Hs.runKernel(hr,{x:e},i),t=Hs.runKernel(hr,{x:t},i),n&&(t=tc(t)),ai(e,t)})):Hs.runKernel(hr,s,i)}const mh=si({transpose_:gh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bh(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xh(e,t,n,r){const s=ti(e,"x","dropout");if(b("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ss?s.clone():s;const i=bh(s,n),a=1-t,o=Vl(ru(wo(vc(i,0,1,"float32",r),a)),a);return yu(s,o)}const yh=si({dropout_:xh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vh(e){b("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Hs.runKernel(mt,t)}const wh=si({fft_:vh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kh(e,t){b("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,s=Ac(e,r,i),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=pl([e,ac(r)],e.shape.length-1),n=t}else s=e;const i=ch(s),a=Ko(ai(s,i),[r,n]),o=wh(a),l=Math.floor(n/2)+1,u=fh(o),c=dh(o),h=jc(u,[l,n-l],u.shape.length-1),d=jc(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Ko(ai(h[0],d[0]),p)}const Ih=si({rfft_:kh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sh(e){b("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Hs.runKernel(Nt,t)}const Ch=si({ifft_:Sh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $h(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Ko(e,[n,t]);r=Ch(s)}else{const s=[n,2*(t-1)],i=Ko(fh(e),[n,t]),a=Ko(dh(e),[n,t]),o=Sc(Ac(i,[0,1],[n,t-2]),1),l=yu(Sc(Ac(a,[0,1],[n,t-2]),1),mo(-1)),u=pl([i,o],1),c=pl([a,l],1),h=Ko(ai(u,c),[s[0],s[1]]);r=Ch(h)}if(r=fh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Ko(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}const Nh=si({irfft_:$h});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Th(e,t,n,r,s,i="NHWC",a){let o=e;3===e.rank&&(o=Ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2]])),b(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),b(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];b(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),b(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Ho("conv2dDerFilter",s,a);const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:i,dimRoundingMode:a,filterShape:n};return Hs.runKernel(Ue,h,d)}const Eh=si({conv2DBackpropFilter_:Th});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rh(e){const t=ti(e,"x","relu6"),n={x:t};return Hs.runKernel(En,n)}const _h=si({relu6_:Rh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ah(e,t=0){const n=ti(e,"x","step"),r={x:n},s={alpha:t};return Hs.runKernel(mr,r,s)}const Fh=si({step_:Ah});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dh(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return yu(e,Fh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Oh(e,t){let n=t;const r=Da(e.shape,t.shape);return r.length>0&&(n=Iu(n,r)),Ko(n,e.shape)}function Mh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return kc(e);if("elu"===t)return Hl(e);if("relu6"===t)return _h(e);if("prelu"===t)return pc(e,n);if("leakyrelu"===t)return hu(e,r);if("sigmoid"===t)return Rc(e);throw new Error(`Unknown fused activation ${t}.`)}const Lh=(e,t)=>{const n=e>0;return!n||"linear"===t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zh({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Lh(Hs.state.gradientDepth,l)){b("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Il(e,t,n,r,s,i,a);return null!=o&&(h=wo(h,o)),Mh(h,l,u,c)}const h=ti(e,"x","conv2d","float32"),d=ti(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Ko(h,[1,h.shape[0],h.shape[1],h.shape[2]])),b(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),b(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ho("fused conv2d",r,a);const g="NHWC"===s?p.shape[3]:p.shape[1];b(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),b(Vo(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=_o(p.shape,d.shape,n,i,r,a);let x,y;if(null!=o&&(x=ti(o,"bias","fused conv2d"),[x]=Os(x,h),"NHWC"===s?Oa(m.outShape,x.shape):(b(x.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${x.shape.length}.`)),b(0===x.shape.length||x.shape[0]===m.outChannels||1===x.shape[0],(()=>`Error in fused conv2d: bias shape (${x.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const e=u.shape;if(b(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)b(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{Oa(e,m.outShape)}catch(I){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(t)}y=ti(u,"prelu weights","fused conv2d")}const v=(e,t)=>{b("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,o,u,c]=t,h=Dh(e,u,l);b(Uo(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=Nl(o.shape,h,a,n,r),p=Eh(o,h,a.shape,n,r),f=[d,p];if(null!=c){const e=Oh(c,h);f.push(e)}return f},w={x:p,filter:d,bias:x,preluActivationWeights:y},k={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=go(((e,t,n)=>{let r=Hs.runKernel(vr,w,k);return n([t,e,r]),f&&(r=Ko(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(p,d)}{const e=go(((e,t,n,r)=>{let s=Hs.runKernel(vr,w,k);return r([t,e,s,n]),f&&(s=Ko(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d,x)}}const Ph=si({fusedConv2d_:zh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bh(e,t,n,r,s,i=[1,1],a){let o=e;3===e.rank&&(o=Ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,filterShape:n};return Hs.runKernel(tt,u,c)}const Wh=si({depthwiseConv2dNativeBackpropFilter_:Bh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Uh(e,t,n,r,s,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:a,dilations:i,inputShape:e},h=Hs.runKernel(nt,u,c);return l?Ko(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Vh=si({depthwiseConv2dNativeBackpropInput_:Uh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gh({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Lh(Hs.state.gradientDepth,l)){let h=Pl(e,t,n,r,s,i,a);return null!=o&&(h=wo(h,o)),Mh(h,l,u,c)}const h=ti(e,"x","depthwiseConv2d","float32"),d=ti(t,"filter","depthwiseConv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Ko(h,[1,h.shape[0],h.shape[1],h.shape[2]])),b(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),b(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),b(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==i&&(i=[1,1]),b(Vo(n,i),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),Ho("fused depthwiseConv2d",r,a);const g=_o(p.shape,d.shape,n,i,r,a,!0);let m,x;null!=o&&(m=ti(o,"bias","fused conv2d"),[m]=Os(m,h),Oa(g.outShape,m.shape)),null!=u&&(x=ti(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{b(Uo(i),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`));const[s,o,u,c]=t,h=Dh(e,u,l),d=Vh(o.shape,h,s,n,r,i,a),p=Wh(o,h,s.shape,n,r,i,a);if(null!=c){const e=Oh(m,h);return[d,p,e]}return[d,p]},v={x:p,filter:d,bias:m,preluActivationWeights:x},w={strides:n,pad:r,dataFormat:s,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=go(((e,t,n)=>{let r=Hs.runKernel(wr,v,w);return n([t,e,r]),f&&(r=Ko(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}));return e(p,d)}{const e=go(((e,t,n,r)=>{let s=Hs.runKernel(wr,v,w);return r([t,e,s,n]),f&&(s=Ko(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}));return e(p,d,m)}}si({fusedDepthwiseConv2d_:Gh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hh({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===Lh(Hs.state.gradientDepth,i)){let l=Eu(e,t,n,r);return null!=s&&(l=wo(l,s)),Mh(l,i,a,o)}let l=ti(e,"a","fused matMul"),u=ti(t,"b","fused matMul");[l,u]=Os(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=w(f),x=w(g);b(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=Oa(l.shape.slice(0,-2),u.shape.slice(0,-2)),v=y.concat([d,p]),k=Ko(l,n?[m,c,d]:[m,d,c]),I=Ko(u,r?[x,p,h]:[x,h,p]);let S,C;null!=s&&(S=ti(s,"bias","fused matMul"),[S]=Os(S,l),Oa(v,S.shape)),null!=a&&(C=ti(a,"prelu weights","fused matMul"));const $=(e,t)=>{const[a,o,l,u]=t,c=Dh(Ko(e,l.shape),l,i);let h,d;if(n||r?!n&&r?(h=Eu(c,o,!1,!1),d=Eu(c,a,!0,!1)):n&&!r?(h=Eu(o,c,!1,!0),d=Eu(a,c,!1,!1)):(h=Eu(o,c,!0,!0),d=Eu(c,a,!0,!0)):(h=Eu(c,o,!1,!0),d=Eu(a,c,!0,!1)),null!=s){const e=Oh(u,c);return[h,d,e]}return[h,d]},N={a:k,b:I,bias:S,preluActivationWeights:C},T={transposeA:n,transposeB:r,activation:i,leakyreluAlpha:o};if(null==s){const e=go(((e,t,n)=>{const r=Hs.runKernel(yr,N,T);return n([e,t,r]),{value:Ko(r,v),gradFunc:$}}));return e(k,I)}{const e=go(((e,t,n,r)=>{const s=Hs.runKernel(yr,N,T);return r([e,t,s,n]),{value:Ko(s,v),gradFunc:$}}));return e(k,I,S)}}const jh=si({fusedMatMul_:Hh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kh(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function qh(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let i=0;i<e;++i){const a=2*Math.PI*i/(e+r-1);s[i]=t-n*Math.cos(a)}return th(s,"float32")}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xh(e){return qh(e,.54,.46)}si({hammingWindow_:Xh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jh(e){return qh(e,.5,.5)}const Yh=si({hannWindow_:Jh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zh(e,t,n){if(y(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Zs(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return oi(e,t,r,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qh(e,t,n,r=!1,s=0){let i=0;const a=[];while(i+t<=e.size)a.push(Ac(e,i,t)),i+=n;if(r)while(i<e.size){const r=i+t-e.size,o=pl([Ac(e,i,t-r),ul([r],s)]);a.push(o),i+=n}return 0===a.length?Zh([],[0,t]):Ko(pl(a),[a.length,t])}const ed=si({frame_:Qh});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function td(e,t,n,r,s=Yh){null==r&&(r=Kh(t));const i=ed(e,t,n),a=yu(i,s(t));return Ih(a,r)}si({stft_:td});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nd(e,t,n,r,s="bilinear",i=0){const a=ti(e,"image","cropAndResize"),o=ti(t,"boxes","cropAndResize","float32"),l=ti(n,"boxInd","cropAndResize","int32"),u=o.shape[0];b(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),b(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),b(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),b("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:a,boxes:o,boxInd:l},h={method:s,extrapolationValue:i,cropSize:r},d=Hs.runKernel(Ye,c,h);return d}const rd=si({cropAndResize_:nd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sd(e){const t=ti(e,"image","flipLeftRight","float32");b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t},r=Hs.runKernel(xt,n,{});return r}const id=si({flipLeftRight_:sd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ad(e){const t=ti(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];b(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),b(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,Ql(t,s)}const od=si({grayscaleToRGB_:ad});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ld(e,t,n=0,r=.5){const s=ti(e,"image","rotateWithOffset","float32");b(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const i={image:s},a={radians:t,fillValue:n,center:r},o=Hs.runKernel(xr,i,a);return o}const ud=si({rotateWithOffset_:ld});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cd(e,t,n,r,s,i){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),b(1===t.rank,(()=>"scores must be a 1D tensor")),b(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),b(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hd(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ti(e,"boxes","nonMaxSuppression","float32"),a=ti(t,"scores","nonMaxSuppression","float32"),o=cd(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:r,scoreThreshold:s};return Hs.runKernel(on,{boxes:i,scores:a},l)}const dd=si({nonMaxSuppression_:hd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pd(e,t,n){const r=fd(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function fd(e,t,n){return md(e,t,n||gd)}function gd(e,t){return e>t?1:e<t?-1:0}function md(e,t,n){let r=0,s=e.length,i=0,a=!1;while(r<s){i=r+(s-r>>>1);const o=n(t,e[i]);o>0?r=i+1:(s=i,a=!o)}return a?r:-r-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bd(e,t,n,r,s){return vd(e,t,n,r,s,0)}function xd(e,t,n,r,s,i){return vd(e,t,n,r,s,0,!1,i,!0)}function yd(e,t,n,r,s,i){return vd(e,t,n,r,s,i,!0)}function vd(e,t,n,r,s,i,a=!1,o=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>s&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(Id);const c=i>0?-.5/i:0,h=[],d=[];while(h.length<n&&u.length>0){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<s)break;let o=!1;for(let l=h.length-1;l>=a;--l){const n=wd(e,i,h[l]);if(n>=r){o=!0;break}if(t.score=t.score*kd(r,c,n),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>s&&pd(u,t,Id))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g["selectedScores"]=d),l&&(g["validOutputs"]=p),g}function wd(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),i=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function kd(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Id(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Sd(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const i=ti(e,"boxes","nonMaxSuppressionAsync"),a=ti(t,"scores","nonMaxSuppressionAsync"),o=cd(i,a,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=bd(u,c,n,r,s);return i!==e&&i.dispose(),a!==t&&a.dispose(),th(h,"int32")}const Cd=Sd;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $d(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=ti(e,"boxes","nonMaxSuppression"),o=ti(t,"scores","nonMaxSuppression"),l=cd(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:i},h=Hs.runKernel(un,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const Nd=si({nonMaxSuppressionWithScore_:$d});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Td(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=0){const a=ti(e,"boxes","nonMaxSuppressionAsync"),o=ti(t,"scores","nonMaxSuppressionAsync"),l=cd(a,o,n,r,s,i);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=yd(c,h,n,r,s,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:th(d,"int32"),selectedScores:th(p)}}const Ed=Td;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rd(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=ti(e,"boxes","nonMaxSuppression"),o=ti(t,"scores","nonMaxSuppression"),l=cd(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=Hs.runKernel(ln,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const _d=si({nonMaxSuppressionPadded_:Rd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Ad(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,i=!1){const a=ti(e,"boxes","nonMaxSuppressionAsync"),o=ti(t,"scores","nonMaxSuppressionAsync"),l=cd(a,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=xd(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:th(f,"int32"),validOutputs:mo(g,"int32")}}const Fd=Ad;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dd(e,t,n=!1,r=!1){const s=ti(e,"images","resizeBilinear");b(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),b(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Ko(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Hs.runKernel(Nn,o,l);return a?Ko(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Od=si({resizeBilinear_:Dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Md(e,t,n=!1,r=!1){const s=ti(e,"images","resizeNearestNeighbor");b(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),b("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),b(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=s,a=!1;3===s.rank&&(a=!0,i=Ko(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:r,size:t},u=Hs.runKernel(Cn,o,l);return a?Ko(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Ld=si({resizeNearestNeighbor_:Md});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zd(e,t,n){const r=ti(e,"x","bincount"),s=ti(t,"weights","bincount");b("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),b(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},a={size:n};return Hs.runKernel(Ae,i,a)}const Pd=si({bincount_:zd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bd(e,t){let n=ti(e,"a","lessEqual","string_or_numeric"),r=ti(t,"b","lessEqual","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Dt,s)}const Wd=si({lessEqual_:Bd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ud(e){const t=ti(e,"x","round"),n={x:t};return Hs.runKernel(_n,n)}const Vd=si({round_:Ud});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gd(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Hs.runKernel(vn,{},s)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hd(e,t="binary",n=!1,r=.5){const s=ti(e,"image","threshold"),i=.2989,a=.587,o=.114,l=s.shape[0]*s.shape[1];let u,c,h,d,p=yu(th([r]),255);if(b(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),b(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),b("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),b("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[u,c,h]=jc(s,[1,1,1],-1);const e=yu(u,i),t=yu(c,a),n=yu(h,o);d=wo(wo(e,t),n)}else d=e;if("otsu"===t){const e=Pd(ha(Vd(d),"int32"),li([]),256);p=jd(e,l)}const f=n?Wd(d,p):ou(d,p),g=ha(yu(f,255),"int32");return g}function jd(e,t){let n,r,s,i,a,o,l=th([-1]),u=th([0]),c=th([0]);for(let h=0;h<e.size-1;h++){n=Ac(e,0,h+1),r=Ac(e,h+1),a=Vl(Iu(n),t),o=Vl(Iu(r),t);const d=Iu(yu(n,Gd(0,n.size)));s=Vl(d,Iu(n));const p=ul(r.shape,n.size),f=wo(Gd(0,r.size),p),g=yu(r,f);i=Vl(Iu(g),Iu(r));const m=wu(s,i),b=wu(s,i),x=yu(a,o);c=yu(yu(x,m),b);const y=ou(c,u);u=lh(y,c,u),l=lh(y,th([h]),l)}return l}const Kd=si({threshold_:Hd});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qd(e,t,n="nearest",r="constant",s=0,i){const a=ti(e,"image","transform","float32"),o=ti(t,"transforms","transform","float32");b(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),b(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),b(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:i};return Hs.runKernel(cr,l,u)}const Xd=si({transform_:qd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jd(e,t,n){b(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),b(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=ti(e,"a","bandPart");b(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[i,a]=r.shape.slice(-2);if(!(t<=i))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`);if(!(n<=a))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`);t<0&&(t=i),n<0&&(n=a);const o=Ko(Gd(0,i,1,"int32"),[-1,1]),l=Gd(0,a,1,"int32"),u=wu(o,l),c=Nu(Wd(u,mo(+t,"int32")),uu(u,mo(-n,"int32"))),h=ac([i,a],r.dtype);return Ko(Zc(ih(Ko(r,[-1,i,a])).map((e=>lh(c,e,h)))),s)}const Yd=si({bandPart_:Jd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zd(e,t){let n=ti(e,"base","pow"),r=ti(t,"exp","pow");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(fn,s)}const Qd=si({pow_:Zd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ep(e,t="euclidean",n=null,r=!1){e=ti(e,"x","norm");const s=tp(e,t,n);let i=s.shape;if(r){const t=T(n,e.shape);i=Hu(s.shape,t)}return Ko(s,i)}function tp(e,t,n=null){if(0===e.rank)return yo(e);if(1!==e.rank&&null===n)return tp(Ko(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Iu(yo(e),n);if(t===1/0)return bu(yo(e),n);if(t===-1/0)return Pu(yo(e),n);if("euclidean"===t||2===t)return qc(Iu(Qd(yo(e),mo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return bu(Iu(yo(e),n[0]),n[1]-1);if(t===1/0)return bu(Iu(yo(e),n[1]),n[0]);if(t===-1/0)return Pu(Iu(yo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return qc(Iu(Yu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const np=si({norm_:ep});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rp(e){let t;if(Array.isArray(e)){t=!1,b(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)b(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=jc(e,e.shape[0],0).map((e=>Jc(e,[0])));b(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(Hs.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=yu(Iu(yu(n[t],e)),n[t]);e=wu(e,r)}return Vl(e,np(e,"euclidean"))})));return t?Zc(n,0):n}const sp=si({gramSchmidt_:rp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ip(e,t=!1){if(b(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ap(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=ih(Ko(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],i=[];r.forEach((e=>{const[n,r]=ap(e,t);s.push(n),i.push(r)}));const a=Ko(Zc(s,0),e.shape),o=Ko(Zc(i,0),e.shape);return[a,o]}}function ap(e,t=!1){return Hs.tidy((()=>{b(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=tu(n),i=pa(e);const a=Zh([[1]],[1,1]);let o=pa(a);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,l=o,u=s;[o,i,s]=Hs.tidy((()=>{const t=Ac(i,[e,e],[n-e,1]),l=np(t),u=Ac(i,[e,e],[1,1]),c=lh(ou(u,0),Zh([[-1]]),Zh([[1]])),h=wu(u,yu(c,l)),d=Vl(t,h);o=1===d.shape[0]?pa(a):pl([a,Ac(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=tc(Vl(Eu(c,h),l)),f=Ac(i,[e,0],[n-e,r]),g=yu(p,o),m=mh(o);if(0===e)i=wu(f,Eu(g,Eu(m,f)));else{const t=wu(f,Eu(g,Eu(m,f)));i=pl([Ac(i,[0,0],[e,r]),t],0)}const b=mh(g),x=Ac(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=wu(x,Eu(Eu(x,o),b));else{const t=wu(x,Eu(Eu(x,o),b));s=pl([Ac(s,[0,0],[n,e]),t],1)}return[o,i,s]})),uo([t,l,u])}return!t&&n>r&&(s=Ac(s,[0,0],[n,r]),i=Ac(i,[0,0],[r,r])),[s,i]}))}const op=si({qr_:ip});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var lp;function up(e,t,n=lp.SUM_BY_NONZERO_WEIGHTS){const r=ti(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=ti(t,"weights","computeWeightedLoss"));const i=null==s?r:yu(r,s);if(n===lp.NONE)return i;if(n===lp.SUM)return Iu(i);if(n===lp.MEAN){if(null==s)return Lu(i);{const e=r.size/s.size,t=Vl(Iu(i),Iu(s));return e>1?Vl(t,mo(e)):t}}if(n===lp.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Vl(Iu(i),mo(r.size));{const e=yu(s,oc(r.shape)),t=ha(Iu(rc(e,mo(0))),"float32");return Vl(Iu(i),t)}}throw Error(`Unknown reduction: ${n}`)}(function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(lp||(lp={}));const cp=si({computeWeightedLoss_:up});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hp(e,t,n,r=lp.SUM_BY_NONZERO_WEIGHTS){const s=ti(e,"labels","absoluteDifference"),i=ti(t,"predictions","absoluteDifference");let a=null;null!=n&&(a=ti(n,"weights","absoluteDifference")),x(s.shape,i.shape,"Error in absoluteDifference: ");const o=yo(wu(s,i));return cp(o,a,r)}si({absoluteDifference_:hp});function dp(e,t,n,r,s=lp.SUM_BY_NONZERO_WEIGHTS){const i=ti(e,"labels","cosineDistance"),a=ti(t,"predictions","cosineDistance");let o=null;null!=r&&(o=ti(r,"weights","cosineDistance")),x(i.shape,a.shape,"Error in cosineDistance: ");const l=mo(1),u=wu(l,Iu(yu(i,a),n,!0));return cp(u,o,s)}si({cosineDistance_:dp});function pp(e,t,n,r=lp.SUM_BY_NONZERO_WEIGHTS){let s=ti(e,"labels","hingeLoss");const i=ti(t,"predictions","hingeLoss");let a=null;null!=n&&(a=ti(n,"weights","hingeLoss")),x(s.shape,i.shape,"Error in hingeLoss: ");const o=mo(1);s=wu(yu(mo(2),s),o);const l=kc(wu(o,yu(s,i)));return cp(l,a,r)}si({hingeLoss_:pp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fp(e,t,n,r=1,s=lp.SUM_BY_NONZERO_WEIGHTS){const i=ti(e,"labels","huberLoss"),a=ti(t,"predictions","huberLoss");let o=null;null!=n&&(o=ti(n,"weights","huberLoss")),x(i.shape,a.shape,"Error in huberLoss: ");const l=mo(r),u=yo(wu(a,i)),c=Wu(u,l),h=wu(u,c),d=wo(yu(mo(.5),Yu(c)),yu(l,h));return cp(d,o,s)}si({huberLoss_:fp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gp(e,t,n,r=1e-7,s=lp.SUM_BY_NONZERO_WEIGHTS){const i=ti(e,"labels","logLoss"),a=ti(t,"predictions","logLoss");let o=null;null!=n&&(o=ti(n,"weights","logLoss")),x(i.shape,a.shape,"Error in logLoss: ");const l=mo(1),u=mo(r),c=tc(yu(i,pu(wo(a,u)))),h=yu(wu(l,i),pu(wo(wu(l,a),u))),d=wu(c,h);return cp(d,o,s)}si({logLoss_:gp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mp(e,t){let n=ti(e,"a","squaredDifference"),r=ti(t,"b","squaredDifference");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r},i={};return Hs.runKernel(Qn,s,i)}const bp=si({squaredDifference_:mp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xp(e,t,n,r=lp.SUM_BY_NONZERO_WEIGHTS){const s=ti(e,"labels","meanSquaredError"),i=ti(t,"predictions","meanSquaredError");let a=null;null!=n&&(a=ti(n,"weights","meanSquaredError")),x(s.shape,i.shape,"Error in meanSquaredError: ");const o=bp(s,i);return cp(o,a,r)}si({meanSquaredError_:xp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yp(e,t){const n=ti(e,"labels","sigmoidCrossEntropyWithLogits"),r=ti(t,"logits","sigmoidCrossEntropyWithLogits");x(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=kc(r),i=yu(r,n),a=gu(Xl(tc(yo(r))));return wo(wu(s,i),a)}function vp(e,t,n,r=0,s=lp.SUM_BY_NONZERO_WEIGHTS){let i=ti(e,"multiClassLabels","sigmoidCrossEntropy");const a=ti(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ti(n,"weights","sigmoidCrossEntropy")),x(i.shape,a.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=mo(r),t=mo(1),n=mo(.5);i=wo(yu(i,wu(t,e)),yu(n,e))}const l=yp(i,a);return cp(l,o,s)}si({sigmoidCrossEntropy_:vp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wp(e,t=null,n=!1){const r=ti(e,"x","logSumExp"),s=T(t,r.shape),i=bu(r,s,!0),a=wu(r,i),o=Xl(a),l=Iu(o,s),u=pu(l),c=wo(Ko(i,u.shape),u);if(n){const e=Hu(c.shape,s);return Ko(c,e)}return c}const kp=si({logSumExp_:wp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ip(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=go(((e,t,r)=>{const s=!0,i=kp(t,[n],s),a=wu(ha(t,"float32"),i);r([e,a]);const o=tc(yu(a,e)),l=Iu(o,[n]),u=(e,t)=>{const[r,s]=t,i=Hu(e.shape,[n]);return[yu(Ko(e,i),wu(ha(r,"float32"),Xl(s))),yu(Ko(e,i),wu(Xl(s),ha(r,"float32")))]};return{value:l,gradFunc:u}}));return r(e,t)}function Sp(e,t,n,r=0,s=lp.SUM_BY_NONZERO_WEIGHTS){let i=ti(e,"onehotLabels","softmaxCrossEntropy");const a=ti(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ti(n,"weights","softmaxCrossEntropy")),x(i.shape,a.shape,"Error in softmaxCrossEntropy: "),r>0){const e=mo(r),t=mo(1),n=mo(i.shape[1]);i=wo(yu(i,wu(t,e)),Vl(e,n))}const l=Ip(i,a);return cp(l,o,s)}si({softmaxCrossEntropy_:Sp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cp(e,t,n,r){const s=ti(e,"indices","sparseFillEmptyRows","int32"),i=ti(t,"values","sparseFillEmptyRows"),a=ti(n,"denseShape","sparseFillEmptyRows","int32"),o=ti(r,"defaultValue","sparseFillEmptyRows",i.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Values should be Tensor1D but received shape ${i.shape}`);if(1!==a.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:i,denseShape:a,defaultValue:o},u=Hs.runKernel(qn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}si({sparseFillEmptyRows_:Cp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $p(e,t,n){const r=ti(e,"inputIndices","sparseReshape","int32"),s=ti(t,"inputShape","sparseReshape","int32"),i=ti(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`New shape should be Tensor1D but received shape ${i.shape}`);const a={inputIndices:r,inputShape:s,newShape:i},o=Hs.runKernel(Xn,a);return{outputIndices:o[0],outputShape:o[1]}}si({sparseReshape_:$p});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Np(e,t,n){const r=ti(e,"data","sparseSegmentMean"),s=ti(t,"indices","sparseSegmentMean","int32"),i=ti(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return Hs.runKernel(Jn,a)}si({sparseSegmentMean_:Np});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tp(e,t,n){const r=ti(e,"data","sparseSegmentSum"),s=ti(t,"indices","sparseSegmentSum","int32"),i=ti(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==i.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${i.shape}`);const a={data:r,indices:s,segmentIds:i};return Hs.runKernel(Yn,a)}si({sparseSegmentSum_:Tp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ep(e,t,n,r,s,i,a,o){const l=ti(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=ti(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:i,padWidth:a,preserveShortSequences:o},h={data:l,dataSplits:u},d=Hs.runKernel(nr,h,c);return{nGrams:d[0],nGramsSplits:d[1]}}si({stringNGrams_:Ep});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rp(e,t,n=!0){const r=ti(e,"input","stringSplit","string"),s=ti(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const i={skipEmpty:n},a={input:r,delimiter:s},o=Hs.runKernel(rr,a,i);return{indices:o[0],values:o[1],shape:o[2]}}si({stringSplit_:Rp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _p(e,t){const n=ti(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return Hs.runKernel(sr,s,r)}si({stringToHashBucketFast_:_p});const Ap={flipLeftRight:id,grayscaleToRGB:od,resizeNearestNeighbor:Ld,resizeBilinear:Od,rotateWithOffset:ud,cropAndResize:rd,nonMaxSuppression:dd,nonMaxSuppressionAsync:Cd,nonMaxSuppressionWithScore:Nd,nonMaxSuppressionWithScoreAsync:Ed,nonMaxSuppressionPadded:_d,nonMaxSuppressionPaddedAsync:Fd,threshold:Kd,transform:Xd},Fp={bandPart:Yd,gramSchmidt:sp,qr:op};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Dp extends bo{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Hs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Hs.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:lo((()=>ch(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:lo((()=>ch(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;lo((()=>{const e=wo(yu(a,this.rho),yu(Yu(i),1-this.rho)),t=yu(Vl(qc(wo(o,this.epsilon)),qc(wo(a,this.epsilon))),i),n=wo(yu(o,this.rho),yu(Yu(t),1-this.rho));a.assign(e),o.assign(n);const s=wo(yu(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(uo(this.accumulatedGrads.map((e=>e.variable))),uo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}Dp.className="Adadelta",so(Dp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Op extends bo{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Hs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:lo((()=>ul(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable;lo((()=>{const e=wo(i,Yu(s));i.assign(e);const t=wo(yu(Vl(s,qc(wo(e,Hs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&uo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}Op.className="Adagrad",so(Op);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Mp extends bo{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],lo((()=>{this.accBeta1=mo(t).variable(),this.accBeta2=mo(n).variable()})),null==r&&(this.epsilon=Hs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);lo((()=>{const n=wu(1,this.accBeta1),r=wu(1,this.accBeta2);t.forEach(((t,s)=>{const i=Hs.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:lo((()=>ch(i).variable(a)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:lo((()=>ch(i).variable(a)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=wo(yu(l,this.beta1),yu(o,1-this.beta1)),h=wo(yu(u,this.beta2),yu(Yu(o),1-this.beta2)),d=Vl(c,n),p=Vl(h,r);l.assign(c),u.assign(h);const f=wo(yu(Vl(d,wo(qc(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(yu(this.accBeta1,this.beta1)),this.accBeta2.assign(yu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&uo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&uo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),lo((()=>{this.accBeta1.assign(Qd(this.beta1,this.iterations_+1)),this.accBeta2.assign(Qd(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}Mp.className="Adam",so(Mp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Lp extends bo{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],lo((()=>{this.iteration=mo(0).variable(),this.accBeta1=mo(t).variable()})),null==r&&(this.epsilon=Hs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);lo((()=>{const n=wu(1,this.accBeta1),r=Vl(-this.learningRate,wo(yu(this.iteration,this.decay),1));t.forEach(((t,s)=>{const i=Hs.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:ch(i).variable(a)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:ch(i).variable(a)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=wo(yu(l,this.beta1),yu(o,1-this.beta1)),h=yu(u,this.beta2),d=yo(o),p=Ou(h,d);l.assign(c),u.assign(p);const f=wo(yu(Vl(r,n),Vl(c,wo(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign(wo(this.iteration,1)),this.accBeta1.assign(yu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&uo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&uo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}Lp.className="Adamax",so(Lp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zp extends bo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Hs.registeredVariables[t];lo((()=>{const e=wo(yu(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=co(mo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}zp.className="SGD",so(zp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pp extends zp{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mo(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Hs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:lo((()=>ch(r).variable(e)))}}const s=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&lo((()=>{let e;const t=wo(yu(this.m,s),i);e=this.useNesterov?wo(yu(this.c,wo(i,yu(t,this.m))),r):wo(yu(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&uo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}Pp.className="Momentum",so(Pp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Bp extends bo{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Hs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const r=Hs.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:lo((()=>ch(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:lo((()=>ch(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:lo((()=>ch(r).variable(s)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;lo((()=>{const e=wo(yu(a,this.decay),yu(Yu(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=wo(yu(t,this.decay),yu(i,1-this.decay)),l=Vl(yu(i,this.learningRate),qc(wu(e,wo(Yu(s),this.epsilon)))),u=wo(yu(o,this.momentum),l);a.assign(e),t.assign(s),o.assign(u);const c=wu(r,u);r.assign(c)}else{const e=wo(yu(a,this.decay),yu(Yu(i),1-this.decay)),t=wo(yu(o,this.momentum),Vl(yu(i,this.learningRate),qc(wo(e,this.epsilon))));a.assign(e),o.assign(t);const n=wu(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&uo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&uo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&uo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}Bp.className="RMSProp",so(Bp);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Wp{static sgd(e){return new zp(e)}static momentum(e,t,n=!1){return new Pp(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Bp(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Mp(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Dp(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Lp(e,t,n,r,s)}static adagrad(e,t=.1){return new Op(e,t)}}const Up={sgd:Wp.sgd,momentum:Wp.momentum,adadelta:Wp.adadelta,adagrad:Wp.adagrad,rmsprop:Wp.rmsprop,adamax:Wp.adamax,adam:Wp.adam};n(4633);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Vp=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();function Gp(){return new Promise((e=>Vp((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hp(e,t){const n=e[0].length;e.forEach(((e,t)=>{b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let i=0;i<n;i++)b(i===t||e[i]===r[i],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function jp(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Kp;function qp(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)while(r.length<e+n.length)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const i=n[s],a=r[r.length-n.length+s],o=r[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${i} but shape[${s+e}] = ${o}`)}else r[a]=i}return r}function Xp(e){const t={FIRST_DIM_SIZE:Kp.FIRST_DIM_SIZE,VALUE_ROWIDS:Kp.VALUE_ROWIDS,ROW_LENGTHS:Kp.ROW_LENGTHS,ROW_SPLITS:Kp.ROW_SPLITS,ROW_LIMITS:Kp.ROW_LIMITS,ROW_STARTS:Kp.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Jp(e){return 0===e.length?0:e[0]===Kp.FIRST_DIM_SIZE?e.length-1:e.length}function Yp(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE",e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS",e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS",e[e["ROW_SPLITS"]=3]="ROW_SPLITS",e[e["ROW_LIMITS"]=4]="ROW_LIMITS",e[e["ROW_STARTS"]=5]="ROW_STARTS"})(Kp||(Kp={}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Zp=30;function Qp(e){return e<=Zp?e:V(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ef(e,t,n){const r=n*("number"===typeof e?e:e[0]),s=t*("number"===typeof e?e:e[1]);return[r,s]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tf(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function nf(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function rf(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?r?s.push(t[i-1]*e[i]):s.push(e[i]/t[i-1]):s.push(e[i]);return s}function sf(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function af(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function of(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===w(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,i=s[s.length-1];let a=1;for(let h=0;h<s.length-1;++h)a*=s[h];const o=e.shape,l=s.slice();l.pop();let u=1;for(let h=i;h<n;++h)u*=o[h],l.push(o[h]);const c=[...G(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}function lf(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(i+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(i+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(i+" update.rank != "+(s+e.length-r));for(let a=0;a<s;++a)if(n.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-s;++a)if(n.shape[a+s]!==e[a+r])throw new Error(i+` updates.shape[${a+s}] (${n.shape[a+s]}) != shape[${a+s}] (${e[a+s]})`)}function uf(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}lf(n,t,e)}function cf(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,i=n.length;let a=1;for(let h=s;h<i;++h)a*=n[h];const o=s<1?1:s,l=w(t.shape)/o,u=[...G(n.slice(0,s)),1],c=w(n);return{sliceRank:s,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hf=1.7580993408473768,df=1.0507009873554805,pf=.3275911,ff=.254829592,gf=-.284496736,mf=1.421413741,bf=-1.453152027,xf=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function vf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function wf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function kf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function If(e,t){const n=e[2*t],r=e[2*t+1];return{real:n,imag:r}}function Sf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Cf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const i=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(i),r[s]=Math.sin(i)}return{real:n,imag:r}}function $f(e,t,n){const r=(n?2:-2)*Math.PI*(e/t),s=Math.cos(r),i=Math.sin(r);return{real:s,imag:i}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Nf="->",Tf=/->/g,Ef=",",Rf="...";function _f(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Tf,"").length)/Nf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Nf}").`);const[r,s]=e.split(Nf);b(-1===r.indexOf(Rf),(()=>`The ellipsis notation ("${Rf}") is not supported yet.`));const i=r.split(Ef),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<s.length;++d){const e=s[d];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===o.indexOf(e)&&e!==Ef&&o.push(e)}const l=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<i[d].length;++e)l[d].push(o.indexOf(i[d][e]))}const u=o.length,c=s.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function Af(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Ff(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:b(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Df(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let a=0;a<s;++a)r.push([]);const i=[];for(let a=0;a<n.length;++a){const e=n[a],s=Mf(t,e);for(const t of s)-1===i.indexOf(t)&&(r[a].push(t),i.push(t))}return{path:n,steps:r}}function Of(e){return e.every(((e,t)=>e===t))}function Mf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Lf(e,t,n=0){let r=[];if("number"===typeof t)b(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);b(s<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const r=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-r}b(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Pf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Bf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Uf(e,t){return`size ${e} must be non-negative, not ${t}`}function Vf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Gf(e,t){const n=w(e),r=w(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function Hf(e,t){const n=w(e),r=w(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jf(){return"segment ids must be >= 0"}function Kf(){return"segment ids are not increasing"}function qf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Xf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jf(e,t){let n,r=!1;e<=Zp?(n=e,r=!0):n=V(e,Math.floor(Math.sqrt(e)));while(!r)n>t||n===e?r=!0:n=V(e,n+1);return n}function Yf(e,t,n){const r=[],s=e.length;for(let i=0;i<s;i++)i!==t?r.push(e[i]):r.push(n);return r}function Zf(e,t,n,r){const s=t.shape.length,i=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>i)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${i}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<i;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qf(e){try{return e.map((e=>ns(e)))}catch(SX){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${SX}`)}}function eg(e){return e.map((e=>ts(e)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tg(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const r=ua(e,"int32"),s=ua([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=r.indexToLoc(n[i]),a=i*e.length;s.values.set(t,a)}return s.toTensor()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ng={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,Fh(ha(n,"float32"),-1))}}},rg={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Yu(ha(n,"float32")),r=qc(wu(mo(1),t));return tc(Vl(e,r))}}}},sg={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=qc(wu(Yu(ha(n,"float32")),1));return Vl(e,t)}}}},ig={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{let t=e;const r=Da(n.shape,s);return r.length>0&&(t=Iu(t,r)),Ko(t,n.shape)},a=()=>{let t=e;const n=Da(r.shape,s);return n.length>0&&(t=Iu(t,n)),Ko(t,r.shape)};return{a:i,b:a}}},ag={kernelName:me,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},og={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ch(n)}}},lg={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ch(n)}}},ug={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,qc(wu(mo(1),Yu(ha(n,"float32")))))}}},cg={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=qc(wo(mo(1),Yu(ha(n,"float32"))));return Vl(e,t)}}}},hg={kernelName:Ce,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{const t=wo(Yu(n),Yu(r));let i=yu(e,Vl(r,t));const a=Da(n.shape,s);return a.length>0&&(i=Iu(i,a)),Ko(i,n.shape)},a=()=>{const t=wo(Yu(n),Yu(r));let i=tc(yu(e,Vl(n,t)));const a=Da(r.shape,s);return a.length>0&&(i=Iu(i,a)),Ko(i,r.shape)};return{a:i,b:a}}},dg={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,wo(Yu(ha(n,"float32")),1))}}},pg={kernelName:Se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,wu(mo(1),Yu(ha(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fg(e,t,n,r,s,i){const a=ti(e,"dy","avgPool3dGrad"),o=ti(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),b(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),b(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Ho("avgPool3dGrad",s,i);const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:i},p=Hs.runKernel(Ee,h,d);return c?Ko(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const gg=si({avgPool3dGrad_:fg}),mg={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>gg(e,r,s,i,a,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bg(e,t,n,r,s){const i=ti(e,"dy","avgPoolGrad"),a=ti(t,"input","avgPoolGrad");b(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Ko(i,[1,i.shape[0],i.shape[1],i.shape[2]])),b(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),b(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Hs.runKernel(Ne,c,h);return u?Ko(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const xg=si({avgPoolGrad_:bg}),yg={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:i,pad:a}=n;return{x:()=>xg(e,r,s,i,a)}}},vg={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>Eu(e,s,!1,!1),b:()=>Eu(e,r,!0,!1)}:i&&!a?{a:()=>Eu(s,e,!1,!0),b:()=>Eu(r,e,!1,!1)}:{a:()=>Eu(s,e,!0,!0),b:()=>Eu(e,r,!0,!0)}:{a:()=>Eu(e,s,!1,!0),b:()=>Eu(r,e,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wg(e,t,n){const r=ti(e,"x","spaceToBatchND");b(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),b(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},i={blockShape:t,paddings:n};return Hs.runKernel(Hn,s,i)}const kg=si({spaceToBatchND_:wg}),Ig={kernelName:_e,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>kg(e,r,s)}}},Sg={kernelName:Fe,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,i=r.shape,a=Array.from(i);for(let l=s.length-1;l>=0;l--)if(s[l]===i[l])a[l]=1;else if(1!==s[l])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>Iu(e,o,!0)}}},Cg={kernelName:Oe,gradFunc:e=>({x:()=>e.clone()})},$g={kernelName:Me,gradFunc:e=>({x:()=>ch(e)})},Ng={kernelName:Le,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:i}=n;return{x:()=>lh(Nu(uu(r,s),Wd(r,i)),e,ch(e))}}},Tg={kernelName:Pe,inputsToSave:["x"],gradFunc:ng.gradFunc},Eg={kernelName:Be,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,i=T(s,t[0].shape)[0],a=r.map((e=>e[i])),o=jc(e,a,i);return o.map((e=>()=>e))}},Rg={kernelName:We,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return b(Uo(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Nl(r.shape,e,s,a,o,l),filter:()=>Eh(r,e,s.shape,a,o,l)}}},_g={kernelName:Ve,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Il(e,s,i,a,o,1,l),filter:()=>Eh(e,r,s.shape,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ag(e,t,n,r,s){let i=e;4===e.rank&&(i=Ko(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Ko(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),b(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),b(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),b(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),b(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:r,pad:s,filterShape:n};return Hs.runKernel(He,o,l)}const Fg=si({conv3DBackpropFilter_:Ag}),Dg={kernelName:Ge,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i}=n;b(Uo(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[a,o]=t;return{x:()=>Fl(a.shape,e,o,s,i),filter:()=>Fg(a,e,o.shape,s,i)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Og(e){const t=ti(e,"x","sin","float32"),n={x:t};return Hs.runKernel(zn,n)}const Mg=si({sin_:Og}),Lg={kernelName:Ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(tc(Mg(ha(n,"float32"))),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zg(e){const t=ti(e,"x","sinh"),n={x:t};return Hs.runKernel(Pn,n)}const Pg=si({sinh_:zg}),Bg={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(Pg(ha(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wg(e,t=0,n=!1,r=!1){const s=ti(e,"x","cumsum"),i={x:s},a={axis:t,exclusive:n,reverse:r};return Hs.runKernel(Je,i,a)}const Ug=si({cumsum_:Wg}),Vg={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:i,reverse:a}=n;return{x:()=>{const t=Ku([s],r.rank);let n=Ug(e,s,i,!a);return null!=t&&(n=mh(n,t)),n}}}},Gg={kernelName:et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:i,dimRoundingMode:a}=n,o=null==r?[1,1]:r;b(Uo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return b(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),b(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),b(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),b(Vo(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Ho("depthwiseConv2d",i,a),{x:()=>Vh(l.shape,e,u,s,i,o,a),filter:()=>Wh(l,e,u.shape,s,i,o,a)}}},Hg={kernelName:st,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,i={x:r,filter:s,dy:e},a={x:r,filter:s,dy:e};return{x:()=>Hs.runKernel(it,i,n),filter:()=>Hs.runKernel(at,a,n)}}},jg={kernelName:ut,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Hs.runKernel(ct,r)}}},Kg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yu(Xl(tc(Yu(n))),2/Math.sqrt(Math.PI));return{x:()=>yu(e,r)}}},qg={kernelName:pt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,n)}}},Xg={kernelName:ft,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Ko(e,n.shape)}}},Jg={kernelName:gt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,Xl(n))}}},Yg={kernelName:yt,gradFunc:e=>({x:()=>ch(e)})},Zg={kernelName:vt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{const t=Vl(e,ha(r,"float32")),i=Da(n.shape,s);return i.length>0?Ko(Iu(t,i),n.shape):t},a=()=>{let t=yu(e,ha(n,"float32"));const i=Da(r.shape,s);i.length>0&&(t=Ko(Iu(t,i),r.shape));const a=Yu(r);return tc(Vl(t,ha(a,"float32")))};return{a:i,b:a}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qg(e){const t=ti(e,"x","rsqrt","float32"),n={x:t};return Hs.runKernel(An,n)}const em=si({rsqrt_:Qg}),tm={kernelName:wt,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,i,a,o]=t,l=null==o?mo(1):o,u=Da(i.shape,s.shape),c=[];if(1===i.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=wu(s,i),d=yu(e,l),p=em(wo(a,mo(r))),f=yu(yu(yu(p,p),p),mo(-.5)),g=()=>1===i.rank?Ko(yu(yu(e,Ql(Ko(p,[1,1,1,i.shape[0]]),c)),l),s.shape):Ko(yu(yu(e,p),l),s.shape),m=()=>{let e=yu(yu(p,mo(-1)),d);return 1===i.rank&&(e=Iu(e,u)),Ko(e,i.shape)},b=()=>{let e=yu(yu(f,h),d);return 1===i.rank&&(e=Iu(e,u)),Ko(e,i.shape)},x=()=>{const t=yu(h,p);let n=yu(e,t);return 1===i.rank&&(n=Iu(n,u)),Ko(n,i.shape)},y=()=>{let t=e;return 1===i.rank&&(t=Iu(t,u)),Ko(t,i.shape)};return{x:g,mean:m,variance:b,scale:x,offset:y}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nm(e,t,n){const r=ti(e,"x","unsortedSegmentSum"),s=ti(t,"segmentIds","unsortedSegmentSum","int32");b(I(n),(()=>"numSegments must be of dtype int"));const i={x:r,segmentIds:s},a={numSegments:n};return Hs.runKernel(fr,i,a)}const rm=si({unsortedSegmentSum_:nm}),sm={kernelName:kt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:i}=n,a=T(i,r.shape)[0],o=()=>{const t=r.shape,n=s.size,o=t.slice(0,a),l=o.length,u=t.slice(i,t.length).slice(1),c=u.length,h=im(0,l),d=im(l+1,l+1+c),p=am([o,[n],u]),f=Ko(e,p),g=Ko(s,[n]),m=am([[l],h,d]),b=mh(f,m);let x=rm(b,g,r.shape[a]);const y=qu(m);return x=mh(x,y),x};return{x:o,indices:()=>s}}};function im(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function am(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const om={kernelName:Ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ch(n),b:()=>ch(r)}}},lm={kernelName:$t,gradFunc:e=>({x:()=>ha(e,"float32")})},um={kernelName:Et,gradFunc:e=>({x:()=>ch(e)})},cm={kernelName:Rt,gradFunc:e=>({x:()=>ch(e)})},hm={kernelName:_t,gradFunc:e=>({x:()=>ch(e)})},dm={kernelName:At,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,i=ou(r,0);return{x:()=>lh(i,e,yu(e,s))}}},pm={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,wo(n,1))}}},fm={kernelName:Mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,ha(n,"float32"))}}},gm={kernelName:Wt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=!0,n=Xl(r);return wu(e,yu(Iu(e,s,t),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mm(e,t,n,r=5,s=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:i,beta:a};return Hs.runKernel(Vt,o,l)}const bm=si({localResponseNormalizationBackprop_:mm}),xm={kernelName:Ut,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>bm(r,s,e,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ym(e,t,n,r){return t.rank<n.rank&&(t=Ko(t,Hu(t.shape,r))),e.rank<n.rank&&(e=Ko(e,Hu(e.shape,r))),{x:()=>{const r=yu(e,ha(Kl(n,t),e.dtype));return r}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vm={kernelName:Gt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,i=t[0],a=t[1],o=T(s,i.shape),l=ym(e,a,i,o);return{x:()=>l["x"]()}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wm(e,t){let n=ti(e,"a","less","string_or_numeric"),r=ti(t,"b","less","string_or_numeric");[n,r]=Os(n,r),Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Ft,s)}const km=si({less_:wm}),Im={kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>yu(e,ha(uu(n,r),"float32")),i=()=>yu(e,ha(km(n,r),"float32"));return{a:s,b:i}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sm(e,t,n,r,s,i,a){const o=ti(e,"dy","maxPool3dGrad"),l=ti(t,"input","maxPool3dGrad"),u=ti(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Ko(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Ko(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),b(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),b(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),b(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ho("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:i,dimRoundingMode:a},m=Hs.runKernel(Xt,f,g);return p?Ko(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const Cm=si({maxPool3dGrad_:Sm}),$m={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Cm(e,r,s,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nm(e,t,n,r,s,i,a){const o=ti(e,"dy","maxPoolGrad"),l=ti(t,"input","maxPoolGrad"),u=ti(n,"output","maxPoolGrad");b(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),b(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),b(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Ho("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:i,dimRoundingMode:a};return Hs.runKernel(Kt,c,h)}const Tm=si({maxPoolGrad_:Nm}),Em={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Tm(e,r,s,i,a,o)}}},Rm={kernelName:Yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,i=T(s,r.shape),a=Gu(r.shape,i),o=a[1],l=w(o),u=()=>{const t=r.shape.slice();i.forEach((e=>{t[e]=1}));const n=Ko(e,t),s=Vl(yu(n,oc(r.shape,"float32")),l);return s};return{x:u}}},_m={kernelName:Zt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[i,a]=t,o=T(s,i.shape),l=ym(e,a,i,o);return{x:()=>l["x"]()}}},Am={kernelName:Qt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=()=>yu(e,ha(Wd(n,r),"float32")),i=()=>yu(e,ha(ou(n,r),"float32"));return{a:s,b:i}}},Fm={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ac(e,i,r.shape)}}},Dm={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{const t=Da(n.shape,s);return t.length>0?Ko(Iu(e,t),n.shape):e},a=()=>{const t=yu(e,tc(ru(Vl(n,r)))),i=Da(r.shape,s);return i.length>0?Ko(Iu(t,i),r.shape):t};return{a:i,b:a}}},Om={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{const t=yu(e,ha(r,"float32")),i=Da(n.shape,s);return i.length>0?Ko(Iu(t,i),n.shape):t},a=()=>{const t=yu(e,ha(n,"float32")),i=Da(r.shape,s);return i.length>0?Ko(Iu(t,i),r.shape):t};return{a:i,b:a}}},Mm={kernelName:sn,gradFunc:e=>({x:()=>tc(e)})},Lm={kernelName:hn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>ac(n.shape,"float32")}}},zm={kernelName:cn,gradFunc:e=>({x:()=>ch(e)})},Pm={kernelName:dn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n,s=ih(e,r);return s.map((e=>()=>e))}},Bm={kernelName:pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,i=s.map((e=>e[0]));return{x:()=>Ac(e,i,r.shape)}}},Wm={kernelName:fn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,i=n,a=r,o=Oa(i.shape,a.shape),l=()=>{const t=ha(a,"float32");let n=yu(e,yu(t,Qd(i,wu(t,mo(1)))));const r=Da(i.shape,o);return r.length>0&&(n=Iu(n,r)),Ko(n,i.shape)},u=()=>{const t=ou(i,0),n=lh(t,pu(i),ch(i));let r=yu(e,yu(s,n));const l=Da(a.shape,o);return l.length>0&&(r=Iu(r,l)),Ko(r,a.shape)};return{a:l,b:u}}},Um={kernelName:gn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ou(n,0);return{x:()=>lh(s,e,yu(e,r)),alpha:()=>{let t=lh(s,ch(e),yu(e,n));const i=Da(r.shape,e.shape);return i.length>0&&(t=Iu(t,i)),Ko(t,r.shape)}}}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vm(e,t=0,n=!1,r=!1){const s=ti(e,"x","cumprod"),i={x:s},a={axis:t,exclusive:n,reverse:r};return Hs.runKernel(Xe,i,a)}const Gm=si({cumprod_:Vm});
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hm(e,t,n){const r=e.shape.slice();r[n]=1;const s=Ko(t,r),i=Gm(e,n,!0,!1),a=Gm(e,n,!0,!0),o=yu(i,a);return yu(s,o)}function jm(e,t,n){const r=e.shape.length,s=r-n.length,i=Ku(n,r);let a=e;null!=i&&(a=mh(e,i));const o=a.shape.slice(),l=o.splice(r-n.length,n.length),u=l.reduce(((e,t)=>e*t),1);o.push(u);const c=a.reshape(o);let h=Hm(c,t,s);if(h=h.reshape(a.shape),null!=i){const e=qu(i);h=mh(h,e)}return h}const Km={kernelName:mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let i=[];return i=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>jm(r,e,i)}}},qm={kernelName:ot,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{const t=Vl(e,ha(r,"float32")),i=Da(n.shape,s);return i.length>0?Ko(Iu(t,i),n.shape):t},a=()=>{let t=yu(e,ha(n,"float32"));const i=Da(r.shape,s);i.length>0&&(t=Ko(Iu(t,i),r.shape));const a=Yu(r);return tc(Vl(t,ha(a,"float32")))};return{a:i,b:a}}},Xm={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,tc(Yu(n)))}}},Jm={kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yu(Wd(n,6),Fh(n));return{x:()=>yu(e,ha(r,"float32"))}}},Ym={kernelName:In,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,ha(Fh(n),"float32"))}}},Zm={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ko(e,n.shape)}}},Qm={kernelName:Nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},i=()=>Hs.runKernel(Tn,s,n);return{images:i}}},eb={kernelName:Cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r},i=()=>Hs.runKernel($n,s,n);return{images:i}}},tb={kernelName:Rn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=T(r,e.shape);return{x:()=>Sc(e,s)}}},nb={kernelName:_n,gradFunc:e=>({x:()=>ch(e)})},rb={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>tc(Vl(e,yu(Qd(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sb(e){const t=ti(e,"x","logicalNot","bool"),n={x:t};return Hs.runKernel(Pt,n)}const ib=si({logicalNot_:sb}),ab={kernelName:On,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ha(ch(n),"float32"),t:()=>yu(e,ha(n,e.dtype)),e:()=>yu(e,ha(ib(n),e.dtype))}}},ob={kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ou(n,mo(0)),r=mo(hf),s=mo(df),i=yu(e,s),a=yu(yu(e,r),Xl(ha(n,"float32")));return lh(t,i,a)}}}},lb={kernelName:Wn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,yu(n,wu(mo(1),n)))}}},ub={kernelName:Bn,gradFunc:e=>({x:()=>ch(e)})};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cb(e){const t=ti(e,"x","cos","float32"),n={x:t};return Hs.runKernel(Ke,n)}const hb=si({cos_:cb}),db={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(hb(ha(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pb(e){const t=ti(e,"x","cosh","float32"),n={x:t};return Hs.runKernel(qe,n)}const fb=si({cosh_:pb}),gb={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(fb(ha(n,"float32")),e)}}},mb={kernelName:Ln,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:i}=n,a=r.shape,[o,l]=Za(r,s,i),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>hc(e,u)}}},bb={kernelName:Kn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,i=!0,a=yu(e,r);return{logits:()=>wu(a,yu(Iu(a,[s],i),r))}}},xb={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,Rc(n))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yb(e,t,n){const r=ti(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));b(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),b(r.shape[0]%s===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const i={x:r},a={blockShape:t,crops:n};return Hs.runKernel(_e,i,a)}const vb=si({batchToSpaceND_:yb}),wb={kernelName:Hn,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>vb(e,r,s)}}},kb={kernelName:jn,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pl(e,r)}}},Ib={kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,yu(qc(ha(n,"float32")),2))}}},Sb={kernelName:er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,yu(ha(n,"float32"),2))}}},Cb={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=mo(2),i=()=>yu(e,yu(s,wu(n,r))),a=()=>yu(e,yu(s,wu(r,n)));return{a:i,b:a}}},$b={kernelName:mr,gradFunc:e=>({x:()=>ch(e)})},Nb={kernelName:ir,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Oa(n.shape,r.shape),i=()=>{let t=e;const r=Da(n.shape,s);return r.length>0&&(t=Iu(t,r)),Ko(t,n.shape)},a=()=>{let t=e;const n=Da(r.shape,s);return n.length>0&&(t=Iu(t,n)),Ko(tc(t),r.shape)};return{a:i,b:a}}},Tb={kernelName:Gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:i}=n,a=T(i,r.shape);a.forEach((e=>{s[e]=1}));const o=Ko(e,s),l=yu(o,oc(r.shape,"float32"));return{x:()=>l}}},Eb={kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Vl(e,Yu(hb(n)))}}},Rb={kernelName:or,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(wu(mo(1),Yu(n)),e)}}},_b={kernelName:lr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n,i=()=>{let t=ch(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=wo(t,Ac(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)t=wo(t,Ac(e,[n*r.shape[0],i*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)t=wo(t,Ac(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let i=0;i<s[1];++i)for(let a=0;a<s[2];++a)for(let o=0;o<s[3];++o)t=wo(t,Ac(e,[n*r.shape[0],i*r.shape[1],a*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t};return{x:i}}},Ab={kernelName:hr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,i=qu(s);return{x:()=>mh(e,i)}}},Fb={kernelName:pr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Zc(e,s)}}},Db={kernelName:fr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,r=()=>Ob(e,n);return{x:r}}};function Ob(e,t){const n=Ou(t,ch(t)),r=iu(e,n);let s=uu(t,mo(0,"int32"));const i=r.rank-s.rank;for(let o=0;o<i;++o)s=Yl(s,o+1);s=Nu(s,oc(r.shape,"bool"));const a=ch(r);return lh(s,r,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Mb={kernelName:gr,gradFunc:e=>({x:()=>ch(e)})},Lb=[ng,rg,sg,ig,ag,og,lg,ug,cg,hg,dg,pg,mg,yg,vg,Ig,Sg,Cg,$g,Ng,Tg,Eg,_g,Rg,Dg,Lg,Bg,Vg,Gg,Hg,qm,jg,Kg,qg,Xg,Jg,Zg,Yg,tm,sm,om,lm,um,cm,hm,dm,pm,fm,gm,xm,vm,vm,Im,$m,Em,Rm,_m,Am,Fm,Dm,Om,Mm,Lm,zm,Pm,Bm,Bm,Wm,Um,Km,Xm,Jm,Ym,Zm,Qm,eb,tb,nb,rb,ab,ob,lb,ub,db,gb,mb,bb,xb,wb,wb,kb,kb,Ib,Cb,Sb,$b,Nb,Tb,Eb,Rb,_b,Ab,Fb,Db,Mb];for(const CX of Lb)Rr(CX);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zb(e){const t=ti(e,"x","acos"),n={x:t};return Hs.runKernel(pe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.abs=function(){return this.throwIfDisposed(),yo(this)};const Pb=si({acos_:zb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bb(e){const t=ti(e,"x","acosh"),n={x:t};return Hs.runKernel(fe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.acos=function(){return this.throwIfDisposed(),Pb(this)};const Wb=si({acosh_:Bb});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ub(e,t=0){const n=ti(e,"x","argMin"),r={x:n},s={axis:t};return Hs.runKernel(ve,r,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.acosh=function(){return this.throwIfDisposed(),Wb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.add=function(e){return this.throwIfDisposed(),wo(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.all=function(e,t){return this.throwIfDisposed(),Io(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.any=function(e,t){return this.throwIfDisposed(),Co(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.argMax=function(e){return this.throwIfDisposed(),No(this,e)};const Vb=si({argMin_:Ub});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gb(e){const t=ti(e,"x","asin"),n={x:t};return Hs.runKernel(we,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.argMin=function(e){return this.throwIfDisposed(),Vb(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.asScalar=function(){return this.throwIfDisposed(),b(1===this.size,(()=>"The array must have only 1 element.")),Ko(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.asType=function(e){return this.throwIfDisposed(),ha(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.as1D=function(){return this.throwIfDisposed(),Ko(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.as2D=function(e,t){return this.throwIfDisposed(),Ko(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Ko(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Ko(this,[e,t,n,r])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Ko(this,[e,t,n,r,s])};const Hb=si({asin_:Gb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jb(e){const t=ti(e,"x","asinh"),n={x:t};return Hs.runKernel(ke,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.asin=function(){return this.throwIfDisposed(),Hb(this)};const Kb=si({asinh_:jb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qb(e){const t=ti(e,"x","atan"),n={x:t};return Hs.runKernel(Ie,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.asinh=function(){return this.throwIfDisposed(),Kb(this)};const Xb=si({atan_:qb});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jb(e,t){let n=ti(e,"a","atan2"),r=ti(t,"b","atan2");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(Ce,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.atan=function(){return this.throwIfDisposed(),Xb(this)};const Yb=si({atan2_:Jb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zb(e){const t=ti(e,"x","atanh"),n={x:t};return Hs.runKernel(Se,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.atan2=function(e){return this.throwIfDisposed(),Yb(this,e)};const Qb=si({atanh_:Zb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ex(e){const t=ti(e,"x","ceil","float32"),n={x:t};return Hs.runKernel(Me,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.atanh=function(){return this.throwIfDisposed(),Qb(this)},Cs().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Xo(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),vb(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),el(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.broadcastTo=function(e){return this.throwIfDisposed(),ll(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.cast=function(e){return this.throwIfDisposed(),ha(this,e)};const tx=si({ceil_:ex});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nx(e,t,n="NHWC"){const r=ti(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],i="NHWC"===n?r.shape[2]:r.shape[3],a="NHWC"===n?r.shape[3]:r.shape[1];b(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),b(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),b(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),b(a%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Hs.runKernel(Qe,o,l)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.ceil=function(){return this.throwIfDisposed(),tx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),hl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ss&&(e=[e]),pl([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.conv1d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Cl(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),El(this,e,t,n,r,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.conv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Il(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.cos=function(){return this.throwIfDisposed(),hb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.cosh=function(){return this.throwIfDisposed(),fb(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Gm(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Ug(this,e,t,n)};const rx=si({depthToSpace_:nx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sx(e,t,n,r,s=[1,1],i="NHWC"){const a=ti(e,"x","dilation2d"),o=ti(t,"filter","dilation2d");b(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),b(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),b("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Ko(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Hs.runKernel(st,c,h);return u?Ko(d,[d.shape[1],d.shape[2],d.shape[3]]):d}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),rx(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.depthwiseConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Pl(this,e,t,n,r,s,i)};const ix=si({dilation2d_:sx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ax(e,t){let n=ti(e,"a","div"),r=ti(t,"b","div");[n,r]=Os(n,r);const s=Vl(n,r),i=ch(s),a=Kl(r,i);return lh(a,i,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),ix(this,e,t,n,r,s)};const ox=si({divNoNan_:ax});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lx(e,t){const n=ti(e,"t1","dot"),r=ti(t,"t2","dot");b((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],i=1===r.rank?r.size:r.shape[0];if(b(s===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${i}.`)),1===n.rank&&1===r.rank){const e=Ko(n,[1,-1]),t=Ko(r,[-1,1]),s=Eu(e,t);return Ko(s,[])}if(1===n.rank&&2===r.rank){const e=Ko(n,[1,-1]),t=Ko(r,[r.shape[0],r.shape[1]]),s=Eu(e,t);return Ko(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Ko(r,[-1,1]),t=Eu(n,e);return Ko(t,[t.size])}{const e=Ko(r,[r.shape[0],r.shape[1]]),t=Eu(n,e);return t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.divNoNan=function(e){return this.throwIfDisposed(),ox(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.div=function(e){return this.throwIfDisposed(),Vl(this,e)};const ux=si({dot_:lx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cx(e){let t=ti(e,"x","erf");b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ha(t,"float32"));const n={x:t};return Hs.runKernel(ht,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.dot=function(e){return this.throwIfDisposed(),ux(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.elu=function(){return this.throwIfDisposed(),Hl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.equal=function(e){return this.throwIfDisposed(),Kl(this,e)};const hx=si({erf_:cx});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dx(e,t=null,n=!1){return np(e,"euclidean",t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.erf=function(){return this.throwIfDisposed(),hx(this)};const px=si({euclideanNorm_:dx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fx(e){const t=ti(e,"x","expm1"),n={x:t};return Hs.runKernel(gt,n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),px(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.exp=function(){return this.throwIfDisposed(),Xl(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.expandDims=function(e){return this.throwIfDisposed(),Yl(this,e)};const gx=si({expm1_:fx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mx(e){const t=ti(e,"x","isFinite"),n={x:t};return Hs.runKernel(Et,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.expm1=function(){return this.throwIfDisposed(),gx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.fft=function(){return this.throwIfDisposed(),wh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.flatten=function(){return this.throwIfDisposed(),Ko(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.floor=function(){return this.throwIfDisposed(),ru(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.floorDiv=function(e){return this.throwIfDisposed(),Wl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.gather=function(e,t){return this.throwIfDisposed(),iu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.greaterEqual=function(e){return this.throwIfDisposed(),uu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.greater=function(e){return this.throwIfDisposed(),ou(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.ifft=function(){return this.throwIfDisposed(),Ch(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.irfft=function(){return this.throwIfDisposed(),Nh(this)};const bx=si({isFinite_:mx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xx(e){const t=ti(e,"x","isInf"),n={x:t};return Hs.runKernel(Rt,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.isFinite=function(){return this.throwIfDisposed(),bx(this)};const yx=si({isInf_:xx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vx(e){const t=ti(e,"x","isNaN"),n={x:t};return Hs.runKernel(_t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.isInf=function(){return this.throwIfDisposed(),yx(this)};const wx=si({isNaN_:vx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kx(e,t=5,n=1,r=1,s=.5){const i=ti(e,"x","localResponseNormalization");b(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),b(I(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Ko(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Hs.runKernel(Ut,l,u);return o?Ko(c,[c.shape[1],c.shape[2],c.shape[3]]):c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.isNaN=function(){return this.throwIfDisposed(),wx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.leakyRelu=function(e){return this.throwIfDisposed(),hu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.lessEqual=function(e){return this.throwIfDisposed(),Wd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.less=function(e){return this.throwIfDisposed(),km(this,e)};const Ix=si({localResponseNormalization_:kx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sx(e){const t=ti(e,"x","logSigmoid"),n=go((e=>{const t=tc(Gc(tc(e))),n=t=>{const n=yu(t,Rc(tc(e)));return n};return{value:t,gradFunc:n}}));return n(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Ix(this,e,t,n,r)};const Cx=si({logSigmoid_:Sx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $x(e,t){const n=ti(e,"a","logicalOr","bool"),r=ti(t,"b","logicalOr","bool");Oa(n.shape,r.shape);const s={a:n,b:r};return Hs.runKernel(Bt,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logSigmoid=function(){return this.throwIfDisposed(),Cx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Cu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),kp(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.log=function(){return this.throwIfDisposed(),pu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.log1p=function(){return this.throwIfDisposed(),gu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Nu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logicalNot=function(){return this.throwIfDisposed(),ib(this)};const Nx=si({logicalOr_:$x});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tx(e,t){const n=ti(e,"a","logicalXor","bool"),r=ti(t,"b","logicalXor","bool");return Oa(n.shape,r.shape),Nu(Nx(e,t),ib(Nu(e,t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logicalOr=function(e){return this.throwIfDisposed(),Nx(this,e)};const Ex=si({logicalXor_:Tx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rx(e,t,n){b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ti(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");b(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let o=0;o<r.rank;o++)b(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),b(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`));const i={paddings:t,mode:n},a={x:r};return Hs.runKernel(en,a,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ex(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Eu(this,e,t,n)},Cs().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),_u(this,e,t,n,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.max=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.maximum=function(e){return this.throwIfDisposed(),Ou(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.mean=function(e,t){return this.throwIfDisposed(),Lu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.min=function(e,t){return this.throwIfDisposed(),Pu(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.minimum=function(e){return this.throwIfDisposed(),Wu(this,e)};const _x=si({mirrorPad_:Rx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ax(e,t){let n=ti(e,"a","mod"),r=ti(t,"b","mod");[n,r]=Os(n,r);const s={a:n,b:r};return Hs.runKernel(tn,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),_x(this,e,t)};const Fx=si({mod_:Ax});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dx(e,t,n,r,s,i,a){null==s&&(s=[1,1]),null==i&&(i=1),0===r&&(r="valid");const o=ti(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),b(Vo(i,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${s}'`));const c=Eo(l.shape,t,i,s,r),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===r?Mx([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=Ox([c.inHeight,c.inWidth],h,d),m=p?r:"valid",x=p?l:kg(l,h,f),y="avg"===n?()=>Xo(x,t,i,m,a):()=>_u(x,t,i,m,a),v=y(),w=p?v:vb(v,h,g);return u?Ko(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function Ox(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),i=e.concat(r,s),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=s.map(((e,t)=>e+a[t])),l=t.map(((e,t)=>[r[t],o[t]])),u=t.map(((e,t)=>[0,a[t]]));return[l,u]}function Mx(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),i=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],i[t]]))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.mod=function(e){return this.throwIfDisposed(),Fx(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.mul=function(e){return this.throwIfDisposed(),yu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.neg=function(){return this.throwIfDisposed(),tc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.norm=function(e,t,n){return this.throwIfDisposed(),np(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.notEqual=function(e){return this.throwIfDisposed(),rc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),ic(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.onesLike=function(){return this.throwIfDisposed(),uc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.pad=function(e,t){return this.throwIfDisposed(),hc(this,e,t)};const Lx=si({pool_:Dx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zx(e,t=null,n=!1){let r=ti(e,"x","prod");"bool"===r.dtype&&(r=ha(r,"int32"));const s={x:r},i={axis:t,keepDims:n};return Hs.runKernel(mn,s,i)}Cs().prototype.pool=function(e,t,n,r,s,i){return this.throwIfDisposed(),Lx(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.pow=function(e){return this.throwIfDisposed(),Qd(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.prelu=function(e){return this.throwIfDisposed(),pc(this,e)};const Px=si({prod_:zx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bx(e){const t=ti(e,"x","reciprocal"),n={x:t};return Hs.runKernel(kn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.prod=function(e,t){return this.throwIfDisposed(),Px(this,e,t)};const Wx=si({reciprocal_:Bx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ux(e){const t=ti(e,"x","sign"),n={x:t};return Hs.runKernel(Bn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.reciprocal=function(){return this.throwIfDisposed(),Wx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.relu=function(){return this.throwIfDisposed(),kc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.relu6=function(){return this.throwIfDisposed(),_h(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Ko(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.reshape=function(e){return this.throwIfDisposed(),Ko(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Od(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Ld(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.reverse=function(e){return this.throwIfDisposed(),Sc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.rfft=function(){return this.throwIfDisposed(),Ih(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.round=function(){return this.throwIfDisposed(),Vd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.rsqrt=function(){return this.throwIfDisposed(),em(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.selu=function(){return this.throwIfDisposed(),$c(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.separableConv2d=function(e,t,n,r,s,i){return this.throwIfDisposed(),Tc(this,e,t,n,r,s,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sigmoid=function(){return this.throwIfDisposed(),Rc(this)};const Vx=si({sign_:Ux});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gx(e,t,n,r,s=0,i=0,a=0,o=0,l=0){const u=ti(e,"x","stridedSlice","string_or_numeric"),c={x:u},h={begin:t,end:n,strides:r,beginMask:s,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return Hs.runKernel(tr,c,h)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sign=function(){return this.throwIfDisposed(),Vx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sin=function(){return this.throwIfDisposed(),Mg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sinh=function(){return this.throwIfDisposed(),Pg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.slice=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.softmax=function(e){return this.throwIfDisposed(),Uc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.softplus=function(){return this.throwIfDisposed(),Gc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),kg(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.split=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sqrt=function(){return this.throwIfDisposed(),qc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.square=function(){return this.throwIfDisposed(),Yu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.squaredDifference=function(e){return this.throwIfDisposed(),bp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.squeeze=function(e){return this.throwIfDisposed(),Jc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ss?[this,e]:[this,...e];return Zc(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.step=function(e){return this.throwIfDisposed(),Fh(this,e)};const Hx=si({stridedSlice_:Gx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jx(e){const t=ti(e,"x","tan","float32"),n={x:t};return Hs.runKernel(ar,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.stridedSlice=function(e,t,n,r,s,i,a,o){return this.throwIfDisposed(),Hx(this,e,t,n,r,s,i,a,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sub=function(e){return this.throwIfDisposed(),wu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.sum=function(e,t){return this.throwIfDisposed(),Iu(this,e,t)};const Kx=si({tan_:jx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qx(e,t=1,n=!0){const r=ti(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const i={x:r},a={k:t,sorted:n},[o,l]=Hs.runKernel(ur,i,a);return{values:o,indices:l}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.tan=function(){return this.throwIfDisposed(),Kx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.tanh=function(){return this.throwIfDisposed(),eh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.tile=function(e){return this.throwIfDisposed(),Ql(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.toBool=function(){return this.throwIfDisposed(),ha(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.toFloat=function(){return this.throwIfDisposed(),ha(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.toInt=function(){return this.throwIfDisposed(),ha(this,"int32")};const Xx=si({topk_:qx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jx(e,t=0){const n=ti(e,"x","unique","string_or_numeric");b(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[i,a]=Hs.runKernel(dr,r,s);return{values:i,indices:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.topk=function(e,t){return this.throwIfDisposed(),Xx(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.transpose=function(e){return this.throwIfDisposed(),mh(this,e)};const Yx=si({unique_:Jx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.unique=function(e){return this.throwIfDisposed(),Yx(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),rm(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.unstack=function(e){return this.throwIfDisposed(),ih(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.where=function(e,t){return this.throwIfDisposed(),lh(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Cs().prototype.zerosLike=function(){return this.throwIfDisposed(),ch(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Zx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zx.prototype)}}class Qx extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qx.prototype)}}class ey extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ey.prototype)}}class ty extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ty.prototype)}}class ny extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ny.prototype)}}class ry extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ry.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class sy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function iy(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ay(e,t){if(!e)throw new ny(t)}function oy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function ly(e){return 1===e.length?e[0]:e}function uy(e){return Array.isArray(e)?e:[e]}function cy(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function hy(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let dy={};function py(e){if(null===e||void 0===e)return null;const t={};return t["className"]=e.getClassName(),t["config"]=e.getConfig(),t}function fy(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>fy(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t["type"]||"number"!==typeof t["value"]?fy(t):e[n]=t["value"])}}}function gy(e,t={},n={},r="object",s=!1){if("string"===typeof e){const s=e;let i;if(s in n)i=n[s];else if(s in dy)i=dy[s];else if(i=t[s],null==i)throw new ey(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i["className"]||null==i["config"])throw new ey(`${r}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i["className"];let o,l;if(a in n?[o,l]=n[a]:a in dy?[o,l]=dy["className"]:a in t&&([o,l]=t[a]),null==o)throw new ey(`Unknown ${r}: ${a}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(dy))e[n]=dy[n];for(const s of Object.keys(n))e[s]=n[s];const t=i["config"];t["customObjects"]=e;const r=Object.assign({},dy);for(const s of Object.keys(n))dy[s]=n[s];fy(i["config"]);const a=l(o,i["config"],n,s);return dy=Object.assign({},r),a}{const e=Object.assign({},dy);for(const r of Object.keys(n))dy[r]=n[r];const t=new o(i["config"]);return dy=Object.assign({},e),t}}}function my(e,t){return e<t?-1:e>t?1:0}function by(e,t){return-1*my(e,t)}function xy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function yy(e){if(null==e)throw new ey(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function vy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ey(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function wy(e,t,n=0,r=1/0){return ay(n>=0),ay(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ky(e,t){Array.isArray(e)?(b(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ky(e,`element ${n+1} of ${t}`)))):b(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Iy(e)}.`))}function Iy(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Iy(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Sy(e,t,n){let r,s=null!=n?n():es();const i=(...i)=>{const a=null!=n?n():es();return a-s<t||(s=a,r=e(...i)),r};return i}function Cy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let $y=0;function Ny(){return $y++}const Ty={};function Ey(e=""){return e in Ty||(Ty[e]=0),Ty[e]+=1,e+Ty[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Ry=["channelsFirst","channelsLast"],_y=["nearest","bilinear"],Ay=["valid","same","causal"],Fy=["max","avg"],Dy=["sum","mul","concat","ave"],Oy=new Map;function My(e){vy(Ry,"DataFormat",e)}function Ly(e){vy(_y,"InterpolationFormat",e)}function zy(e){vy(Ay,"PaddingMode",e)}function Py(e){vy(Fy,"PoolMode",e)}const By=[],Wy="/";function Uy(e,t){By.push(e);try{const e=t();return By.pop(),e}catch(n){throw By.pop(),n}}function Vy(){return 0===By.length?"":By.join(Wy)+Wy}function Gy(e){if(!Ky(e))throw new Error("Not a valid tensor name: '"+e+"'");return Vy()+e}function Hy(e){if(!Ky(e))throw new Error("Not a valid tensor name: '"+e+"'");Oy.has(e)||Oy.set(e,0);const t=Oy.get(e);if(Oy.set(e,Oy.get(e)+1),t>0){const n=`${e}_${t}`;return Oy.set(n,1),n}return e}const jy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ky(e){return!!e.match(jy)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qy(e){return e===parseInt(e.toString(),10)}function Xy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Jy(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Yy(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Zy(e,t){if(t<e)throw new ey(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Qy;function ev(){return null==Qy&&(Qy=po().epsilon()),Qy}function tv(){return"channelsLast"}function nv(e,t){return ha(e,t)}function rv(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Ko(e,n)}function sv(e,t){return lo((()=>{if(2!==e.shape.length)throw new ey(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=rv(e,1);return dv(n,[1,t,1])}))}function iv(e){const t=[Xy(e.shape)];return Ko(e,t)}function av(e){if(e.rank<=1)throw new ey(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Xy(e.shape,1)];return Ko(e,t)}function ov(e,t,n){return lo((()=>{switch(e.rank){case 1:return Dc(e,t,n);case 2:return Mc(e,[t,0],[n,e.shape[1]]);case 3:return zc(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Bc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ac(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ac(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ey(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lv(e,t,n){return lo((()=>{switch(e.rank){case 1:return Dc(e,t,n);case 2:return Mc(e,[0,t],[e.shape[0],n]);case 3:return zc(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Bc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ey(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function uv(e,t,n,r){return lo((()=>{switch(e.rank){case 1:return Dc(e,t,n);case 2:switch(r){case 1:return ov(e,t,n);case 2:return lv(e,t,n);default:throw new ey(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ov(e,t,n);case 2:return zc(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return lv(e,t,n);default:throw new ey(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ov(e,t,n);case 2:return Bc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Bc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return lv(e,t,n);default:throw new ey(`The axis is not within the rank of the tensor ${r}`)}default:throw new ey(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cv(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pl(e,t)}function hv(e,t){switch(e.rank){case 1:return gl([e,t]);case 2:return bl([e,t],0);case 3:return yl([e,t],0);case 4:return wl([e,t],0);default:throw new ey(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ey(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ql(e,t)}function pv(e,t=0,n=1,r,s){return xc(e,t,n,r,s)}function fv(e,t,n,r){if(e.rank<2||t.rank<2)throw new ty(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(n!==r)throw new ty(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const s=!1,i=!1;return jh({a:e,b:t,transposeA:s,transposeB:i,bias:r?bv(e.rank,r,tv()):null,activation:n})}{const s=e.shape.slice(),i=s.pop();e=Ko(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Ko(mh(t,c),[l,-1]);const h=[...s,...u],d=!1,p=!1;return Ko(jh({a:e,b:t,transposeA:d,transposeB:p,bias:r?bv(e.rank,r,tv()):null,activation:n}),h)}}function gv(e,t,n){return lo((()=>(t=Array.isArray(t)?th(t,"int32"):ha(t,"int32"),iu(e,t,n))))}function mv(e){return yu(e,e)}function bv(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ey(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Ko(t,[1,r[0],1,1,1]):Ko(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Ko(t,[1,1,1,1,r[0]]):Ko(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Ko(t,[1,r[0],1,1]):Ko(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Ko(t,[1,1,1,r[0]]):Ko(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Ko(t,[1,r[0],1]):Ko(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Ko(t,[1,1,r[0]]):Ko(t,[1].concat(r))}else if(e<3)return t;throw new ey(`Unsupported input rank by biasAdd: ${t.rank}`)}function xv(e,t,n){return lo((()=>(null==n&&(n=tv()),My(n),wo(e,bv(e.rank,t,n)))))}function yv(e,t=1){if(1!==t)throw new ty(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Hl(e)}function vv(e){return lo((()=>Vl(e,wo(yo(e),1))))}function wv(e,t,n,r){return lo((()=>yh(e,t,n,r)))}function kv(e){return lo((()=>{const t=wo(.5,yu(.2,e));return hl(t,0,1)}))}function Iv(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Sv=["fanIn","fanOut","fanAvg"],Cv=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $v(e){vy(Sv,"FanMode",e)}function Nv(e){vy(Cv,"Distribution",e)}class Tv extends no{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ev extends Tv{apply(e,t){return ac(e,t)}}Ev.className="Zeros",so(Ev);class Rv extends Tv{apply(e,t){return oc(e,t)}}Rv.className="Ones",so(Rv);class _v extends Tv{constructor(e){if(super(),"object"!==typeof e)throw new ey(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ey(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return lo((()=>yu(mo(this.value),oc(e,t))))}getConfig(){return{value:this.value}}}_v.className="Constant",so(_v);class Av extends Tv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return vc(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Av.className="RandomUniform",so(Av);class Fv extends Tv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new ty(`randomNormal does not support dType ${t}.`);return pv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Fv.className="RandomNormal",so(Fv);class Dv extends Tv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new ty(`truncatedNormal does not support dType ${t}.`);return rh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Dv.className="TruncatedNormal",so(Dv);class Ov extends Tv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return lo((()=>{if(2!==e.length||e[0]!==e[1])throw new ey("Identity matrix initializer can only be used for 2D square matrices.");return yu(this.gain,tu(e[0]))}))}getConfig(){return{gain:this.gain}}}function Mv(e,t="channelsLast"){let n,r;if(My(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Xy(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Xy(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Xy(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}Ov.className="Identity",so(Ov);class Lv extends Tv{constructor(e){if(super(),e.scale<0)throw new ey(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,$v(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,Nv(this.distribution),this.seed=e.seed}apply(e,t){const n=Mv(e),r=n[0],s=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,r):"fanOut"===this.mode?i/=Math.max(1,s):i/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(i);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new ty(`${this.getClassName()} does not support dType ${t}.`);return rh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return vc(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Lv.className="VarianceScaling",so(Lv);class zv extends Lv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}zv.className="GlorotUniform",so(zv);class Pv extends Lv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}Pv.className="GlorotNormal",so(Pv);class Bv extends Lv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}Bv.className="HeNormal",so(Bv);class Wv extends Lv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}Wv.className="HeUniform",so(Wv);class Uv extends Lv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}Uv.className="LeCunNormal",so(Uv);class Vv extends Lv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Lv.className}}Vv.className="LeCunNormal",so(Vv);class Gv extends Tv{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ty("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return lo((()=>{if(e.length<2)throw new ty("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=e[0]>e[1]?[e[1],e[0]]:e,n=pv(t,0,1,"float32");let r=Fp.gramSchmidt(n);return e[0]>e[1]&&(r=mh(r)),yu(this.gain,r)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Gv.className="Orthogonal",so(Gv);const Hv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function jv(e,t={}){return gy(e,ro.getMap().classNameMap,t,"initializer")}function Kv(e){return py(e)}function qv(e){if("string"===typeof e){const t=e in Hv?Hv[e]:e;if("GlorotNormal"===t)return new Pv;if("GlorotUniform"===t)return new zv;if("HeNormal"===t)return new Bv;if("HeUniform"===t)return new Wv;if("LeCunNormal"===t)return new Uv;if("LeCunUniform"===t)return new Vv;{const e={};return e["className"]=t,e["config"]={},jv(e)}}return e instanceof Tv?e:jv(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Xv(e){return Array.isArray(e)&&Array.isArray(e[0])}function Jv(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Yv(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ey(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Zv(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ey(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Qv(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const ew="Variable";class tw{constructor(e,t="float32",n=ew,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ny(),n=null==n?ew:n,this.originalName=Gy(n),this.name=Hy(this.originalName),this.trainable_=r,this.constraint=s,this.val=ah(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),nw(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function nw(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function rw(e){return e.map((e=>e.read()))}function sw(e){e.forEach((e=>{const t=e[0];t.write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class iw{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class aw{constructor(e,t,n,r,s,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=a,this.id=Ny(),null!=i&&(this.originalName=Gy(i),this.name=Hy(this.originalName)),this.rank=t.length}}let ow=0;class lw{constructor(e,t){this.callArgs=t,this.id=ow++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let uw=0;class cw extends no{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=uw++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=cy(e)+"_"+Ey(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Qx(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ey(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ly(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ly(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Zx(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Zx(`Layer ${this.name} is not connected, no input to return.`);return ly(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Zx(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Zx(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ly(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=uy(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=uy(this.inputSpec);if(e.length!==t.length)throw new ey(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const i=r.rank;if(null!=s.ndim&&i!==s.ndim)throw new ey(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${i}`);if(null!=s.maxNDim&&i>s.maxNDim)throw new ey(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${i}`);if(null!=s.minNDim&&i<s.minNDim)throw new ey(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${i}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new ey(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),i=s.axes[t],a=r>=0?e[r]:e[e.length+r];if(null!=i&&-1===[i,null].indexOf(a))throw new ey(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],i=r.shape[e];if(null!=t&&null!=i&&t!==i)throw new ey(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=uy(e);let r=!0;for(const i of n)if(!(i instanceof aw)){r=!1;break}let s=!0;for(const i of n)if(i instanceof aw){s=!1;break}if(r===s)throw new ey("Arguments to apply() must be all SymbolicTensors or all Tensors");return Uy(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of uy(e))t.push(n.shape);this.build(ly(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=uy(r),i=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(r=ly(i),null!=this.activityRegularizer)throw new ty("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=hw(e),r=this.computeOutputShape(n);let s;const i=dw(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new aw(i,n,this,uy(e),t,this.name,r))):new aw(i,r,this,uy(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ty("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Zx(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Zx(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Qx(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Qv(this.weights)}build(e){this.built=!0}getWeights(e=!1){return rw(e?this.trainableWeights:this.weights)}setWeights(e){lo((()=>{const t=this.weights;if(t.length!==e.length)throw new ey(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=rw(t);for(let s=0;s<r.length;++s){const i=r[s],a=t[s],o=e[s];if(!k(i.shape,o.shape))throw new ey(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}sw(n)}))}addWeight(e,t,n,r,s,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ey(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():qv("zeros"));const l=r.apply(t,n),u=new tw(l,n,e,i,a);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=uy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,i,a=null){const o=uy(e);t=uy(t),n=uy(n),r=uy(r),s=Jv(s),i=Jv(i);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new lw({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(e["dtype"]=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function hw(e){e=uy(e);const t=[];for(const n of e)t.push(n.shape);return ly(t)}function dw(e){return"float32"}function pw(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=e.inputTensors[n],s=e.inboundLayers[n],i=e.nodeIndices[n],a=pw(r,s,i);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class fw extends cw{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ey("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ey("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ey("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ey("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new aw(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new lw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ey(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function gw(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ey("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const r=new fw({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),s=r.inboundNodes[0].outputTensors;return s[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function mw(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ha(t,e.dtype)}catch(SX){throw new ey(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}fw.className="InputLayer",so(fw);class bw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ey(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=mw(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof aw){if(null==this.id2Value[e.id])throw new ey(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ey(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof aw){if(null==this.id2Value[e.id])throw new ey(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ey(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&uo(this.id2Mask)}}const xw=new sy,yw=new sy;function vw(e){null!=xw&&xw.setMaxEntries(e),null!=yw&&yw.setMaxEntries(e)}function ww(e,t,n,r){const s=null!=n&&n["training"],i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=xw.get(c);if(null==d){const e=kw(a,t);d=e.sorted,h=e.recipientCounts,xw.put(c,d),yw.put(c,h)}h={},s||Object.assign(h,yw.get(c));const p=new bw(t);for(let f=0;f<d.length;++f){if(null!=r){const e=oo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=d[f],i=e.sourceLayer;if(i instanceof fw)continue;const a=[],u=[],c=[];let g=!1;for(const n of e.inputs){const e=p.getValue(n),r=p.getMask(n);a.push(e),u.push(r),null!=r&&(g=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}g&&(n=n||{},n["mask"]=u[0]);const m=uy(i.apply(a,n));let b=null;i.supportsMasking&&(b=i.computeMask(a,u));const x=Cw(e),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){p.hasKey(y[t])||p.add(y[t],m[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=m[t])}s||uo(c)}return p.disposeMasks(),i?l:l[0]}function kw(e,t){b(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Sw(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const i of e){const{sorted:e,recipientMap:a}=Sw(i,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in a)null==r[t]&&(r[t]=new Set),a[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:Iw(r)}}function Iw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Sw(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const i=[],a=[];i.push(e);while(i.length>0){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),r.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:r,recipientMap:s}}function Cw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $w=ie();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Nw(e,t){return lo((()=>qc(Iu(yu(e,e),t,!0))))}$w.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),vw);class Tw extends no{getConfig(){return{}}}class Ew extends Tw{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>{const t=Nw(e,this.axis),n=hl(t,0,this.maxValue);return yu(e,Vl(n,wo(ev(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ew.className="MaxNorm",so(Ew);class Rw extends Tw{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>Vl(e,wo(ev(),Nw(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Rw.className="UnitNorm",so(Rw);class _w extends Tw{apply(e){return kc(e)}}_w.className="NonNeg",so(_w);class Aw extends Tw{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return lo((()=>{const t=Nw(e,this.axis),n=wo(yu(this.rate,hl(t,this.minValue,this.maxValue)),yu(1-this.rate,t));return yu(e,Vl(n,wo(ev(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Aw.className="MinMaxNorm",so(Aw);const Fw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Dw(e){return py(e)}function Ow(e,t={}){return gy(e,ro.getMap().classNameMap,t,"constraint")}function Mw(e){if(null==e)return null;if("string"===typeof e){const t=e in Fw?Fw[e]:e,n={className:t,config:{}};return Ow(n)}return e instanceof Tw?e:Ow(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function Lw(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const i=e[s];if("number"!==typeof i){const e=i;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];uo(r)}}function zw(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var Pw;(function(e){e[e["SILENT"]=0]="SILENT",e[e["VERBOSE"]=1]="VERBOSE"})(Pw||(Pw={}));const Bw=125;class Ww{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Uw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Vw extends Ww{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t["size"]?0:t["size"];this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=lo((()=>wo(this.totals[r],yu(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:lo((()=>{const e=yu(Vl(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),co(t[n])})))}}class Gw extends Ww{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let i=0;i<r.length;++i)if("number"!==typeof r[i]){const a=r[i];e.push(a.data()),t.push(s),n.push(i)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){const e=this.history[t[s]][n[s]];e.dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class Hw extends Ww{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Gp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=Bw),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");B(this.yieldEvery)&&(this.maybeWait=Sy(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Lw(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Lw(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Lw(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Lw(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Lw(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):B(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Lw(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Lw(e),await this.trainEnd(e))}}function jw(e,t){if(null==e&&(e={}),e instanceof Ww)return[e];if(Array.isArray(e)&&e[0]instanceof Ww)return e;const n=uy(e);return n.map((e=>new Hw(e,t)))}class Kw{constructor(){}static registerCallbackConstructor(e,t){b(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Kw.checkForDuplicate(t),null==Kw.constructors[e]&&(Kw.constructors[e]=[]),Kw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Kw.constructors){const n=Kw.constructors[+t];n.forEach((t=>{if(t===e)throw new ey("Duplicate callback constructor.")}))}}static clear(){Kw.constructors={}}static createCallbacks(e){const t=[];for(const n in Kw.constructors){const r=+n;e>=r&&t.push(...Kw.constructors[r])}return t.map((e=>new e))}}function qw(e,t,n,r,s,i,a,o,l){const u=new Gw,c=[new Vw,...Kw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Uw(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Xw(e,t={},n=!1){return gy(e,ro.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Jw(e,t){return lo((()=>{"float32"!==e.dtype&&(e=ha(e,"float32"));const n=Iu(mv(e),t,!0),r=ul(n.shape,ev()),s=qc(Ou(n,r));return Vl(e,s)}))}function Yw(e,t){return lo((()=>Lu(mv(wu(t,e)),-1)))}function Zw(e,t){return lo((()=>Lu(yo(wu(t,e)),-1)))}function Qw(e,t){return lo((()=>{const n=wu(e,t),r=hl(yo(e),ev(),Number.MAX_VALUE),s=yo(Vl(n,r));return yu(100,Lu(s,-1))}))}function ek(e,t){return lo((()=>{const n=hl(t,ev(),Number.MAX_VALUE),r=pu(wo(1,n)),s=hl(e,ev(),Number.MAX_VALUE),i=pu(wo(1,s));return Lu(mv(wu(r,i)),-1)}))}function tk(e,t){return lo((()=>{const n=Ou(0,wu(1,yu(e,t)));return Lu(mv(n),-1)}))}function nk(e,t){return lo((()=>{const n=Ou(0,wu(1,yu(e,t)));return Lu(n,-1)}))}function rk(e,t){return lo((()=>{const n=Iu(yu(e,t),-1),r=bu(yu(wu(1,e),t),-1);return Ou(0,wo(1,wu(r,n)))}))}function sk(e,t){return lo((()=>{const n=Math.log(2),r=wu(t,e),s=wu(wo(r,Gc(yu(-2,r))),n);return Lu(s,-1)}))}function ik(e,t,n=!1){return lo((()=>{if(n)t=Uc(t);else{const e=Iu(t,t.shape.length-1,!0);t=Vl(t,e)}return t=hl(t,ev(),1-ev()),tc(Iu(yu(ha(e,"float32"),pu(t)),t.shape.length-1))}))}function ak(e,t,n=!1){return lo((()=>{const r=ha(ru(iv(e)),"int32");t=hl(t,ev(),1-ev());const s=t.shape,i=Ko(ic(r,s[s.length-1]),s);return ik(i,t,n)}))}function ok(e,t){if(!k(e.shape,t.shape))throw new ey(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return lo((()=>{const n=kc(t),r=tc(yo(t));return wo(wu(n,yu(t,e)),gu(Xl(r)))}))}function lk(e,t){return lo((()=>{let n;return n=hl(t,ev(),1-ev()),n=pu(Vl(n,wu(1,n))),Lu(ok(e,n),-1)}))}function uk(e,t){return lo((()=>{const n=hl(e,ev(),1),r=hl(t,ev(),1);return Iu(yu(e,pu(Vl(n,r))),-1)}))}function ck(e,t){return lo((()=>{const n=pu(wo(ev(),t));return Lu(wu(t,yu(e,n)),-1)}))}function hk(e,t){return lo((()=>{const n=Jw(e,-1),r=Jw(t,-1),s=yu(n,r);return tc(Iu(s,-1))}))}Kw.constructors={};const dk={meanSquaredError:Yw,meanAbsoluteError:Zw,meanAbsolutePercentageError:Qw,meanSquaredLogarithmicError:ek,squaredHinge:tk,hinge:nk,categoricalHinge:rk,logcosh:sk,categoricalCrossentropy:ik,sparseCategoricalCrossentropy:ak,binaryCrossentropy:lk,kullbackLeiblerDivergence:uk,poisson:ck,cosineProximity:hk};function pk(e){if("string"===typeof e){if(e in dk)return dk[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ey(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function fk(e,t){return lo((()=>{const n=yu(.5,uc(t)),r=nv(ou(t,n),e.dtype);return Lu(Kl(e,r),-1)}))}function gk(e,t){return lo((()=>nv(Kl(No(e,-1),No(t,-1)),"float32")))}function mk(e,t){return lo((()=>ha(Iu(Nu(Kl(e,1),Kl(t,1))),"float32")))}function bk(e,t){return lo((()=>ha(Iu(Nu(Kl(e,0),Kl(t,1))),"float32")))}function xk(e,t){return lo((()=>{const n=mk(e,t),r=bk(e,t),s=wo(n,r);return ha(lh(ou(s,0),Vl(n,s),0),"float32")}))}function yk(e,t){return lk(e,t)}function vk(e,t){return e.rank===t.rank&&(e=Jc(e,[e.rank-1])),t=No(t,-1),t.dtype!==e.dtype&&(t=ha(t,e.dtype)),ha(Kl(e,t),"float32")}const wk=Yw,kk=Yw,Ik=Zw,Sk=Zw,Ck=Qw,$k=Qw,Nk=ik,Tk=hk,Ek=ak,Rk={binaryAccuracy:fk,categoricalAccuracy:gk,precision:xk,categoricalCrossentropy:Nk,sparseCategoricalCrossentropy:Ek,mse:wk,MSE:kk,mae:Ik,MAE:Sk,mape:Ck,MAPE:$k,cosine:Tk};function _k(e){if("string"===typeof e&&e in Rk)return Rk[e];if("string"!==typeof e&&null!=e)return e;throw new ey(`Unknown metric ${e}`)}function Ak(e){if(ay(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(dk))if(dk[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Rk))if(Rk[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Fk(e){const t={Adagrad:()=>Up.adagrad(.01),Adadelta:()=>Up.adadelta(1,.95,ev()),Adam:()=>Up.adam(.001,.9,.999,ev()),Adamax:()=>Up.adamax(.002,.9,.999,ev(),0),RMSProp:()=>Up.rmsprop(.001,.9,0,ev()),SGD:()=>Up.sgd(.01)};if(t["adagrad"]=t["Adagrad"],t["adadelta"]=t["Adadelta"],t["adam"]=t["Adam"],t["adamax"]=t["Adamax"],t["rmsprop"]=t["RMSProp"],t["sgd"]=t["SGD"],e in t)return t[e]();throw new ey(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Dk=1048576;function Ok(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Mk(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Dk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Dk}.`)}}function Mk(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Mk(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Mk(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Lk(e,t,n,r=console.log){const s=Pk(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}r("_".repeat(t)),Bk(i,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?Wk(o[c],n,r):Uk(o[c],n,a,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=zk(e),u=Qv(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}function zk(e){let t;return t=null!=e.collectedTrainableWeights?Qv(e.collectedTrainableWeights):Qv(e.trainableWeights),t}function Pk(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Bk(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function Wk(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(SX){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(SX){r="multiple"}const i=e.name,a=e.getClassName(),o=[`${i} (${a})`,s,r,e.countParams().toString()];Bk(o,t,n)}function Uk(e,t,n,r){let s,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(SX){i="multiple"}try{s=JSON.stringify(e.outputShape)}catch(SX){s="multiple"}const a=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],r=h.tensorIndices[e];a.push(`${t}[${n}][${r}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0],c=[`${o} (${l})`,i,s,e.countParams().toString(),u];Bk(c,t,r);for(let h=1;h<a.length;++h)Bk(["","","","",a[h]],t,r)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Vk(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Gk(e,t){if(null===e)return null;if("string"===typeof e)return hy(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Vk(t,s,r)?n.push(r):n.push(Gk(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=hy(n);t[e]=Gk(r,e)}}return t}}function Hk(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return cy(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Vk(t,s,r)?n.push(r):n.push(Hk(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=cy(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?Hk(r,n):r}return t}}
/** @license See the LICENSE file. */
const jk="4.0.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Kk extends cw{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Ey(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],xy(this.inputs).length!==this.inputs.length)throw new ey(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);xy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;ay(0===t,"input layer has >1 nodes"),ay(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof fw))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},i={},a=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new Qx(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Kk.nodeKey(r,s)),r.id in i||(i[r.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let i=0;i<c;i++){const e=u.inputTensors[i],r=u.inboundLayers[i],s=u.nodeIndices[i],a=u.tensorIndices[i];o(e,t,n,r,s,a)}t.push(u);while(n.indexOf(u)>=0)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=a.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const i=null==r[b.outboundLayer.id]?0:r[b.outboundLayer.id];e=Math.max(e,i),r[b.outboundLayer.id]=e,s[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let r=0;r<b.inboundLayers.length;r++){const s=b.inboundLayers[r],i=b.nodeIndices[r],a=s.inboundNodes[i],o=null==t[a.id]?0:t[a.id];t[a.id]=Math.max(e+1,o),n[a.id]=a}}const h={};for(const b in t){const e=t[b];e in h||(h[e]=[]),h[e].push(n[b])}const d={};for(const b in r){const e=r[b];e in d||(d[e]=[]),d[e].push(s[b])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(by);this.layers=[];for(const b of p){const e=d[b];e.sort(((e,t)=>{const n=i[e.id],r=i[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Kk&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(by);const f=this.inputs.slice(),g=[];for(const b of p)for(const e of h[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Qx(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const b of m){const e=m.filter((e=>e===b)).length;if(1!==e)throw new Qx(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new lw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ey("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const i of this.layers)for(const e of i.weights){if(null!=n[e.originalName])throw new ey(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,r++}const s=[];for(const i in e){let r=i;if(null==n[i]){const e=i.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);r=t.join("/")}if(null!=n[r])s.push([n[r],e[i]]);else if(t)throw new ey(`Provided weight data has no target variable: ${i}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ey(`${e.length} of ${r} weights are not set: ${e}`)}sw(s)}updatedConfig(){const e=this.getConfig(),t={};return t["className"]=this.getClassName(),t["config"]=e,t["kerasVersion"]=`tfjs-layers ${jk}`,t["backend"]="TensorFlow.js",t}toJSON(e,t=!0){const n=Hk(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return lo((()=>{e=uy(e);const n=new bw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return ww(this.outputs,n,t)}))}computeMask(e,t){return lo((()=>{let n;return e=uy(e),n=null==t?iy(null,e.length):uy(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Jv(e);if(t.length!==this.inputLayers.length)throw new ey(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<t.length;a++){const e=this.inputLayers[a],r=t[a],s=e.name+"_0_0";n[s]=r}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(by);if(r.length>1)for(const a of r){const e=this.nodesByDepth[a];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],s=t.nodeIndices[o],i=t.tensorIndices[o],a=`${e.name}_${s}_${i}`,l=n[a];r.push(l)}const s=e.computeOutputShape(ly(r)),i=Jv(s),a=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++){const r=`${e.name}_${a}_${t}`;n[r]=i[t]}}}const s=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],t=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],r=`${e.name}_${t}_${n}`;i.push(r)}for(let a=0;a<i.length;a++){const e=i[a];ay(e in n),s.push(n[e])}return ly(s)}runInternalGraph(e,t){null==t&&(t=iy(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const r=this.inputs[o],s=e[o],i=t[o];n[r.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(by);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,i=new Array;for(const t of r)t.id in n&&i.push(n[t.id]);if(i.length===r.length){let r,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u["mask"]&&(u["mask"]=n),o=uy(e.call(t,u)),l=uy(e.computeMask(t,n)),r=[t],a=[n]}else r=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u["mask"]&&(u["mask"]=a),o=uy(e.call(r,u)),l=uy(e.computeMask(r,a));if(e.activityRegularizer)throw new ty("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],i=l[e];n[t.id]=[r,i]}}}}const s=[],i=[],a=[];for(const o of this.outputs){ay(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];a.push(e.shape),s.push(e),i.push(t)}return[s,i,a]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Kk?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=Kk.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ey(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ey("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new ey(`No such layer: ${e}`)}calculateLosses(){return lo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Kk.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=Kk.nodeKey(i,n);let a={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),a=e.callArgs}catch(SX){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=e.tensorIndices[r],l=Kk.nodeKey(s,i);let u=t[l];null==u&&(u=0),n.push([s.name,u,o,a])}s.push(n)}}}const a={};a["name"]=i.name,a["className"]=e,a["config"]=r,a["inboundNodes"]=s,n.push(a)}e["layers"]=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],s=Kk.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];r.push([e.name,a,o])}e["inputLayers"]=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],r=Kk.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];s.push([e.name,a,o])}return e["outputLayers"]=s,e}static fromConfig(e,t,n={},r=!1){const s={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let r;for(const i of t){const o=i[0],l=i[1],u=i[2];if(r=null==i[3]?{}:i[3],!(o in s))return void a(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(ly(n),r)}function l(e){const n=e["name"],i=Xw(e,null!=t["customObjects"]?t["customObjects"]:{});i.setFastWeightInitDuringBuild(r),s[n]=i;const o=e["inboundNodes"];o.forEach((e=>{if(!(e instanceof Array))throw new ey(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const u=t["name"],c=t["layers"];for(const g of c)l(g);while(!yy(i))for(const e of c){const t=s[e["name"]];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t["inputLayers"];for(const g of p){const e=g[0],t=g[1],n=g[2];ay(e in s);const r=s[e],i=r.inboundNodes[t].outputTensors;h.push(i[n])}const f=t["outputLayers"];for(const g of f){const e=g[0],t=g[1],n=g[2];ay(e in s);const r=s[e],i=r.inboundNodes[t].outputTensors;d.push(i[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new ey("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){lo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qk(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Xk(e,t){return qk(e,t,"classWeight")}async function Jk(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=lo((()=>{if(1===e.shape.length)return pa(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return No(e,t)}if(1===e.shape[1])return Ko(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());uo(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),th(s,"float32")}return null}function Yk(e,t){return yu(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Zk=32;function Qk(e,t){let n,r;const s=t;n=s["xs"],r=s["ys"],b(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=eI("input",e.inputNames,n),a=eI("output",e.outputNames,r),o=i[0].shape[0];b(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),b(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<i.length;l++)b(i[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<a.length;l++)b(a[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function eI(e,t,n){if(n instanceof Ss)return[n];if(Array.isArray(n))return b(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new ey(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function tI(e){if(3===e.length)throw new ty("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function nI(e,t,n){const r=null!=n.batchesPerEpoch;if(b(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),b(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),b(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),b(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),b(null==n["validationSplit"],(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let i,a;if(s)if(sI(n.validationData))b(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=tI(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=jw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=qw(c,h,n.epochs,null,null,rI(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();while(f<n.epochs){const u={};await d.onEpochBegin(f);let c=0,h=0;r||(g=await t.iterator());while(!r||c<n.batchesPerEpoch){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Qk(e,t.value),i={};i["batch"]=h,i["size"]=r[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=Xk(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await Jk(s[e],null,t[e]))}const u=r.concat(s).concat(a),p=o(u);uo(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,co(n)}await d.onBatchEnd(h,i),zw(i),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=sI(n.validationData)?uy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):uy(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?Zk:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function rI(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function sI(e){return"function"===typeof e.iterator}function iI(e){return"function"===typeof e.next}async function aI(e,t,n){n=n||{};const r=null!=n.batches,s=e.testFunction;let i=[];if(n.verbose>0)throw new ty("Verbose mode is not implemented yet.");b(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a=iI(t)?t:await t.iterator();let o=0,l=0;while(!r||l<n.batches){const t=await a.next();if(i=lo((()=>{if(t.value){const{xs:n,ys:r}=Qk(e,t.value),a=n.concat(r),u=lo((()=>s(a)));if(uo(a),0===l)for(let e=0;e<u.length;++e)i.push(mo(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=lo((()=>wo(i[e],yu(c,t)))),l>0&&uo(n)}uo(u),o+=c,++l}return i})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const e=i[u];i[u]=Vl(i[u],o),uo(e)}return ly(i)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oI(e){b(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function lI(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ov(e,t,n-t))):ov(e,t,n-t)}function uI(e,t){return lo((()=>null==e?null:Array.isArray(e)?e.map((e=>uI(e,t))):gv(e,"int32"===t.dtype?t:ha(t,"int32"))))}function cI(e,t){const n=[];let r=0,s=null;while(r<e)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}async function hI(e,t,n,r,s,i,a,o,l,u,c,h,p,f,g){null==s&&(s=32),null==i&&(i=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=g&&(m=!0,null==f))throw new ey("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,s,f,"steps_per_epoch");let x;null!=b&&(x=Zy(0,b)),null==a&&(a=1);const{callbackList:y,history:v}=qw(o,a,i,p,b,f,s,m,h);y.setModel(e),e.history=v,await y.onTrainBegin(),e.stopTraining_=!1;for(let w=p;w<i;++w){await y.onEpochBegin(w);const i={};if(null!=f)throw new ty("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new ty("batch shuffling is not implemneted yet");c&&d(x);const a=th(x),o=cI(b,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),lo((()=>{const d=o[c][0],p=o[c][1],f=ov(a,d,p-d);h["batch"]=c,h["size"]=p-d;const g=uI(n,f),b=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,co(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];co(s),i["val_"+n]=s}}})),await y.onBatchEnd(c,h),zw(h),e.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(w,i),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}async function dI(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,i,a,o,l,u,c,h,d;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;oI(p);const f=!1,g=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,p);s=g[0],i=g[1],d=g[2];let m,b=!1;if(null!=r.validationData&&r.validationData.length>0){if(b=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ty("validationData including sample weights is not supported yet."):new ey(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);l=r.validationData[0],u=r.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,p);c=n[0],h=n[1],m=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){b=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];c=lI(s,e,t),a=s,s=lI(s,0,e),h=lI(i,e,t),o=i,i=lI(i,0,e),m=c.concat(h)}else null!=r.validationSteps&&(b=!0);const x=s.concat(i).concat(d);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),v=e.getDedupedMetricsNames();let w,k;b?(e.makeTestFunction(),w=e.testFunction,k=v.slice().concat(v.map((e=>"val_"+e)))):(w=null,m=[],k=v.slice());const I=jw(r.callbacks,r.yieldEvery),S=await hI(e,y,x,v,p,r.epochs,r.verbose,I,w,m,r.shuffle,k,r.initialEpoch,null,null);return S}finally{e.isTraining=!1,fI(s,t),fI(i,n),fI(a,t),fI(o,n),fI(c,l),fI(h,u),null!=d&&uo(d)}}function pI(e){const t=[];e instanceof Ss&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(rv(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function fI(e,t){if(null==e)return;const n=[];if(t instanceof Ss)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){const e=t[s];n.push(e.id)}const r=[];if(e instanceof Ss)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function gI(e){return e instanceof Ss}function mI(e){return Array.isArray(e)}function bI(e){return!gI(e)&&!mI(e)}function xI(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(mI(e)&&e.length>0)t=!0;else if(bI(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ey(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(bI(e)){i=[];for(const n of t){if(null==e[n])throw new ey(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(mI(e)){if(e.length!==t.length)throw new ey(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new ey(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=pI(i),null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new ey(`Error when checking ${s}: expected ${t[a]} to have ${n[a].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[a].length;++t){if(0===t&&!r)continue;const i=e.shape[t],o=n[a][t];if(null!=o&&o>=0&&i!==o)throw new ey(`${s} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return i}function yI(e,t,n){const r=xy(e.map((e=>e.shape[0])));r.sort();const s=xy(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new ey(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new ey(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!k(r,s))throw new ey(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}function vI(e,t,n){const r=[Yw,lk,ik];for(let s=0;s<e.length;++s){const i=e[s],a=t[s],o=n[s];if(null!=a){if(a===ik&&1===i.shape[i.shape.length-1])throw new ey(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new ey(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function wI(e,t,n,r=!0,s=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new ey(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new ey(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new ey(`Error when checking ${s}: expected ${t[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let i=0;i<n[a].length;++i){if(0===i&&!r)continue;const o=e.shape[i],l=n[a][i];if(null!=l&&l!==o)throw new ey(`Error when checking ${s}: expected ${t[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function kI(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const II="layers-model";class SI extends Kk{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ey("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Lk(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=Fk(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof bo))throw new ey("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ey(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>pk(e)))}else{const n=pk(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ey(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(pk(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Uy("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=kI(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Uy("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=r[e],i=t=>{const n="";let r,i,a;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===lk?-1!==["accuracy","acc"].indexOf(o)?i=fk:-1!==["crossentropy","ce"].indexOf(o)&&(i=yk):this.lossFunctions[e]===ak?-1!==["accuracy","acc"].indexOf(o)?i=vk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Ek):-1!==["accuracy","acc"].indexOf(o)?i=gk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Nk),-1!==["accuracy","acc"].indexOf(o)?s="acc":-1!==["crossentropy","ce"].indexOf(o)&&(s="ce"),a=i,r=n+s}else{const e=_k(o);a=e,r=n+Ak(o)}let t;Uy(r,(()=>{t=a})),s(e,r,t)}};i(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;oI(r);const s=!0,i=this.standardizeUserDataXY(e,t,s,r);try{const s=i[0].concat(i[1]);this.makeTestFunction();const a=this.testFunction,o=this.testLoop(a,s,r,n.verbose,n.steps);return ly(o)}finally{fI(i[0],e),fI(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),aI(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new ey(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ey(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ey("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),i=new bw;if(e instanceof Ss&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ey(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new ey(`No value is provided for the model's input ${o.name}`);i.add(o,t)}const a=ww(s,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=iy(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],i=s.map((e=>e.name));for(let r=0;r<e.length;++r){const a=i.indexOf(e[r]);if(-1!==a&&(t[r]=s[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ey(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return lo((()=>{const r=this.checkNumSamples(e);if(n)throw new ty("Verbose predictLoop() is not implemented yet.");const s=cI(r,t),i=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){const n=lo((()=>{const n=s[t][0],r=s[t][1],i=lI(e,n,r),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new bw(a);return ww(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return ly(i.map((e=>pl(e,0))))}))}predict(e,t={}){const n=pI(e);wI(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return oI(r),this.predictLoop(n,r)}finally{fI(n,e)}}predictOnBatch(e){wI(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Qx("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i],t=this.feedLossFns[i];t===ak?s.push(e.slice(0,e.length-1).concat([1])):s.push(e)}if(e=xI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=xI(t,this.feedOutputNames,s,!1,"target"),yI(e,t,null),vI(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new ey(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,s,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Xk(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Jk(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,r=0,s){return lo((()=>{const i=this.checkNumSamples(t,n,s,"steps"),a=[];if(r>0)throw new ty("Verbose mode is not implemented yet.");if(null!=s)throw new ty("steps mode in testLoop() is not implemented yet");{const r=cI(i,n),s=th(Zy(0,i));for(let n=0;n<r.length;++n){const i=r[n][0],o=r[n][1],l=ov(s,i,o-i),u=uI(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(mo(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=wo(a[e],yu(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Vl(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(oy(e,r)>1){const t=oy(e.slice(0,n),r);s+=`_${t}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new bw(e),o=ww(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let i=e(r[n],o[n]);null!=s[n]&&(i=Yk(i,s[n]));const a=Lu(i);t.push(a),l=0===n?i:wo(l,i)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],s=this.metricsTensors[n][1];e=Lu(t(r[s],o[s]))}co(e),i.push(e)}return l=Lu(l),this.calculateLosses().forEach((e=>{l=wo(l,e)})),l},o=this.collectedTrainableWeights.map((e=>e.read())),l=!0,u=this.optimizer_.minimize(a,l,o);return[u].concat(i)}}makeTestFunction(){this.testFunction=e=>lo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:r[e]});const a=new bw(i),o=ww(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],i=Lu(r(s[e],o[e]));n=0===e?i:wo(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],i=Lu(n(s[r],o[r]));t.push(i)}return t}))}async fit(e,t,n={}){return dI(this,e,t,n)}async fitDataset(e,t){return nI(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],i=this.makeTrainFunction(),a=i(r.concat(s)),o=[];for(const l of a){const e=await l.data();o.push(e[0])}return uo(a),fI(n[0],e),fI(n[1],t),ly(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let i=0;i<r.length;++i)n&&!r[i].trainable||t.push({name:r[i].originalName,tensor:s[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=oo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-oo().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=cy(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>cy(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=cy(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[cy(Ak(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>cy(Ak(e))));{const e={};for(const t in this.metrics)e[t]=cy(Ak(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Gk(e.optimizer_config),n=Xw(t);let r,s;if("string"===typeof e.loss)r=hy(e.loss);else if(Array.isArray(e.loss))r=e.loss.map((e=>hy(e)));else if(null!=e.loss){r={};for(const t in e.loss)r[t]=hy(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>hy(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=hy(e.metrics[t])}this.compile({loss:r,metrics:s,optimizer:n})}async save(e,t){if("string"===typeof e){const t=Ei(e);if(0===t.length)throw new ey(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ey(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ey("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await hi(this.getNamedWeights(t)),r=!1,s=null,i=this.toJSON(s,r),a={modelTopology:i,format:II,generatedBy:`TensorFlow.js tfjs-layers v${jk}`,convertedBy:null},o=null!=t&&t.includeOptimizer;if(o&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await hi(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=xi([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ok(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ok(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}SI.className="Model",so(SI);class CI extends SI{}async function $I(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Ri(e,t);if(0===n.length)n.push(Aa(e,t));else if(n.length>1)throw new ey(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return NI(e,void 0,t)}async function NI(e,t,n){if(null==n&&(n={}),null==e.load)throw new ey("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s["model_config"]&&(s=s["model_config"]);const i=null==n.strict||n.strict,a=null!=r.weightData&&null!=r.weightSpecs&&i,o=Xw(Gk(s),t,a),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ey("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=TI(r.weightData,r.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),uo(e),uo(t.map((e=>e.tensor)))}return o}function TI(e,t){const n=di(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}CI.className="Functional",so(CI);class EI extends SI{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ey("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some((e=>e<0)))throw new ey(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof EI||e instanceof SI;let n;if(t){if(n=e,1!==n.outputs.length)throw new ey("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ey("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ey("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=gw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ey(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ey("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=pw(this.outputs[0])}this.inboundNodes=[],new lw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:iy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Zv(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new SI({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Qx("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0]["className"])throw new ey("Legacy serialization format not supported yet.");s=t}else b(null!=t["layers"],(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t["layers"],delete t["layers"],i=t;const a=new e(i);if(!(a instanceof EI))throw new ty(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const o of s){const e=void 0,t=Xw(o,e,r);r&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new ey("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ey("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n["className"]=t.getClassName(),n["config"]=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}EI.className="Sequential",so(EI);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class RI extends no{getConfig(){return{}}}class _I extends RI{apply(e,t=1){return yv(e,t)}}_I.className="elu",so(_I);class AI extends RI{apply(e){return $c(e)}}AI.className="selu",so(AI);class FI extends RI{apply(e){return kc(e)}}FI.className="relu",so(FI);class DI extends RI{apply(e){return lo((()=>Wu(6,kc(e))))}}DI.className="relu6",so(DI);class OI extends RI{apply(e){return e}}OI.className="linear",so(OI);class MI extends RI{apply(e){return Rc(e)}}MI.className="sigmoid",so(MI);class LI extends RI{apply(e){return kv(e)}}LI.className="hardSigmoid",so(LI);class zI extends RI{apply(e){return Gc(e)}}zI.className="softplus",so(zI);class PI extends RI{apply(e){return vv(e)}}PI.className="softsign",so(PI);class BI extends RI{apply(e){return eh(e)}}BI.className="tanh",so(BI);class WI extends RI{apply(e,t=-1){return Uc(e,t)}}WI.className="softmax",so(WI);class UI extends RI{apply(e,t=-1){return Cu(e,t)}}UI.className="logSoftmax",so(UI);class VI extends RI{apply(e,t=1){return lo((()=>yu(Rc(yu(e,t)),e)))}}VI.className="swish",so(VI);class GI extends RI{apply(e){return lo((()=>yu(e,eh(Gc(e)))))}}function HI(e){return e.getClassName()}function jI(e,t={}){return gy(e,ro.getMap().classNameMap,t,"activation")}function KI(e){if(null==e){const e={className:"linear",config:{}};return jI(e)}if("string"===typeof e){const t={};return t["className"]=e,t["config"]={},jI(t)}return e instanceof RI?e:jI(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qI(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}GI.className="mish",so(GI);class XI extends no{}class JI extends XI{constructor(e){super(),qI(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return lo((()=>{let t=ac([1]);return this.hasL1&&(t=wo(t,Iu(yu(this.l1,yo(e))))),this.hasL2&&(t=wo(t,Iu(yu(this.l2,mv(e))))),Ko(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t["l1"],l2:t["l2"]})}}JI.className="L1L2",so(JI);const YI={l1l2:"L1L2"};function ZI(e){return py(e)}function QI(e,t={}){return gy(e,ro.getMap().classNameMap,t,"regularizer")}function eS(e){if(null==e)return null;if("string"===typeof e){const t=e in YI?YI[e]:e,n={className:t,config:{}};return QI(n)}return e instanceof XI?e:QI(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class tS extends cw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Yv(e);let n=kc(e);return null!=this.maxValue&&(n=hl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}tS.className="ReLU",so(tS);class nS extends cw{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Yv(e);return hu(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}nS.className="LeakyReLU",so(nS);class rS extends cw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=qv(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=eS(e.alphaRegularizer),this.alphaConstraint=Mw(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new ey(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=Zv(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new iw({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Yv(e),pc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Kv(this.alphaInitializer),alphaRegularizer:ZI(this.alphaRegularizer),alphaConstraint:Dw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}rS.className="PReLU",so(rS);class sS extends cw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ty(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Yv(e);return Hl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}sS.className="ELU",so(sS);class iS extends cw{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Yv(e);return yu(n,ha(ou(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}iS.className="ThresholdedReLU",so(iS);class aS extends cw{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new WI).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Yv(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function oS(e,t,n){if("number"===typeof e)return iy(e,t);if(e.length!==t)throw new ey(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if(!qy(s))throw new ey(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e}function lS(e,t,n,r,s=1){if(null==e)return e;const i=t+(t-1)*(s-1);let a;return a="same"===n?e:e-i+1,Math.floor((a+r-1)/r)}function uS(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Yy([n-t,0]);else{if("same"!==r)throw new ey(`Unsupport padding mode: ${r}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function cS(e,t){return lo((()=>(My(t),"channelsFirst"===t?mh(e,[0,2,3,1]):e)))}function hS(e,t){return lo((()=>(My(t),"channelsFirst"===t?mh(e,[0,2,3,4,1]):e)))}function dS(e,t,n,r=1,s="valid",i,a=1){return lo((()=>{if(null==i&&(i=tv()),My(i),3!==e.shape.length)throw new ey(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ey(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ey(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=mh(e,[0,2,1])),"causal"===s)throw new ty("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Cl(e,t,r,"same"===s?"same":"valid","NWC",a);return null!=n&&(o=xv(o,n)),o}))}function pS(e,t,n,r=[1,1],s="valid",i,a,o=null){return lo((()=>{if(null==i&&(i=tv()),My(i),3!==e.rank&&4!==e.rank)throw new ey(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ey(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=cS(e,i);if("causal"===s)throw new ty("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ph({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=mh(l,[0,3,1,2])),l}))}function fS(e,t,n,r=[1,1,1],s="valid",i,a){return lo((()=>{if(null==i&&(i=tv()),My(i),4!==e.rank&&5!==e.rank)throw new ey(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ey(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=hS(e,i);if("causal"===s)throw new ty("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_l(o,t,r,"same"===s?"same":"valid","NDHWC",a),null!=n&&(o=xv(o,n)),"channelsFirst"===i&&(o=mh(o,[0,4,1,2,3])),o}))}aS.className="Softmax",so(aS);class gS extends cw{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",gS.verifyArgs(t),this.rank=e,ky(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ty(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=oS(t.kernelSize,e,"kernelSize"),this.strides=oS(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,zy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,My(this.dataFormat),this.activation=KI(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=qv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Mw(t.biasConstraint),this.biasRegularizer=eS(t.biasRegularizer),this.activityRegularizer=eS(t.activityRegularizer),this.dilationRate=oS(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ey(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ey(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ey(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ay("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!wy(e.kernelSize,"number",1,3))throw new ey(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:HI(this.activation),useBias:this.useBias,biasInitializer:Kv(this.biasInitializer),biasRegularizer:ZI(this.biasRegularizer),activityRegularizer:ZI(this.activityRegularizer),biasConstraint:Dw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class mS extends gS{constructor(e,t){super(e,t),this.kernel=null,mS.verifyArgs(t),this.filters=t.filters,ky(this.filters,"filters"),this.kernelInitializer=qv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Mw(t.kernelConstraint),this.kernelRegularizer=eS(t.kernelRegularizer)}build(e){e=Zv(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ey(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return lo((()=>{let t;e=Yv(e);const n=null==this.bias?null:this.bias.read(),r=Cy(this.activation.getClassName());if(null!=r&&2===this.rank)t=pS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=dS(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=pS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ty("convolutions greater than 3D are not implemented yet.");t=fS(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Zv(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=lS(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Kv(this.kernelInitializer),kernelRegularizer:ZI(this.kernelRegularizer),kernelConstraint:Dw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new ey(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class bS extends mS{constructor(e){super(2,e),bS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!wy(e.kernelSize,"number",1,2))throw new ey(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}bS.className="Conv2D",so(bS);class xS extends mS{constructor(e){super(3,e),xS.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ey(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}xS.className="Conv3D",so(xS);class yS extends bS{constructor(e){if(super(e),this.inputSpec=[new iw({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ey(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Zv(e),4!==e.length)throw new ey("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ey("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new iw({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return lo((()=>{let t=Yv(e);if(4!==t.shape.length)throw new ey(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i;"channelsFirst"===this.dataFormat?(s=2,i=3):(s=1,i=2);const a=n[s],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=uS(a,c,l,this.padding),p=uS(o,h,u,this.padding),f=[r,d,p,this.filters];"channelsLast"!==this.dataFormat&&(t=mh(t,[0,2,3,1]));let g=El(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=mh(g,[0,3,1,2])),null!=this.bias&&(g=xv(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g}))}computeOutputShape(e){e=Zv(e);const t=e.slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=uS(t[r],o,i,this.padding),t[s]=uS(t[s],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}yS.className="Conv2DTranspose",so(yS);class vS extends xS{constructor(e){if(super(e),this.inputSpec=[new iw({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ey(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Zv(e),5!==e.length)throw new ey("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ey("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new iw({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return lo((()=>{let t=Yv(e);if(5!==t.shape.length)throw new ey(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,i,a;"channelsFirst"===this.dataFormat?(a=2,s=3,i=4):(a=1,s=2,i=3);const o=n[a],l=n[s],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=uS(o,p,c,this.padding),b=uS(l,f,h,this.padding),x=uS(u,g,d,this.padding),y=[r,m,b,x,this.filters];"channelsLast"!==this.dataFormat&&(t=mh(t,[0,2,3,4,1]));let v=Ol(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=mh(v,[0,4,1,2,3])),null!==this.bias&&(v=xv(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){e=Zv(e);const t=e.slice();let n,r,s,i;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,i=4):(n=4,r=1,s=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=uS(t[r],u,a,this.padding),t[s]=uS(t[s],c,o,this.padding),t[i]=uS(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}vS.className="Conv3DTranspose",so(vS);class wS extends mS{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ey("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ey("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ey(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=qv(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=eS(t.depthwiseRegularizer),this.depthwiseConstraint=Mw(t.depthwiseConstraint),this.pointwiseInitializer=qv(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=eS(t.pointwiseRegularizer),this.pointwiseConstraint=Mw(t.pointwiseConstraint)}build(e){if(e=Zv(e),e.length<this.rank+2)throw new ey(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ey(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let a=0;a<this.rank;++a)s.push(1);s.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new iw({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return lo((()=>{let t;if(e=Yv(e),1===this.rank)throw new ty("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=mh(e,[0,2,3,1])),t=Tc(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=mh(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["kernelInitializer"],delete e["kernelRegularizer"],delete e["kernelConstraint"],e["depthwiseInitializer"]=Kv(this.depthwiseInitializer),e["pointwiseInitializer"]=Kv(this.pointwiseInitializer),e["depthwiseRegularizer"]=ZI(this.depthwiseRegularizer),e["pointwiseRegularizer"]=ZI(this.pointwiseRegularizer),e["depthwiseConstraint"]=Dw(this.depthwiseConstraint),e["pointwiseConstraint"]=Dw(this.pointwiseConstraint),e}}wS.className="SeparableConv";class kS extends wS{constructor(e){super(2,e)}}kS.className="SeparableConv2D",so(kS);class IS extends mS{constructor(e){super(1,e),IS.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["dataFormat"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!wy(e.kernelSize,"number",1,1))throw new ey(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}IS.className="Conv1D",so(IS);class SS extends cw{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return lo((()=>{if(e=Yv(e),"channelsLast"===this.dataFormat){const t=uv(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return uv(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=uv(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return uv(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}SS.className="Cropping2D",so(SS);class CS extends cw{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,My(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Ly(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return lo((()=>{let t=Yv(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=mh(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Ap.resizeNearestNeighbor(t,[e,r]):Ap.resizeBilinear(t,[e,r]);return mh(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Ap.resizeNearestNeighbor(t,[e,r]):Ap.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function $S(e,t,n=[1,1],r="valid",s,i){return lo((()=>{null==s&&(s=tv()),My(s);let a=cS(e,s);if(4!==e.rank)throw new ey(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ey(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Pl(a,t,n,"same"===r?"same":"valid","NHWC",i),"channelsFirst"===s&&(a=mh(a,[0,3,1,2])),a}))}CS.className="UpSampling2D",so(CS);class NS extends gS{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=qv(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Mw(e.depthwiseConstraint),this.depthwiseRegularizer=eS(e.depthwiseRegularizer)}build(e){if(e=Zv(e),e.length<4)throw new ey(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ey(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{e=Yv(e);let t=$S(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Zv(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=lS(t,this.kernelSize[0],this.padding,this.strides[0]),i=lS(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,i]:[e[0],s,i,r]}getConfig(){const e=super.getConfig();return e["depthMultiplier"]=this.depthMultiplier,e["depthwiseInitializer"]=Kv(this.depthwiseInitializer),e["depthwiseRegularizer"]=ZI(this.depthwiseRegularizer),e["depthwiseConstraint"]=Dw(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function TS(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ey("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return t=s(t),n=s(n),{inputs:e,initialState:t,constants:n}}function ES(e,t,n,r=!1,s,i,a=!1,o=!1){return lo((()=>{const l=t.shape.length;if(l<3)throw new ey(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Zy(2,l));if(t=mh(t,u),null!=i)throw new ty("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&(s=ha(ha(s,"bool"),"float32"),s.rank===l-1&&(s=Yl(s,-1)),s=mh(s,u)),r&&(t=Sc(t,0),null!=s&&(s=Sc(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=ih(t);let g,m;null!=s&&(g=ih(s));for(let t=0;t<p;++t){const n=f[t],r=lo((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=lo((()=>{const e=g[t],n=wu(uc(e),e),s=wo(yu(r[0],e),yu(d[0],n)),i=d.map(((t,s)=>wo(yu(r[1][s],e),yu(t,n))));return{output:s,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){const e=1;m=Zc(c,e)}return[h,m,d]}))}NS.className="DepthwiseConv2D",so(NS);class RS extends cw{constructor(e){let t;if(super(e),null==e.cell)throw new ey("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new zS({cells:e.cell}):e.cell,null==t.stateSize)throw new ey("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new iw({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Zy(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Xv(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return lo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new ty("Constants support is not implemented in RNN yet.");Xv(e)&&(e=e[0]);const n=this.stateful?e[0]:null,r=e.slice(2);this.inputSpec[0]=new iw({shape:[n,null,...r]});const s=[e[0]].concat(e.slice(2));if(null!=t)throw new ty("Constants support is not implemented in RNN yet.");let i;if(this.cell.build(s),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!k(this.stateSpec.map((e=>e.shape[e.shape.length-1])),i))throw new ey(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((e=>new iw({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){lo((()=>{if(!this.stateful)throw new Zx("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ey("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ac([n,e]))):this.states_=[ac([n,this.cell.stateSize])];else if(null==e)uo(this.states_),null!=this.keptStates&&(uo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>ac([n,e]))):this.states_[0]=ac([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ey(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):uo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,s];if(!k(r.shape,i))throw new ey(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>co(e.clone())))}))}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=TS(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let i=[],a=[];if(null!=n){t["initialState"]=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new iw({shape:e.shape}));a=a.concat(this.stateSpec)}null!=r&&(t["constants"]=r,i=i.concat(r),this.numConstants=r.length);const o=i[0]instanceof aw;if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return lo((()=>{const n=null==t?null:t["mask"],r=null==t?null:t["training"];let s=null==t?null:t["initialState"];e=Yv(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==i)throw new ey(`RNN Layer has ${i} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:r},o=(e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},l=ES(o,e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],h=l[2];this.stateful&&this.resetStates(h,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(h):d}))}getInitialState(e){return lo((()=>{let t=ac(e.shape);return t=Iu(t,[1,2]),t=rv(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?dv(t,[1,e]):t)):this.cell.stateSize>1?[dv(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===RS.className&&(t["cell"]={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=t["cell"],s=Xw(r,n);return new e(Object.assign(t,{cell:s}))}}RS.className="RNN",so(RS);class _S extends cw{}class AS extends _S{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ky(this.units,"units"),this.activation=KI(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eS(e.kernelRegularizer),this.recurrentRegularizer=eS(e.recurrentRegularizer),this.biasRegularizer=eS(e.biasRegularizer),this.kernelConstraint=Mw(e.kernelConstraint),this.recurrentConstraint=Mw(e.recurrentConstraint),this.biasConstraint=Mw(e.biasConstraint),this.dropout=Jy([1,Yy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jy([1,Yy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Zv(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{if(2!==e.length)throw new ey(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t["training"]&&t["training"];let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=PS({ones:()=>uc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=PS({ones:()=>uc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;s=fv(null!=i?yu(e,i):e,this.kernel.read()),null!=this.bias&&(s=xv(s,this.bias.read())),null!=a&&(n=yu(n,a));let o=wo(s,fv(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:HI(this.activation),useBias:this.useBias,kernelInitializer:Kv(this.kernelInitializer),recurrentInitializer:Kv(this.recurrentInitializer),biasInitializer:Kv(this.biasInitializer),kernelRegularizer:ZI(this.kernelRegularizer),recurrentRegularizer:ZI(this.recurrentRegularizer),biasRegularizer:ZI(this.biasRegularizer),activityRegularizer:ZI(this.activityRegularizer),kernelConstraint:Dw(this.kernelConstraint),recurrentConstraint:Dw(this.recurrentConstraint),biasConstraint:Dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}AS.className="SimpleRNNCell",so(AS);class FS extends RS{constructor(e){e.cell=new AS(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}FS.className="SimpleRNN",so(FS);class DS extends _S{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ey("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ky(this.units,"units"),this.activation=KI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=KI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=eS(e.kernelRegularizer),this.recurrentRegularizer=eS(e.recurrentRegularizer),this.biasRegularizer=eS(e.biasRegularizer),this.kernelConstraint=Mw(e.kernelConstraint),this.recurrentConstraint=Mw(e.recurrentConstraint),this.biasConstraint=Mw(e.biasConstraint),this.dropout=Jy([1,Yy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jy([1,Yy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Zv(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return lo((()=>{if(2!==e.length)throw new ey(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t["training"]&&t["training"];let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=PS({ones:()=>uc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=PS({ones:()=>uc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=yu(e,s[0]));let u=fv(e,this.kernel.read());this.useBias&&(u=xv(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yu(r,i[0]));const c=this.recurrentKernel.read(),[h,d]=jc(c,[2*this.units,this.units],c.rank-1),p=fv(r,h),[f,g,m]=jc(u,3,u.rank-1),[b,x]=jc(p,2,p.rank-1);a=this.recurrentActivation.apply(wo(f,b)),o=this.recurrentActivation.apply(wo(g,x));const y=fv(yu(o,r),d);l=this.activation.apply(wo(m,y));const v=wo(yu(a,r),yu(wo(1,tc(a)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:HI(this.activation),recurrentActivation:HI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kv(this.kernelInitializer),recurrentInitializer:Kv(this.recurrentInitializer),biasInitializer:Kv(this.biasInitializer),kernelRegularizer:ZI(this.kernelRegularizer),recurrentRegularizer:ZI(this.recurrentRegularizer),biasRegularizer:ZI(this.biasRegularizer),activityRegularizer:ZI(this.activityRegularizer),kernelConstraint:Dw(this.kernelConstraint),recurrentConstraint:Dw(this.recurrentConstraint),biasConstraint:Dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}DS.className="GRUCell",so(DS);class OS extends RS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new DS(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}OS.className="GRU",so(OS);class MS extends _S{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ky(this.units,"units"),this.activation=KI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=KI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=eS(e.kernelRegularizer),this.recurrentRegularizer=eS(e.recurrentRegularizer),this.biasRegularizer=eS(e.biasRegularizer),this.kernelConstraint=Mw(e.kernelConstraint),this.recurrentConstraint=Mw(e.recurrentConstraint),this.biasConstraint=Mw(e.biasConstraint),this.dropout=Jy([1,Yy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Jy([1,Yy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Zv(e);const n=e[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new(t=class extends Tv{apply(t,r){const s=e.apply([n]),i=(new Rv).apply([n]),a=e.apply([2*n]);return hv(hv(s,i),a)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return lo((()=>{const n=null!=t["training"]&&t["training"];if(3!==e.length)throw new ey(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=PS({ones:()=>uc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=PS({ones:()=>uc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=yu(e,i[0]));let h=fv(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yu(r,a[0])),h=wo(h,fv(r,this.recurrentKernel.read())),this.useBias&&(h=xv(h,this.bias.read()));const[d,p,f,g]=jc(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=wo(yu(l,s),yu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=yu(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:HI(this.activation),recurrentActivation:HI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Kv(this.kernelInitializer),recurrentInitializer:Kv(this.recurrentInitializer),biasInitializer:Kv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ZI(this.kernelRegularizer),recurrentRegularizer:ZI(this.recurrentRegularizer),biasRegularizer:ZI(this.biasRegularizer),activityRegularizer:ZI(this.activityRegularizer),kernelConstraint:Dw(this.kernelConstraint),recurrentConstraint:Dw(this.recurrentConstraint),biasConstraint:Dw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}MS.className="LSTMCell",so(MS);class LS extends RS{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new MS(e),super(e)}call(e,t){return lo((()=>{null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}LS.className="LSTM",so(LS);class zS extends _S{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return lo((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=r[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),s.push(i.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;Xv(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Uy(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),r={cells:n};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,n={}){const r=[];for(const s of t["cells"])r.push(Xw(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return rw(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}sw(t)}}function PS(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):wv(t(),n),o=()=>Iv(a,t,r);if(!s||s<=1)return co(o().clone());const l=Array(s).fill(void 0).map(o);return l.map((e=>co(e.clone())))}zS.className="StackedRNNCells",so(zS);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var BS=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class WS extends RS{constructor(e){if(e.unroll)throw new ty("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ty("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new iw({ndim:5})]}call(e,t){return lo((()=>{if(null!=this.cell.dropoutMask&&(uo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(uo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t["constants"])throw new ey("ConvRNN2D cell does not support constants");const n=null==t?null:t["mask"],r=null==t?null:t["training"],s=null==t?null:t["initialState"];return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return lo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=ac(s);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){lo((()=>{if(!this.stateful)throw new Zx("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)],i=n[0];if(null==i)throw new ey("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ac(s))):this.states_=[ac(s)];else if(null==e)uo(this.states_),null!=this.keptStates&&(uo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>ac(s))):this.states_[0]=ac(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ey(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):uo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!k(n.shape,r))throw new ey(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>co(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=lS(l,r[0],s,i[0],a[0]),h=lS(u,r[1],s,i[1],a[1]),d=[...e.slice(0,2),...o?[n,c,h]:[c,h,n]];return d}}WS.className="ConvRNN2D";class US extends MS{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,ky(this.filters,"filters"),this.kernelSize=oS(n,2,"kernelSize"),this.kernelSize.forEach((e=>ky(e,"kernelSize"))),this.strides=oS(r||1,2,"strides"),this.strides.forEach((e=>ky(e,"strides"))),this.padding=s||"valid",zy(this.padding),this.dataFormat=i||"channelsLast",My(this.dataFormat),this.dilationRate=oS(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>ky(e,"dilationRate")))}build(e){var t;e=Zv(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ey(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=4,i=this.kernelSize.concat([r,this.filters*s]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*s]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new(t=class extends Tv{apply(e,t){const s=n.apply([r]),i=oc([r]),a=n.apply([2*r]);return cv([s,i,a])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*s],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return lo((()=>{if(3!==e.length)throw new ey(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t["training"]||!1,r=e[0],s=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=PS({ones:()=>uc(r),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?yu(t[n],e):e;let u=l(r,o,0),c=l(r,o,1),h=l(r,o,2),d=l(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=PS({ones:()=>uc(s),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=l(s,p,0),g=l(s,p,1),m=l(s,p,2),b=l(s,p,3);const x=3,[y,v,w,k]=jc(this.kernel.read(),a,x),[I,S,C,$]=this.useBias?jc(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,I,this.padding),c=this.inputConv(c,v,S,this.padding),h=this.inputConv(h,w,C,this.padding),d=this.inputConv(d,k,$,this.padding);const[N,T,E,R]=jc(this.recurrentKernel.read(),a,x);f=this.recurrentConv(f,N),g=this.recurrentConv(g,T),m=this.recurrentConv(m,E),b=this.recurrentConv(b,R);const _=this.recurrentActivation.apply(wo(u,f)),A=this.recurrentActivation.apply(wo(c,g)),F=wo(yu(A,i),yu(_,this.activation.apply(wo(h,m)))),D=yu(this.recurrentActivation.apply(wo(d,b)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=BS(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=Il(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xv(s,n,this.dataFormat):s}recurrentConv(e,t){const n=1;return Il(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}US.className="ConvLSTM2DCell",so(US);class VS extends WS{constructor(e){const t=new US(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}VS.className="ConvLSTM2D",so(VS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class GS extends cw{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e);if(0<this.rate&&this.rate<1){const e=null!=t["training"]&&t["training"],r=this.getNoiseShape(n),s=Iv((()=>wv(n,this.rate,r,this.seed)),(()=>n),e);return s}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}GS.className="Dropout",so(GS);class HS extends GS{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}HS.className="SpatialDropout1D",so(HS);class jS extends cw{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ky(this.units,"units"),this.activation=KI(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Mw(e.kernelConstraint),this.biasConstraint=Mw(e.biasConstraint),this.kernelRegularizer=eS(e.kernelRegularizer),this.biasRegularizer=eS(e.biasRegularizer),this.activityRegularizer=eS(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Zv(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Zv(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e),r=Cy(this.activation.getClassName());let s;return null!=r?s=fv(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=fv(n,this.kernel.read()),null!=this.bias&&(s=xv(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:HI(this.activation),useBias:this.useBias,kernelInitializer:Kv(this.kernelInitializer),biasInitializer:Kv(this.biasInitializer),kernelRegularizer:ZI(this.kernelRegularizer),biasRegularizer:ZI(this.biasRegularizer),activityRegularizer:ZI(this.activityRegularizer),kernelConstraint:Dw(this.kernelConstraint),biasConstraint:Dw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}jS.className="Dense",so(jS);class KS extends cw{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Zv(e);for(const t of e.slice(1))if(null==t)throw new ey(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xy(e,1)]}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Yv(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=mh(n,e)}return av(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e["dataFormat"]=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}KS.className="Flatten",so(KS);class qS extends cw{constructor(e){super(e),this.supportsMasking=!0,this.activation=KI(e.activation)}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e);return this.activation.apply(n)}))}getConfig(){const e={activation:HI(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}qS.className="Activation",so(qS);class XS extends cw{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return lo((()=>(e=Yv(e),sv(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}XS.className="RepeatVector",so(XS);class JS extends cw{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,i=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==i)throw new ey("Can only specifiy one unknown dimension.");i=o}else s*=e}const a=Xy(e);if(null!==i){if(0===s||a%s!==0)throw new ey(n);r[i]=a/s}else if(a!==s)throw new ey(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Ko(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}JS.className="Reshape",so(JS);class YS extends cw{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Zy(1,e.dims.length+1);if(!k(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new iw({ndim:this.dims.length+1})]}computeOutputShape(e){e=Zv(e);const t=e.slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return mh(Yv(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}YS.className="Permute",so(YS);class ZS extends cw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Yv(e),r=-1;return Co(rc(n,this.maskValue),r)}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e),r=-1,s=!0,i=Co(rc(n,this.maskValue),r,s),a=yu(n,ha(i,n.dtype));return a}))}}ZS.className="Masking",so(ZS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class QS extends cw{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(uy(e.inputLength))}this.inputDim=e.inputDim,ky(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ky(this.outputDim,"outputDim"),this.embeddingsInitializer=qv(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=eS(e.embeddingsRegularizer),this.activityRegularizer=eS(e.activityRegularizer),this.embeddingsConstraint=Mw(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return lo((()=>this.maskZero?(e=Yv(e),rc(e,ch(e))):null))}computeOutputShape(e){if(e=Zv(e),null==this.inputLength)return[...e,this.outputDim];const t=uy(this.inputLength);if(t.length!==e.length-1)throw new ey(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],i=e[r+1];if(null!=s&&null!=i&&s!==i)throw new ey(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return lo((()=>{this.invokeCallHook(e,t);let n=Yv(e);"int32"!==n.dtype&&(n=nv(n,"int32"));const r=gv(this.embeddings.read(),Ko(n,[n.size]));return Ko(r,Zv(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Kv(this.embeddingsInitializer),embeddingsRegularizer:ZI(this.embeddingsRegularizer),activityRegularizer:ZI(this.activityRegularizer),embeddingsConstraint:Dw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}QS.className="Embedding",so(QS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class eC extends cw{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ty}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],i=t[r];if(null==s||null==i||s<0||i<0)n.push(null);else if(1===s)n.push(i);else if(1===i)n.push(s);else{if(s!==i)throw new ey("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Zv(e)]),e.length<2)throw new ey(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=xy(t),t.length>1)throw new ey(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===xy(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return lo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Yy(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=rv(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,r=e[0],s=e.slice(1).concat([r]);let a=Ko(i,[r].concat(Xy(e.slice(1))));a=mh(a,[1,0]),a=Ko(a,s),t.push(a),n=!0}else if(e>1){const r=Zy(1,e).concat([0]);t.push(mh(i,r)),n=!0}else t.push(i)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e.length,n=e[t-1],s=[n].concat(e.slice(0,e.length-1));r=Ko(mh(Ko(r,[-1,n]),[1,0]),s)}else if(s>1){const e=[s-1].concat(Zy(0,s-1));r=mh(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=xy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return lo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ey("`mask` should be an Array");if(!Array.isArray(e))throw new ey("`inputs` should be an Array");if(t.length!==e.length)throw new ey(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:Yl(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=Nu(n,t[e]);return n}))}}class tC extends eC{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wo(t,e[n]);return t}))}}tC.className="Add",so(tC);class nC extends eC{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yu(t,e[n]);return t}))}}nC.className="Multiply",so(nC);class rC extends eC{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=wo(t,e[n]);return yu(1/e.length,t)}))}}rC.className="Average",so(rC);class sC extends eC{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Ou(t,e[n]);return t}))}}sC.className="Maximum",so(sC);class iC extends eC{constructor(e){super(e)}mergeFunction(e){return lo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Wu(t,e[n]);return t}))}}iC.className="Minimum",so(iC);class aC extends eC{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ey("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(k(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new ey("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return lo((()=>cv(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ey("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ey("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ey("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ey(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return lo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let i=0;i<e.length;++i)null==t[i]?r.push(ha(uc(e[i]),"bool")):t[i].rank<e[i].rank?r.push(Yl(t[i],-1)):r.push(t[i]);const s=pl(r,this.axis);return Io(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function oC(e,t){while(e<0)e+=t;return e}function lC(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ty("batchDot is not implemented for tensors of 4D or higher rank yet");if(b(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),b(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ty("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const i=n;return lo((()=>{let n,a;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Ko(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Ko(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?Iu(yu(e,t),i[0]):Iu(yu(mh(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,r=i[1]===t.shape.length-1;a=Eu(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);a=Jc(a,t)}return 1===a.shape.length&&(a=Yl(a,1)),a}))}aC.className="Concatenate",so(aC);class uC extends eC{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){b(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ty("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ey(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ey(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>oC(t,e[n].shape.length))):[oC(this.axes,n.shape.length),oC(this.axes,r.shape.length)],this.normalize&&(n=Jw(n,t[0]),r=Jw(r,t[1])),lC(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[oC(this.axes,e.length),oC(this.axes,t.length)],n}computeOutputShape(e){b(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ty("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}uC.className="Dot",so(uC);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class cC extends cw{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e),r=()=>wo(pv(n.shape,0,this.stddev),n),s=Iv(r,(()=>n),t["training"]||!1);return s}))}}cC.className="GaussianNoise",so(cC);class hC extends cw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return lo((()=>{this.invokeCallHook(e,t);const n=Yv(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return yu(n,pv(n.shape,1,e))};return Iv(e,(()=>n),t["training"]||!1)}return n}))}}hC.className="GaussianDropout",so(hC);class dC extends cw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Yv(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return lo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Yv(e),r=1.6732632423543772,s=1.0507009873554805,i=-r*s;let a=uu(vc(n),this.rate);a=nv(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-o*i*this.rate,u=wo(yu(t,a),yu(wo(a,-1),i));return wo(yu(u,o),l)};return Iv(r,(()=>Yv(e)),t["training"]||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function pC(e,t,n,r,s,i=.001){let a;if(2===e.rank)a=nl(e,t,n,r,s,i);else if(3===e.rank)a=sl(e,t,n,r,s,i);else{if(4!==e.rank)throw new ty(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=al(e,t,n,r,s,i)}return a}function fC(e,t,n,r,s=.001){return lo((()=>{const i=Qu(e,r),a=i.mean,o=i.variance,l=pC(e,a,o,n,t,s);return[l,a,o]}))}function gC(e,t,n,r,s=.001){return lo((()=>{const i=Qu(e,r),a=i.mean,o=i.variance,l=[];for(const t of Zy(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Ko(a,l),c=Ko(o,l),h=null==t?null:Ko(t,l),d=null==n?null:Ko(n,l),p=pC(e,u,c,d,h,s);return[p,a,o]}))}function mC(e,t,n,r,s=.001){return k(r.slice().sort(),Zy(0,e.rank-1))?fC(e,t,n,r,s):gC(e,t,n,r,s)}dC.className="AlphaDropout",so(dC);class bC extends cw{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=qv(e.betaInitializer||"zeros"),this.gammaInitializer=qv(e.gammaInitializer||"ones"),this.movingMeanInitializer=qv(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=qv(e.movingVarianceInitializer||"ones"),this.betaConstraint=Mw(e.betaConstraint),this.gammaConstraint=Mw(e.gammaConstraint),this.betaRegularizer=eS(e.betaRegularizer),this.gammaRegularizer=eS(e.gammaRegularizer)}build(e){e=Zv(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ey(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new iw({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return lo((()=>{const n=null!=t["training"]&&t["training"],r=Yv(e),s=r.shape,i=s.length,a=Zy(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=iy(1,i);l[o]=s[o];const u=a.slice();u.sort();const c=!k(u,Zy(0,i).slice(0,i-1)),h=()=>{if(c){const e=Ko(this.movingMean.read(),l),t=Ko(this.movingVariance.read(),l),n=this.center?Ko(this.beta.read(),l):null,s=this.scale?Ko(this.gamma.read(),l):null;return pC(r,e,t,n,s,this.epsilon)}return pC(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[d,p,f]=mC(r,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(e,t,n)=>{lo((()=>{const r=1-n,s=e.read(),i=yu(wu(s,t),r);e.write(wu(s,i))}))},m=()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,f,this.momentum)};return m(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kv(this.betaInitializer),gammaInitializer:Kv(this.gammaInitializer),movingMeanInitializer:Kv(this.movingMeanInitializer),movingVarianceInitializer:Kv(this.movingVarianceInitializer),betaRegularizer:ZI(this.betaRegularizer),gammaRegularizer:ZI(this.gammaRegularizer),betaConstraint:Dw(this.betaConstraint),gammaConstraint:Dw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}bC.className="BatchNormalization",so(bC);class xC extends cw{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=qv(e.betaInitializer||"zeros"),this.gammaInitializer=qv(e.gammaInitializer||"ones"),this.betaRegularizer=eS(e.betaRegularizer),this.gammaRegularizer=eS(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Zv(e);const t=e.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=t);for(const s of this.axis)if(s<0||s>=t)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==xy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Yv(e),r=n.shape,s=r.length;return lo((()=>{const e=!0;let{mean:t,variance:i}=Qu(n,this.axis,e);const a=iy(1,s);for(const n of this.axis)a[n]=r[n];const o=e=>null!=e&&e.shape.length!==s?Ko(e,a):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],h=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(c.push(r[n]),h.push(1)):(c.push(1),h.push(r[n]));return t=Ql(t,c),i=Ql(i,c),null!=l&&(l=Ql(l,h)),null!=u&&(u=Ql(u,h)),pC(n,t,i,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Kv(this.betaInitializer),gammaInitializer:Kv(this.gammaInitializer),betaRegularizer:ZI(this.betaRegularizer),gammaRegularizer:ZI(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}function yC(e,t,n){return lo((()=>{if(4!==e.rank)throw new ey(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new ey("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=tv()),"channelsLast"!==n&&"channelsFirst"!==n)throw new ey(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return r="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],hc(e,r)}))}xC.className="LayerNormalization",so(xC);class vC extends cw{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?tv():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ey(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ey(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ey(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new iw({ndim:4})]}computeOutputShape(e){let t,n;return e=Zv(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return lo((()=>yC(Yv(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function wC(e,t,n,r,s,i){return lo((()=>{let a;My(s),Py(i),zy(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s=tv()),null==i&&(i="max"),e=cS(e,s);const o="same"===r?"same":"valid";return a="max"===i?_u(e,t,n,o):Xo(e,t,n,o),"channelsFirst"===s&&(a=mh(a,[0,3,1,2])),a}))}function kC(e,t,n,r,s,i){return lo((()=>{let a;My(s),Py(i),zy(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s=tv()),null==i&&(i="max"),e=hS(e,s);const o="same"===r?"same":"valid";return a="max"===i?Fu(e,t,n,o):Yo(e,t,n,o),"channelsFirst"===s&&(a=mh(a,[0,4,1,2,3])),a}))}vC.className="ZeroPadding2D",so(vC);class IC extends cw{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new ey(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ky(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new ey(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ky(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,zy(this.padding),this.inputSpec=[new iw({ndim:3})]}computeOutputShape(e){e=Zv(e);const t=lS(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return lo((()=>{this.invokeCallHook(e,t),e=rv(Yv(e),2);const n=this.poolingFunction(Yv(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Jc(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class SC extends IC{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),wC(e,t,n,r,s,"max")}}SC.className="MaxPooling1D",so(SC);class CC extends IC{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),wC(e,t,n,r,s,"avg")}}CC.className="AveragePooling1D",so(CC);class $C extends cw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ey(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ky(this.poolSize,"poolSize"),ky(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,My(this.dataFormat),zy(this.padding),this.inputSpec=[new iw({ndim:4})]}computeOutputShape(e){e=Zv(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=lS(t,this.poolSize[0],this.padding,this.strides[0]),n=lS(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return lo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Yv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class NC extends $C{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),wC(e,t,n,r,s,"max")}}NC.className="MaxPooling2D",so(NC);class TC extends $C{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),wC(e,t,n,r,s,"avg")}}TC.className="AveragePooling2D",so(TC);class EC extends cw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ey(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ky(this.poolSize,"poolSize"),ky(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,My(this.dataFormat),zy(this.padding),this.inputSpec=[new iw({ndim:5})]}computeOutputShape(e){e=Zv(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=lS(t,this.poolSize[0],this.padding,this.strides[0]),n=lS(n,this.poolSize[1],this.padding,this.strides[1]),r=lS(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return lo((()=>(this.invokeCallHook(e,t),this.poolingFunction(Yv(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class RC extends EC{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),kC(e,t,n,r,s,"max")}}RC.className="MaxPooling3D",so(RC);class _C extends EC{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return My(s),zy(r),kC(e,t,n,r,s,"avg")}}_C.className="AveragePooling3D",so(_C);class AC extends cw{constructor(e){super(e),this.inputSpec=[new iw({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ty}}class FC extends AC{constructor(e){super(e||{})}call(e,t){return lo((()=>{const t=Yv(e);return Lu(t,1)}))}}FC.className="GlobalAveragePooling1D",so(FC);class DC extends AC{constructor(e){super(e||{})}call(e,t){return lo((()=>{const t=Yv(e);return bu(t,1)}))}}DC.className="GlobalMaxPooling1D",so(DC);class OC extends cw{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,My(this.dataFormat),this.inputSpec=[new iw({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ty}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class MC extends OC{call(e,t){return lo((()=>{const t=Yv(e);return"channelsLast"===this.dataFormat?Lu(t,[1,2]):Lu(t,[2,3])}))}}MC.className="GlobalAveragePooling2D",so(MC);class LC extends OC{call(e,t){return lo((()=>{const t=Yv(e);return"channelsLast"===this.dataFormat?bu(t,[1,2]):bu(t,[2,3])}))}}LC.className="GlobalMaxPooling2D",so(LC);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class zC extends cw{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=t["layer"],s=Xw(r,n);delete t["layer"];const i={layer:s};return Object.assign(i,t),new e(i)}}class PC extends zC{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Zv(e),e.length<3)throw new ey(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Zv(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return lo((()=>{e=Yv(e);const n=(e,n)=>{const r=Yv(this.layer.call(e,t));return[r,[]]},r=ES(n,e,[],!1,null,null,!1,!0),s=r[1];return s}))}}function BC(e){vy(Dy,"BidirectionalMergeMode",e)}PC.className="TimeDistributed",so(PC);const WC="concat";class UC extends zC{constructor(e){super(e);const t=e.layer.getConfig(),n={};n["className"]=e.layer.getClassName(),n["config"]=t,this.forwardLayer=Xw(n),t["goBackwards"]=!0!==t["goBackwards"];const r={};if(r["className"]=e.layer.getClassName(),r["config"]=t,this.backwardLayer=Xw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?WC:e.mergeMode,BC(this.mergeMode),e.weights)throw new ty("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):ly(n)}apply(e,t){let n=null==t?null:t["initialState"],r=null==t?null:t["constants"];null==t&&(t={});const s=TS(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new ey("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t["initialState"]=n,i.push(...n);const r=n.map((e=>new iw({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),a.push(...r)}if(null!=r)throw new ty("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof aw;for(const l of i)if(l instanceof aw!==o)throw new ey("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),r=this.inputSpec.concat(a),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return lo((()=>{const n=t["initialState"];let r,s,i,a;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(r)&&(i=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Sc(s,1)),"concat"===this.mergeMode?a=cv([r,s]):"sum"===this.mergeMode?a=wo(r,s):"ave"===this.mergeMode?a=yu(.5,wo(r,s)):"mul"===this.mergeMode?a=yu(r,s):null==this.mergeMode&&(a=[r,s]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Uy(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Uy(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map((e=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Xw(t["layer"]);if(delete t["layer"],null!=t["numConstants"])throw new ty("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r["layer"]=n,new e(r)}}UC.className="Bidirectional",so(UC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class VC extends cw{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return lo((()=>(e=Yv(e),"float32"!==e.dtype&&(e=nv(e,"float32")),wo(yu(e,this.scale),this.offset))))}}VC.className="Rescaling",so(VC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const GC=["bilinear","nearest"],HC=new Set(GC);class jC extends cw{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!HC.has(e.interpolation))throw new ey(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=Zv(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return lo((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Ap.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Ap.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...HC]} are supported`)}))}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function KC(e,t,n,r){let s=Yv(e);if("int32"!==s.dtype&&(s=nv(s,"int32")),"int"===t)return s;const i=s.shape;if(0===s.rank&&(s=Yl(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=Yl(s,-1)),s.rank>2)throw new ey(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${s.rank}.`);const a=["multiHot","oneHot"].includes(t),o=s;let l;if(l=Ll(o,"undefined"!==typeof r&&"count"===t?r:[],n,a),"tfIdf"!==t)return l;if(r)return yu(l,r);throw new ey("When outputMode is 'tfIdf', weights must be provided.")}jC.className="Resizing",so(jC);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class qC extends cw{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Zv(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return lo((()=>{let n;if(e=Yv(e),"int32"!==e.dtype&&(e=nv(e,"int32")),"undefined"!==typeof t["countWeights"]){if("count"!==this.outputMode)throw new ey(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t["countWeights"]}`);n=Yv(t["countWeights"])}const r=bu(e),s=Pu(e),i=ou(this.numTokens,r).bufferSync().get(0),a=uu(s,0).bufferSync().get(0);if(!i||!a)throw new ey(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return KC(e,this.outputMode,this.numTokens,n)}))}}qC.className="CategoryEncoding",so(qC);const XC=ie();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var JC,YC;XC.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_QINT16"]=15]="DT_QINT16",e[e["DT_QUINT16"]=16]="DT_QUINT16",e[e["DT_UINT16"]=17]="DT_UINT16",e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128",e[e["DT_HALF"]=19]="DT_HALF",e[e["DT_RESOURCE"]=20]="DT_RESOURCE",e[e["DT_VARIANT"]=21]="DT_VARIANT",e[e["DT_UINT32"]=22]="DT_UINT32",e[e["DT_UINT64"]=23]="DT_UINT64",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF",e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF",e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF",e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF",e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF",e[e["DT_HALF_REF"]=119]="DT_HALF_REF",e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF",e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF",e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF",e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"}(JC||(JC={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(YC||(YC={}));
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function ZC(e,t){return QC(e,t)}function QC(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(r$(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const a=e[i],o=QC(a,t,n,r);s[i]=o}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function e$(e,t=n$){return t$(e,t)}function t$(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(r$(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const i in r){const r=e.map((e=>e[i])),a=t$(r,t,n);s[i]=a}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function n$(e){return null===e?null:r$(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function r$(e){let t=!1;if(ie().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ss)&&!(e instanceof Promise)&&!t)}function s$(e){return null==e||i$(e)||Array.isArray(e)||"object"===typeof e&&e instanceof Ss||O(e)}function i$(e){return null===e||"object"!==typeof e&&"function"!==typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function a$(e){return ZC(e,o$)}function o$(e){return e instanceof Ss?{value:e.clone(),recurse:!1}:r$(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class l${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){while(e<0)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class u$ extends l${constructor(){super(u$.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function c$(e){return new f$(e)}function h$(e){return new g$(e)}function d$(e,t){return new $$(e,t)}u$.INITIAL_CAPACITY=32;class p${async toArray(){const e=[];let t=await this.next();while(!t.done)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();while(!n.done)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();while(!e.done)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);while(!t.done&&n)t=await this.next(),n=e(t.value)}handleErrors(e){return new k$(this,e)}filter(e){return new v$(this,e)}map(e){return new w$(this,e)}mapAsync(e){return new I$(this,e)}serialMapAsync(e){return new I$(this,e).serial()}flatmap(e){return new C$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new y$(this,e,t)}columnMajorBatch(e,t=!0,n=n$){const r=this.rowMajorBatch(e,t);return r.map((e=>e$(e,n)))}concatenate(e,t){return new $$(c$([this,e]),t)}take(e){return e<0||null==e?this:new x$(this,e)}skip(e){return e<0||null==e?this:new b$(this,e)}prefetch(e){return new T$(this,e)}shuffle(e,t){return new E$(this,e,t)}serial(){return new m$(this)}}class f$ extends p${constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:a$(e),done:!1}}}class g$ extends p${constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class m$ extends p${constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class b$ extends p${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const e=await this.upstream.next();if(e.done)return e;uo(e.value)}return this.upstream.next()}}class x$ extends p${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class y$ extends p${constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];while(e.length<this.batchSize){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class v$ extends p${constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;uo(e.value)}}}class w$ extends p${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ls(e.value),n=this.transform(e.value),r=Ls(n);for(const s of t)Ms(s,r)||s.dispose();return{value:n,done:!1}}}class k$ extends p${constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class I$ extends p${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Ls(e.value),n=await this.transform(e.value),r=Ls(n);for(const s of t)Ms(s,r)||s.dispose();return{value:n,done:!1}}}class S$ extends p${constructor(){super(),this.outputQueue=new u$,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class C$ extends S${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Ls(e.value),n=this.transform(e.value),r=Ls(n);this.outputQueue.pushAll(n);for(const s of t)Ms(s,r)||s.dispose();return!0}}class $$ extends p${constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var N$;(function(e){e[e["FAIL"]=0]="FAIL",e[e["SHORTEST"]=1]="SHORTEST",e[e["LONGEST"]=2]="LONGEST"})(N$||(N$={}));class T$ extends p${constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new l$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){while(!this.buffer.isFull()){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class E$ extends T${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=fc.alea(n||es().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class R${constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return b(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),_$((async()=>(await n.iterator()).columnMajorBatch(e,t,A$)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,_$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,_$((async()=>(await t.iterator()).filter((t=>lo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return _$((async()=>(await t.iterator()).map((t=>lo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return _$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return _$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,_$((async()=>{const n=h$((async()=>({value:await t.iterator(),done:!1})));return d$(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,_$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=fc.alea(t||es().toString());return _$((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,_$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function _$(e,t=null){return new class extends R${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function A$(e){if(null===e)return null;const t=e[0];if(s$(t)){const t=F$(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function F$(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ss?Zc(e):li(e)}R$.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function D$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&b("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const O$=tg;class M$ extends c{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new u(this,ao())}nextDataId(){return M$.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,ie().get("IS_NODE")&&kr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&z(n[0])){const s=n.map((e=>ts(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return yf(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ns(e)));return ua(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ua(e.shape,e.dtype,t)}makeOutput(e,t,n){return ao().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=es();e();const n=es()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){D$([e],"where");const t=this.readSync(e.dataId);return O$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}M$.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function L$(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(D$(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=w(a.shape),c=n||a.dtype,h=_(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],s);return o.makeTensorInfo(a.shape,c,h)}}function z$(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:a}=r;if(D$(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=i,l=o.data.get(a.dataId).values,u=n||a.dtype,c=t(l,u,s);return o.makeTensorInfo(a.shape,u,c)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ho("cpu",(()=>new M$),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const P$=L$(ut,(e=>e>=0?e:Math.exp(e)-1)),B$={kernelName:ut,backendName:"cpu",kernelFunc:P$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function W$(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const U$={kernelName:$t,backendName:"cpu",kernelFunc:W$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function V$(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r;D$([s],"leakyRelu");const a=w(s.shape),o=n.data.get(s.dataId).values,l=R("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(s.shape,"float32",l)}const G$={kernelName:At,backendName:"cpu",kernelFunc:V$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function H$(e){return(t,n,r,s,i)=>{const a=Oa(t,n),o=a.length,l=G(a),u=w(a),c=R(i,u),h=t.length,d=n.length,p=G(t),f=G(n),g=Fa(t,a),m=Fa(n,a);if(g.length+m.length===0)for(let b=0;b<c.length;++b)c[b]=e(r[b%r.length],s[b%s.length]);else for(let b=0;b<c.length;++b){const t=Z(b,o,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=Y(n,h,p),a=t.slice(-d);m.forEach((e=>a[e]=0));const u=Y(a,d,f);c[b]=e(r[i],s[u])}return[c,a]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const j$=H$(((e,t)=>e<0?t*e:e));function K$(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;D$([r,s],"prelu");const i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,[o,l]=j$(r.shape,s.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const q$={kernelName:gn,backendName:"cpu",kernelFunc:K$},X$=L$(In,(e=>Math.max(0,e))),J$={kernelName:In,backendName:"cpu",kernelFunc:X$},Y$=L$(En,(e=>Math.min(Math.max(0,e),6))),Z$={kernelName:En,backendName:"cpu",kernelFunc:Y$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q$(e){return(t,n,r)=>{const s=R(n,t.length);for(let i=0;i<t.length;++i)s[i]=e(t[i],r);return s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const eN=Q$((e=>1/(1+Math.exp(-e)))),tN=L$(Wn,(e=>1/(1+Math.exp(-e)))),nN={kernelName:Wn,backendName:"cpu",kernelFunc:tN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rN(e,t,n,r,s){if("linear"===n)return W$({inputs:{x:t},backend:e});if("relu"===n)return X$({inputs:{x:t},backend:e});if("elu"===n)return P$({inputs:{x:t},backend:e});if("relu6"===n)return Y$({inputs:{x:t},backend:e});if("prelu"===n)return K$({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return V$({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return tN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sN(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",i),imag:n.makeTensorInfo(s.shape,"float32",a)},o}const iN={kernelName:ze,backendName:"cpu",kernelFunc:sN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aN(e,t,n="float32"){if("complex64"===n){const n=aN(e,t,"float32"),r=aN(e,t,"float32");return sN({inputs:{real:n,imag:r},backend:e})}const r=q(w(t),n);return e.makeTensorInfo(t,n,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oN(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const lN={kernelName:wn,backendName:"cpu",kernelFunc:oN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uN(e,t,n,r){if("int32"===r){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===r){const r=Qr([0],n),[s,i]=H$(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function cN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return W$({inputs:{x:s},backend:n});const e=aN(n,s.shape,s.dtype),t=cN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=sN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=oN({inputs:{input:s},backend:n}),t=cN({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(s.dtype,i)){const e=W$({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(s.dataId).values,[o,l,u]=uN(a,s.shape,s.dtype,i);return n.makeTensorInfo(o,l,u)}const hN={kernelName:Oe,backendName:"cpu",kernelFunc:cN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dN(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:i,b:a}=n,o=s;D$([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?Qf(l):l,h="string"===i.dtype?Qf(u):u,d=r||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a:i,b:a}=e,o=s;if("complex64"===i.dtype||"complex64"===a.dtype){const e=cN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=cN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,x]=n(i.shape,a.shape,l,u,f,g),y=o.makeTensorInfo(x,"float32",m),v=o.makeTensorInfo(x,"float32",b),w=sN({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,s=r||i.dtype,[l,u]=t(i.shape,a.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function pN(e){return(t,n,r,s,i,a)=>{const o=Oa(t,n),l=w(o),u=o.length,c=G(o),h=R("float32",l),d=R("float32",l),p=Fa(t,o),f=Fa(n,o),g=yf(r,s),m=yf(i,a),b=t.length,x=G(t),y=n.length,v=G(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%g.length,n=w%m.length,r=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[w]=r.real,d[w]=r.imag}else for(let w=0;w<h.length;w++){const t=Z(w,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const r=Y(n,b,x),s=t.slice(-y);f.forEach((e=>s[e]=0));const i=Y(s,y,v),a=e(g[2*r],g[2*r+1],m[2*i],m[2*i+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fN=H$(((e,t)=>e+t)),gN=pN(((e,t,n,r)=>({real:e+n,imag:t+r}))),mN=dN(ge,fN,gN),bN={kernelName:ge,backendName:"cpu",kernelFunc:mN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=w(s.shape),o=N(i,a),l=w(o);b(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const yN={kernelName:Sn,backendName:"cpu",kernelFunc:xN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;D$([s,i],"matMul");const l=s.shape.length,u=i.shape.length,c=a?s.shape[l-2]:s.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?s.shape[l-1]:s.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=s.shape.slice(0,-2),g=i.shape.slice(0,-2),m=w(f),x=w(g),y=Oa(s.shape.slice(0,-2),i.shape.slice(0,-2)),v=y.concat([d,p]);b(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const k=a?[m,c,d]:[m,d,c],I=o?[x,p,h]:[x,h,p],S=xN({inputs:{x:s},backend:n,attrs:{shape:k}}),C=xN({inputs:{x:i},backend:n,attrs:{shape:I}}),$=a?S.shape[1]:S.shape[2],N=a?S.shape[2]:S.shape[1],T=o?C.shape[1]:C.shape[2],E=Math.max(m,x),R=n.data.get(S.dataId).values,_=n.data.get(C.dataId).values,A=G(S.shape),F=G(C.shape),[D,O,M]=a?[A[0],1,A[1]]:[A[0],A[1],1],[L,z,P]=o?[1,F[1],F[0]]:[F[1],1,F[0]],B=N*T,W=ua([E,N,T],S.dtype),U=W.values,V=n.blockSize;for(let b=0;b<E;b++)for(let e=0;e<N;e+=V)for(let t=0;t<T;t+=V)for(let n=0;n<$;n+=V){const r=Math.min(e+V,N),s=Math.min(t+V,T),i=Math.min(n+V,$);for(let a=e;a<r;a++)for(let e=t;e<s;e++){let t=0;for(let r=n;r<i;r++){const n=Math.min(b,m-1)*D,s=Math.min(b,x-1)*P,i=R[n+a*O+r*M],o=_[r*L+e*z+s];t+=i*o}U[b*B+(a*T+e)]+=t}}return n.disposeIntermediateTensorInfo(S),n.disposeIntermediateTensorInfo(C),n.makeTensorInfo(v,W.dtype,W.values)}const wN={kernelName:Re,backendName:"cpu",kernelFunc:vN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kN(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[],m=vN({inputs:{a:s,b:i},attrs:{transposeA:l,transposeB:u},backend:n});d=m,a&&(p=mN({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=rN(n,d,c,o,h),g.push(d),d=f);for(const b of g)n.disposeIntermediateTensorInfo(b);return d}const IN={kernelName:yr,backendName:"cpu",kernelFunc:kN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SN(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const CN=e=>{const{x:t}=e.inputs,n=e.backend;D$(t,"abs");let r=new Float32Array(w(t.shape));const s=n.data.get(t.dataId).values;return r=SN(s),n.makeOutput(r,t.shape,t.dtype)},$N={kernelName:de,backendName:"cpu",kernelFunc:CN},NN=L$(pe,(e=>Math.acos(e))),TN={kernelName:pe,backendName:"cpu",kernelFunc:NN},EN=L$(fe,(e=>Math.acosh(e))),RN={kernelName:fe,backendName:"cpu",kernelFunc:EN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _N(e){const{inputs:t,backend:n}=e,r=t;D$(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),i=ua(r[0].shape,r[0].dtype),a=i.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const AN={kernelName:me,backendName:"cpu",kernelFunc:_N};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FN(e,t,n,r,s){const i=t.length,a=w(t),o=G(t),l=G(s),u=R(n,w(s));for(let c=0;c<a;++c){const t=Z(c,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];const s=Y(n,i,l);u[s]=e[c]}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DN(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:i}=n;D$(s,"transpose");const a=s.shape.length,o=new Array(a);for(let h=0;h<o.length;h++)o[h]=s.shape[i[h]];const l=r.data.get(s.dataId).values,u=FN(l,s.shape,s.dtype,i,o),c=r.write(u,o,s.dtype);return{dataId:c,shape:o,dtype:s.dtype}}const ON={kernelName:hr,backendName:"cpu",kernelFunc:DN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;D$(s,"all");const o=T(i,s.shape);let l=o;const u=Ku(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Xu(l.length,s.shape.length)),ju("all",l,c.shape.length);const[h,d]=Gu(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];t=t&&r}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Hu(h,o),t=xN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const LN={kernelName:be,backendName:"cpu",kernelFunc:MN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;D$(s,"any");const o=T(i,s.shape);let l=o;const u=Ku(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Xu(l.length,s.shape.length)),ju("any",l,c.shape.length);const[h,d]=Gu(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];t=t||r}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Hu(h,o),t=xN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const PN={kernelName:xe,backendName:"cpu",kernelFunc:zN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;D$(s,"argMax");let a=T(i,s.shape);const o=Ku(a,s.shape.length);let l=s;const u=[];null!=o&&(l=DN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Xu(a.length,l.shape.length)),a=[a[0]],ju("argMax",a,l.shape.length);const[c,h]=Gu(l.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s>t&&(t=s,n=r)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const WN={kernelName:ye,backendName:"cpu",kernelFunc:BN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UN(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;D$(s,"argMin");let a=T(i,s.shape);const o=Ku(a,s.shape.length);let l=s;const u=[];null!=o&&(l=DN({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Xu(a.length,l.shape.length)),a=[a[0]],ju("argMin",a,l.shape.length);const[c,h]=Gu(l.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let r=0;r<f;++r){const s=g[e+r];s<t&&(t=s,n=r)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const VN={kernelName:ve,backendName:"cpu",kernelFunc:UN},GN=L$(we,(e=>Math.asin(e))),HN={kernelName:we,backendName:"cpu",kernelFunc:GN},jN=L$(ke,(e=>Math.asinh(e))),KN={kernelName:ke,backendName:"cpu",kernelFunc:jN},qN=L$(Ie,(e=>Math.atan(e))),XN={kernelName:Ie,backendName:"cpu",kernelFunc:qN},JN=H$(((e,t)=>Math.atan2(e,t))),YN=dN(Ce,JN),ZN={kernelName:Ce,backendName:"cpu",kernelFunc:YN},QN=L$(Se,(e=>Math.atanh(e))),eT={kernelName:Se,backendName:"cpu",kernelFunc:QN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tT(e,t,n,r,s,i){const a=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=ua(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],x=s.outShape[2]*s.outShape[3],y=s.outShape[3];for(let v=0;v<s.batchSize;++v){const t=v*b,n=v*r[0];for(let g=0;g<s.inChannels;++g)for(let b=0;b<s.outHeight;++b){const v=b*a-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=t+b*x;for(let t=0;t<s.outWidth;++t){const a=t*o-p,c=Math.max(0,a),d=Math.min(s.inWidth,h+a);let b=f,x=0,v=0;for(let t=w;t<k;t+=l){const s=n+t*r[1];for(let t=c;t<d;t+=u){const n=s+t*r[2],a=e[n+g];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,v++)}if(isNaN(b))break}const S=I+t*y+g;m[S]="avg"===i?x/v:b}}}return g}function nT(e,t,n,r,s=!1,i=!1){const a=ua(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=ua(t,n,e);for(let m=0;m<r.batchSize;++m)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-p;let b=n;while(b<0)b+=u;const x=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;while(p<0)p+=c;const y=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<x;t+=u){const a=t-n;for(let n=p;n<y;n+=c){const o=n-h,l=g.get(m,t,n,e);l>v&&(v=l,w=s?i?((m*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:a*d+o)}}a.set(w,m,t,o,e)}}return a}function rT(e,t,n,r,s,i){const a=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=ua(s.outShape,n),v=y.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],S=s.outShape[4];for(let C=0;C<s.batchSize;++C){const t=C*w,n=C*r[0];for(let y=0;y<s.inChannels;++y)for(let w=0;w<s.outDepth;++w){const C=w*a-g;let $=C;while($<0)$+=u;const N=Math.min(s.inDepth,d+C),T=t+w*k;for(let t=0;t<s.outHeight;++t){const a=t*o-m;let d=a;while(d<0)d+=c;const g=Math.min(s.inHeight,p+a),w=T+t*I;for(let t=0;t<s.outWidth;++t){const a=t*l-b;let o=a;while(o<0)o+=h;const p=Math.min(s.inWidth,f+a),m=w+t*S;let k=x,I=0,C=0;for(let t=$;t<N;t+=u){const s=n+t*r[1];for(let t=d;t<g;t+=c){const n=s+t*r[2];for(let t=o;t<p;t+=h){const s=n+t*r[3],a=e[s+y];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const T=m+y;v[T]="avg"===i?I/C:k}}}}return y}function sT(e,t){const n=ua(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*r-d;let y=x;while(y<0)y+=a;const v=Math.min(t.inDepth,u+x);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;while(d<0)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*i-f;let k=p;while(k<0)k+=l;const I=Math.min(t.inWidth,h+p);let S=Number.NEGATIVE_INFINITY,C=-1;for(let t=y;t<v;t+=a){const n=t-x;for(let r=d;r<w;r+=o){const s=r-u;for(let i=k;i<I;i+=l){const a=i-p,o=e.get(g,t,r,i,m);o>=S&&(S=o,C=n*c*h+s*c+a)}}}n.set(C,g,b,r,s,m)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;D$(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;b(Vo(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Eo(s.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=W$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=G(s.shape),r=tT(e,s.shape,s.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const aT={kernelName:$e,backendName:"cpu",kernelFunc:iT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;D$(s,"avgPool3d");const c=Ro(s.shape,i,a,1,o,l,u),h=n.data.get(s.dataId).values,d=rT(h,s.shape,s.dtype,G(s.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const lT={kernelName:Te,backendName:"cpu",kernelFunc:oT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;D$([s,i],"avgPool3DGrad");const c=Ro(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,S=k-1-c.padInfo.left,C=w-1-c.padInfo.top,$=ua(i.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(s);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-I,i=n-C,a=r-S;let o=0;for(let t=0;t<v;t+=b){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=x){const r=(i+t)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=y){const s=(a+t)/p;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const i=T.get(E,n,r,s,e);o+=i}}}$.set(o*N,E,t,n,r,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const cT={kernelName:Ee,backendName:"cpu",kernelFunc:uT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;D$([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Eo(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=ua(a.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,S=ua(s.shape,"float32",I);for(let C=0;C<c.batchSize;++C)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-v,s=n-y;let i=0;for(let t=0;t<b;t+=g){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=m){const r=(s+t)/d;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;const a=S.get(C,n,r,e);i+=a}}w.set(i*k,C,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const dT={kernelName:Ne,backendName:"cpu",kernelFunc:hT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:i,offset:a,mean:o,variance:l}=t;b(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),b(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),b(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),D$([s,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,x=p.length,y=d.length,v=h.length;let w=0,k=0,I=0,S=0;for(let b=0;b<c.length;++b)g[b]=f[w++]+(c[b]-h[k++])*p[I++]/Math.sqrt(d[S++]+u),w>=m&&(w=0),k>=v&&(k=0),I>=x&&(I=0),S>=y&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,g)}const fT={kernelName:wt,backendName:"cpu",kernelFunc:pT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gT(e,t,n,r,s){const i=Ja(r,t,n),a=w(n),o=G(r);if(i){const n=Ya(t,o);return"string"===s?e.slice(n,n+a):e.subarray(n,n+a)}const l="string"===s?Qf(e):e,u=ua(r,s,l),c=ua(n,s);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===s?eg(c.values):c.values}function mT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r;D$(s,"slice");const[o,l]=Za(s,i,a);za(s,o,l);const u=n.data.get(s.dataId).values,c=gT(u,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,c)}const bT={kernelName:Ln,backendName:"cpu",kernelFunc:mT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;D$([s],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=tf(s.shape,i,o),u=nf(l.length,i.length),c=rf(s.shape,i,o),h=sf(a,i.length),d=af(c,a,i.length),p=xN({inputs:{x:s},backend:n,attrs:{shape:l}}),f=DN({inputs:{x:p},backend:n,attrs:{perm:u}}),g=xN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=mT({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const yT={kernelName:_e,backendName:"cpu",kernelFunc:xT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vT(e,t,n,r,s){const i=w(r),a=q(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(a[n]+=i>0?t[o]:1)}return a}function wT(e,t,n,r=!1){const s=e.shape[0],i=e.shape[1],a=ua([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<i;s++){const i=e.get(o,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,s),o,i):a.set(a.get(o,i)+1,o,i))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,u=vT(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const IT={kernelName:Ae,backendName:"cpu",kernelFunc:kT};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ST(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.data.get(r.dataId).values,a=n.data.get(s.dataId).values,o=Oa(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const CT={kernelName:De,backendName:"cpu",kernelFunc:ST},$T=Q$((e=>Math.ceil(e))),NT=z$(Me,$T),TT={kernelName:Me,backendName:"cpu",kernelFunc:NT},ET=L$(Le,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),RT={kernelName:Le,backendName:"cpu",kernelFunc:ET},_T=e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(w(t.shape)),s=n.data.get(t.dataId),i=s.complexTensorInfos.real,a=s.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];r[u]=Math.hypot(e,t)}return n.makeOutput(r,t.shape,"float32")},AT={kernelName:Pe,backendName:"cpu",kernelFunc:_T};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FT(e,t,n,r){const s=_(n,w(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=w(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?Qf(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=i[a++]}r+=e.shape[1]}))}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DT(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,i=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,i)}const OT={kernelName:Tt,backendName:"cpu",kernelFunc:DT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MT(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=T(s,t[0].shape)[0],a=t.map((e=>e.shape));Hp(a,i);let o=jp(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));if(1===l.length)return W$({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>oN({inputs:{input:e},backend:n}))),t=l.map((e=>DT({inputs:{input:e},backend:n}))),r=MT({inputs:e,backend:n,attrs:{axis:i}}),s=MT({inputs:t,backend:n,attrs:{axis:i}}),a=sN({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),a}const u=l.map((e=>{const t=w(e.shape.slice(i)),r=[-1,t];return xN({inputs:{x:e},backend:n,attrs:{shape:r}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=jp(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],d=FT(c,o,t[0].dtype,h),p=jp(l.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const LT={kernelName:Be,backendName:"cpu",kernelFunc:MT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;D$([s,i],"conv2d");const h=Go(l),d=_o(s.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new bs(d.outShape,s.dtype),w=G(s.shape),k=G(i.shape),I=w[0],S=y?w[1]:w[2],C=y?w[2]:1,$=y?1:w[1],N=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],_=n.data.get(s.dataId).values,A=n.data.get(i.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*I,t=D*N;for(let n=0;n<d.outHeight;++n){const r=t+n*T,s=n*d.strideHeight-x;for(let t=0;t<p;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*S;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+e*k[1],o=a+r*C;let l=s;for(let e=0;e<d.inChannels;++e){const n=_[o+e*$];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*A[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const PT={kernelName:We,backendName:"cpu",kernelFunc:zT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;D$([s,i],"conv2dBackpropFilter");const h=Go(l),d=_o(s.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new bs(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=new bs(s.shape,s.dtype,w),S=new bs(i.shape,i.dtype,k);for(let C=0;C<g;++C){const e=Math.max(0,Math.ceil((v-C)/p)),t=Math.min(d.outHeight,(d.inHeight+v-C)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/f)),s=Math.min(d.outWidth,(d.inWidth+y-n)/f);for(let i=0;i<d.inChannels;++i)for(let a=0;a<d.outChannels;++a){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=C+u*p-v;for(let t=r;t<s;++t){const r=n+t*f-y;o+=b?I.get(l,e,r,i)*S.get(l,u,t,a):I.get(l,i,e,r)*S.get(l,a,u,t)}}x.set(o,C,n,i,a)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const WT={kernelName:Ue,backendName:"cpu",kernelFunc:BT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;D$([s,i],"conv2dBackpropInput");const h=G(i.shape),d=G(s.shape);let p=Go(u);const f=_o(a,i.shape,o,1,l,c,!1,p),g=new bs(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:C,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:_,strideWidth:A}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,O="channelsLast"===p,M=g.strides[0],L=O?g.strides[1]:g.strides[2],z=O?g.strides[2]:1,P=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,V=O?1:d[1];for(let G=0;G<k;++G)for(let e=0;e<C;++e)for(let t=0;t<$;++t){const n=t-F,r=Math.max(0,Math.ceil(n/_)),s=Math.min(E,(I+n)/_);for(let i=0;i<N;++i){const a=i-D,o=Math.max(0,Math.ceil(a/A)),l=Math.min(R,(S+a)/A);let u=0;for(let t=r;t<s;++t){const r=t*_-n;for(let n=o;n<l;++n){const s=n*A-a,i=B*G+W*t+U*n,o=y*(I-1-r)+v*(S-1-s)+w*e;for(let e=0;e<T;++e){const t=b[i+V*e],n=x[o+e];u+=t*n}}}const c=M*G+L*t+z*i+P*e;m[c]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const VT={kernelName:Ve,backendName:"cpu",kernelFunc:UT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r;D$([s,i],"conv3d");const u=Ao(s.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,x=m.left,y=m.top,v=new bs(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(i.dataId).values,I=v.values,S=G(s.shape),C=G(i.shape);for(let $=0;$<u.batchSize;++$){const e=$*S[0],t=$*v.strides[0];for(let n=0;n<u.outDepth;++n){const r=t+n*v.strides[1],s=n*u.strideDepth-b;for(let t=0;t<c;++t){const n=s+t*p;if(n<0||n>=u.inDepth)continue;const i=t*C[0],a=e+n*S[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=i+e*C[1],o=a+r*S[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const i=s+e*C[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const HT={kernelName:Ge,backendName:"cpu",kernelFunc:GT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r;D$([s,i],"conv3dBackpropFilterV2");const u=G(s.shape),c=G(i.shape),h=Ao(s.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new bs(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,S=n.data.get(i.dataId).values,[C,$,N,T]=c,E=n.data.get(s.dataId).values,[R,_,A,F]=u,D=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let L=0;L<g;++L){const e=Math.max(0,Math.ceil((D-L)/d)),t=Math.min(h.outDepth,(h.inDepth+D-L)/d),n=L*v;for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((M-r)/p)),i=Math.min(h.outHeight,(h.inHeight+M-r)/p),a=r*w+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(h.outWidth,(h.inWidth+O-n)/f),u=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*I+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let c=0;c<h.batchSize;++c){const h=c*R,m=c*C;for(let c=e;c<t;++c){const e=L+c*d-D,t=e*_+h,b=c*$+m;for(let c=s;c<i;++c){const e=r+c*p-M,s=e*A+t,i=c*N+b;for(let t=o;t<l;++t){const e=n+t*f-O,r=e*F+s,o=t*T+i;g+=E[r+a]*S[o+u]}}}}y[c+u]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const KT={kernelName:He,backendName:"cpu",kernelFunc:jT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qT(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r;D$([s],"conv3dBackpropInputV2");const u=G(s.shape),c=G(i.shape),h=Ao(l,i.shape,o,1,a),d=new bs(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(s.dataId).values,[y,v,w,k]=u,I=n.data.get(i.dataId).values,[S,C,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:_,inChannels:A,inDepth:F,inHeight:D,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,V=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=_-1-h.padInfo.left;for(let G=0;G<T;++G)for(let e=0;e<A;++e)for(let t=0;t<F;++t){const n=t-V,r=Math.max(0,Math.ceil(n/B)),s=Math.min(L,(E+n)/B);for(let i=0;i<D;++i){const a=i-H,o=Math.max(0,Math.ceil(a/W)),l=Math.min(z,(R+a)/W);for(let u=0;u<O;++u){const c=u-j,h=Math.max(0,Math.ceil(c/U)),d=Math.min(P,(_+c)/U);let T=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=o;n<l;++n){const s=n*W-a;for(let i=h;i<d;++i){const a=i*U-c,o=y*G+v*t+w*n+k*i,l=S*(E-1-r)+C*(R-1-s)+$*(_-1-a)+N*e;for(let e=0;e<M;++e){const t=x[o+e],n=I[l+e];T+=t*n}}}}p[f*G+g*t+m*i+b*u+e]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const XT={kernelName:je,backendName:"cpu",kernelFunc:qT},JT=L$(Ke,(e=>Math.cos(e))),YT={kernelName:Ke,backendName:"cpu",kernelFunc:JT},ZT=L$(qe,(e=>Math.cosh(e))),QT={kernelName:qe,backendName:"cpu",kernelFunc:ZT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eE(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=i.shape[0],[g,m]=o,b=ua([f,g,m,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,v=n.data.get(s.dataId).values,w=G(s.shape),k=G(b.shape);for(let I=0;I<f;I++){const e=4*I,t=x[e],n=x[e+1],r=x[e+2],s=x[e+3],i=y[I];if(i>=c)continue;const a=g>1?(r-t)*(h-1)/(g-1):0,o=m>1?(s-n)*(d-1)/(m-1):0;for(let c=0;c<g;c++){const e=g>1?t*(h-1)+c*a:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),r=Math.ceil(e),a=e-t;for(let e=0;e<m;e++){const l=m>1?n*(d-1)+e*o:.5*(n+s)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),g=l-h;for(let n=0;n<p;n++){let s=n+h*w[2]+t*w[1]+i*w[0];const o=v[s];s=n+f*w[2]+t*w[1]+i*w[0];const l=v[s];s=n+h*w[2]+r*w[1]+i*w[0];const u=v[s];s=n+f*w[2]+r*w[1]+i*w[0];const d=v[s],p=o+(l-o)*g,m=u+(d-u)*g;s=n+e*k[2]+c*k[1]+I*k[0],b.values[s]=p+(m-p)*a}}}else for(let t=0;t<m;++t){const r=m>1?n*(d-1)+t*o:.5*(n+s)*(d-1);if(r<0||r>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const a=Math.round(r),l=Math.round(e);for(let e=0;e<p;e++){const n=e+a*w[2]+l*w[1]+i*w[0],r=e+t*k[2]+c*k[1]+I*k[0];b.values[r]=v[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const tE={kernelName:Ye,backendName:"cpu",kernelFunc:eE};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;D$(s,"cumprod");const l=Ku([i],s.shape.length);let u=s;null!=l&&(u=DN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Xu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Fs(u.dtype,"int32"),d=K(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?1:p[t];else{const n=g(b,e-1);d[t]=a?p[n]*d[n]:p[t]*d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=qu(l),t=DN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const rE={kernelName:Xe,backendName:"cpu",kernelFunc:nE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;D$(s,"cumsum");const l=Ku([i],s.shape.length);let u=s;null!=l&&(u=DN({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Xu(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Fs(u.dtype,"int32"),d=q(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?0:p[t];else{const n=g(b,e-1);d[t]=a?p[n]+d[n]:p[t]+d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=qu(l),t=DN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const iE={kernelName:Je,backendName:"cpu",kernelFunc:sE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(i.dataId).values,r=vT(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=wT(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const oE={kernelName:Ze,backendName:"cpu",kernelFunc:aE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r;b("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(s.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let b=0;b<o;++b)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<d;++e){const r=Math.floor(e/i),s=e%i,a=(n*i+s)*p;for(let e=0;e<p;++e){const n=e+a,s=n+c*(r+u*(t+l*b));g[m++]=f[s]}}}return n.makeTensorInfo([o,h,d,p],s.dtype,g)}const uE={kernelName:Qe,backendName:"cpu",kernelFunc:lE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;D$([s,i],"depthwiseConv2DNative");const c=G(s.shape),h=G(i.shape);let d=l;null==d&&(d=[1,1]),b(Vo(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=_o(s.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:x,padInfo:y}=p,v=y.left,w=y.top,k=p.outChannels/p.inChannels,I=new bs(p.outShape,s.dtype),S=n.data.get(s.dataId).values,C=n.data.get(i.dataId).values,$=I.values;for(let b=0;b<p.batchSize;++b){const e=b*c[0],t=b*I.strides[0];for(let n=0;n<p.outHeight;++n){const r=t+n*I.strides[1],s=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*x;if(r<0||r>=p.inWidth)continue;const s=i+e*h[1],o=a+r*p.inChannels;let l=t,u=s;for(let e=0;e<p.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)$[l+e]+=t*C[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const hE={kernelName:et,backendName:"cpu",kernelFunc:cE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;D$([s,i],"depthwiseConv2dNativeBackpropFilter");const h=_o(s.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new bs(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new bs(s.shape,s.dtype,v),k=n.data.get(i.dataId).values,I=new bs(i.shape,i.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((x-S)/d)),t=Math.min(h.outHeight,(h.inHeight+x-S)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((b-n)/p)),s=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let i=0;i<h.outChannels;++i){const a=Math.trunc(i/y),o=i%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=S+o*d-x;for(let t=r;t<s;++t){const r=n+t*p-b;l+=w.get(u,e,r,a)*I.get(u,o,t,i)}}m.set(l,S,n,a,o)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const pE={kernelName:tt,backendName:"cpu",kernelFunc:dE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fE(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;D$([s,i],"depthwiseConv2DNativeBackpropInput");const h=G(s.shape),d=G(i.shape),p=_o(c,i.shape,a,o,l,u,!0),f=new bs(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[S,C,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:_,inWidth:A,outChannels:F,outHeight:D,outWidth:O,strideHeight:M,strideWidth:L}=p,z=T-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let W=0;W<N;++W)for(let e=0;e<R;++e)for(let t=0;t<_;++t){const n=t-z,r=Math.max(0,Math.ceil(n/M)),s=Math.min(D,(T+n)/M);for(let i=0;i<A;++i){const a=i-P,o=Math.max(0,Math.ceil(a/L)),l=Math.min(O,(E+a)/L);let u=0;for(let t=r;t<s;++t){const r=t*M-n;for(let n=o;n<l;++n){const s=n*L-a,i=v*W+w*t+k*n,o=S*(T-1-r)+C*(E-1-s)+$*e;for(let t=0;t<B;++t){const n=e*B+t,r=y[i+n],s=I[o+t];u+=r*s}}}g[m*W+b*t+x*i+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const gE={kernelName:nt,backendName:"cpu",kernelFunc:fE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mE(e){const{inputs:t,backend:n}=e,{x:r}=t,s=w(r.shape),i=n.data.get(r.dataId).values,a=ua([s,s],r.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*s+u]=i[u];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,a.dtype,a.values)}const bE={kernelName:rt,backendName:"cpu",kernelFunc:mE},xE={kernelName:st,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:C,dilationWidth:$,outShape:N}=To(r.shape,s.shape,i,a,"NHWC",o),T=w(N),E=N.length,R=_(r.dtype,T);for(let w=0;w<p;++w)for(let e=0;e<b;++e){const t=e*v-y.top;for(let n=0;n<x;++n){const i=n*k-y.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*C;if(n>=0&&n<f)for(let t=0;t<S;++t){const l=i+t*$;if(l>=0&&l<g){const i=Y([w,n,l,a],c,G(r.shape)),p=Y([e,t,a],d,G(s.shape)),f=u[i]+h[p];f>o&&(o=f)}}}const l=Y([w,e,n,a],E,G(N));R[l]=o}}}const A=l.write(Qr(R,r.dtype),N,r.dtype);return{dataId:A,shape:N,dtype:r.dtype}}},yE={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=j(r.shape,u.data.get(r.dataId).values),h=j(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=To(r.shape,s.shape,a,o,"NHWC",l);b(i.rank===$.length,(()=>`Error in ${at}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=j($,u.data.get(i.dataId).values),T=X(s.shape,s.dtype);for(let b=0;b<d;++b)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<x;++n){const r=n*w-y.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=r+t*C;if(l>=0&&l<f){const r=c[b][n][l][s]+h[e][t][s];r>i&&(i=r,a=e,o=t)}}}T[a][o][s]+=N[b][e][n][s]}}}const E=u.write(Qr(T,r.dtype),s.shape,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}},vE={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=j(r.shape,u.data.get(r.dataId).values),h=j(s.shape,u.data.get(s.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:x,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:C,outShape:$}=To(r.shape,s.shape,a,o,"NHWC",l);b(i.rank===$.length,(()=>`Error in ${it}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=j($,u.data.get(i.dataId).values),T=X(r.shape,r.dtype);for(let b=0;b<d;++b)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<x;++n){const r=n*w-y.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,a=t<0?0:t,o=r<0?0:r;for(let e=0;e<k;++e){const n=t+e*S;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=r+t*C;if(l>=0&&l<f){const r=c[b][n][l][s]+h[e][t][s];r>i&&(i=r,a=n,o=l)}}}T[b][a][o][s]+=N[b][e][n][s]}}}const E=u.write(Qr(T,r.dtype),r.shape,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}},wE=H$(((e,t)=>e*t)),kE=pN(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),IE=dN(rn,wE,kE),SE={kernelName:rn,backendName:"cpu",kernelFunc:IE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;let o;D$(s,"sum"),o="bool"===s.dtype?cN({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):W$({inputs:{x:s},backend:n});const l=o.shape.length,u=T(i,o.shape),c=Ku(u,l);let h=u,d=o;null!=c&&(d=DN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Xu(h.length,l)),ju("sum",h,d.shape.length);const[p,f]=Gu(d.shape,h),g=Fs(d.dtype,"int32");let m=aN(n,p,g);const b=w(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const e=v*b;let t=0;for(let n=0;n<b;++n)t+=y[e+n];x[v]=t}if(a){const e=Hu(m.shape,u),t=m;m=xN({inputs:{x:m},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const $E={kernelName:Gn,backendName:"cpu",kernelFunc:CE};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NE(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=_f(s,i.length);Ff(a.length,l,i);const{path:u,steps:c}=Df(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:r}=Af(p,l[e]);let s;Of(t)?s=i[e]:(s=DN({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);k(s.shape,a)||(s=xN({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=IE({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=CE({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const TE={kernelName:lt,backendName:"cpu",kernelFunc:NE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EE(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;D$([r,s],"eluGrad");const i=new Float32Array(w(s.shape)),a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let l=0;l<a.length;++l){const e=a[l];i[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(s.shape,"float32",i)}const RE={kernelName:ct,backendName:"cpu",kernelFunc:EE},_E=H$(((e,t)=>e===t?1:0)),AE=dN(dt,_E,null,"bool"),FE={kernelName:dt,backendName:"cpu",kernelFunc:AE},DE=pf,OE=ff,ME=gf,LE=mf,zE=bf,PE=xf,BE=L$(ht,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+DE*n);return t*(1-((((PE*r+zE)*r+LE)*r+ME)*r+OE)*r*Math.exp(-n*n))})),WE={kernelName:ht,backendName:"cpu",kernelFunc:BE},UE=Q$((e=>Math.exp(e))),VE=z$(pt,UE,"float32"),GE={kernelName:pt,backendName:"cpu",kernelFunc:VE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HE(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:i}=r,a=s.shape.length,o=s.shape.slice();let l=i;return i<0&&(b(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),xN({inputs:{x:s},backend:n,attrs:{shape:o}})}const jE={kernelName:ft,backendName:"cpu",kernelFunc:HE},KE=Q$((e=>Math.expm1(e))),qE=z$(gt,KE),XE={kernelName:gt,backendName:"cpu",kernelFunc:qE},JE=H$(((e,t)=>e/t)),YE=dN(ot,JE),ZE={kernelName:ot,backendName:"cpu",kernelFunc:YE},QE=H$(((e,t)=>e-t)),eR=pN(((e,t,n,r)=>({real:e-n,imag:t-r}))),tR=dN(ir,QE,eR),nR={kernelName:ir,backendName:"cpu",kernelFunc:tR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rR(e,t,n){const r=e.shape,s=r[0],i=r[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[s,i],c=w(u),h=R("float32",c),d=R("float32",c);for(let m=0;m<s;m++){const e=mT({inputs:{x:o},backend:n,attrs:{begin:[m,0],size:[1,i]}}),r=mT({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,i]}}),s=sN({inputs:{real:e,imag:r},backend:n}),{real:a,imag:u}=sR(s,t,n),c=yf(a,u);for(let t=0;t<i;t++){const e=If(c,t);h[m*i+t]=e.real,d[m*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=sN({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function sR(e,t,n){const r=w(e.shape),s=n.data.get(e.dataId),i=n.data.get(s.complexTensorInfos.real.dataId).values,a=n.data.get(s.complexTensorInfos.imag.dataId).values;if(iR(r)){const s=aR(i,a,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),i=n.makeTensorInfo([],"float32",Yr(r,"float32")),a=W$({inputs:{x:i},backend:n}),l=ZE.kernelFunc({inputs:{a:e,b:i},backend:n}),u=ZE.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}{const e=yf(i,a),n=oR(e,r,t);return vf(n)}}function iR(e){return 0===(e&e-1)}function aR(e,t,n,r,s){if(1===n)return{real:e,imag:t};const i=yf(e,t),a=n/2,o=wf(i),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=sN({inputs:{real:h,imag:d},backend:s}),f=kf(i),g=f.real,m=f.imag,b=[g.length],x=s.makeTensorInfo(b,"float32",g),y=s.makeTensorInfo(b,"float32",m),v=sN({inputs:{real:x,imag:y},backend:s}),w=aR(l,u,a,r,s),k=w.real,I=w.imag,S=[k.length],C=s.makeTensorInfo(S,"float32",k),$=s.makeTensorInfo(S,"float32",I),N=sN({inputs:{real:C,imag:$},backend:s}),T=aR(g,m,a,r,s),E=T.real,R=T.imag,_=[E.length],A=s.makeTensorInfo(_,"float32",E),F=s.makeTensorInfo(_,"float32",R),D=sN({inputs:{real:A,imag:F},backend:s}),O=Cf(n,r),M=[O.real.length],L=s.makeTensorInfo(M,"float32",O.real),z=s.makeTensorInfo(M,"float32",O.imag),P=sN({inputs:{real:L,imag:z},backend:s}),B=IE({inputs:{a:P,b:D},backend:s}),W=mN({inputs:{a:N,b:B},backend:s}),U=tR({inputs:{a:N,b:B},backend:s}),V=oN({inputs:{input:W},backend:s}),G=oN({inputs:{input:U},backend:s}),H=DT({inputs:{input:W},backend:s}),j=DT({inputs:{input:U},backend:s}),K=MT({inputs:[V,G],backend:s,attrs:{axis:0}}),q=MT({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(K.dataId).values,J=s.data.get(q.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(K),s.disposeIntermediateTensorInfo(q),{real:X,imag:J}}function oR(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let i=0,a=0;for(let r=0;r<t;r++){const o=$f(s*r,t,n),l=If(e,r);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),Sf(r,i,a,s)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=w(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=xN({inputs:{x:r},backend:n,attrs:{shape:[a,i]}}),l=rR(o,!1,n),u=xN({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const uR={kernelName:mt,backendName:"cpu",kernelFunc:lR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cR(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:i}=n,a=i||W(s),o=_(a,w(r));return dR(o,s,a),t.makeTensorInfo(r,a,o)}const hR={kernelName:bt,backendName:"cpu",kernelFunc:cR};function dR(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const pR={kernelName:xt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,i=R(r.dtype,w(r.shape)),[a,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let d=0;d<a;d++){const e=d*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const r=t*u;for(let s=0;s<u;s++){const a=Math.round(l-t-1),o=e+n+r+s;let h=c[o];if(a>=0&&a<l){const t=a*u,r=e+n+t+s;h=c[r]}i[o]=h}}}}const h=s.write(i,r.shape,r.dtype);return{dataId:h,shape:r.shape,dtype:r.dtype}}},fR=Q$((e=>Math.floor(e))),gR=z$(yt,fR),mR={kernelName:yt,backendName:"cpu",kernelFunc:gR},bR=H$(((e,t)=>Math.floor(e/t))),xR=dN(vt,bR,null,"int32"),yR={kernelName:vt,backendName:"cpu",kernelFunc:xR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=zT({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=xN({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=mN({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=mN({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=xN({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=rN(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=rN(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}const wR={kernelName:vr,backendName:"cpu",kernelFunc:vR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=cE({inputs:{x:s,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=mN({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=rN(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}const IR={kernelName:wr,backendName:"cpu",kernelFunc:kR};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SR(e,t,n,r,s,i,a,o,l){const u=ua([r,i],n);for(let c=0;c<r;c++){const n=[];let r=0;for(let t=0;t<s;t++){const i=e[c*s+t];r+=i*a[t],n.push(i)}if(r<0||r>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)u.values[c*i+e]=t.get(...t.indexToLoc(r*i+e))}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CR(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=w(r.shape),a=s.shape,o=a[a.length-1],[l,u,c,h]=of(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=n.data.get(s.dataId).values,p=n.bufferSync(r),f=SR(d,p,r.dtype,u,o,c,h,r.shape,i);return n.makeTensorInfo(l,r.dtype,f.values)}const $R={kernelName:It,backendName:"cpu",kernelFunc:CR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NR(e,t,n){const r=ua(n,e.dtype);for(let s=0;s<r.size;++s){const n=r.indexToLoc(s),i=n.slice(),a=i[0],o=i[2],l=t.locToIndex([a,o]);i[2]=t.values[l];const u=e.locToIndex(i);0<=u&&u<e.values.length&&(r.values[s]=e.values[u])}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r;D$([s,i],"gatherV2");const l=T(a,s.shape)[0],u=n.data.get(i.dataId).values,c=s.shape[l];for(let w=0;w<u.length;++w){const e=u[w];b(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=w(i.shape),p=Zf(s,i,l,h),f=xN({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=xN({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],x=n.bufferSync(g),y=n.bufferSync(f),v=NR(y,x,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}const ER={kernelName:kt,backendName:"cpu",kernelFunc:TR},RR=H$(((e,t)=>e>t?1:0)),_R=dN(St,RR,null,"bool"),AR={kernelName:St,backendName:"cpu",kernelFunc:_R},FR=H$(((e,t)=>e>=t?1:0)),DR=dN(Ct,FR,null,"bool"),OR={kernelName:Ct,backendName:"cpu",kernelFunc:DR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MR(e){const{inputs:t,backend:n}=e,{input:r}=t,s=w(r.shape),i=r.shape[r.shape.length-1],a=s/i,o=xN({inputs:{x:r},backend:n,attrs:{shape:[a,i]}}),l=rR(o,!0,n),u=xN({inputs:{x:l},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const LR={kernelName:Nt,backendName:"cpu",kernelFunc:MR},zR=L$(Et,(e=>Number.isFinite(e)?1:0),"bool"),PR={kernelName:Et,backendName:"cpu",kernelFunc:zR},BR=L$(Rt,(e=>Math.abs(e)===1/0?1:0),"bool"),WR={kernelName:Rt,backendName:"cpu",kernelFunc:BR},UR=L$(_t,(e=>Number.isNaN(e)?1:0),"bool"),VR={kernelName:_t,backendName:"cpu",kernelFunc:UR},GR=H$(((e,t)=>e<t?1:0)),HR=dN(Ft,GR,null,"bool"),jR={kernelName:Ft,backendName:"cpu",kernelFunc:HR},KR=H$(((e,t)=>e<=t?1:0)),qR=dN(Dt,KR,null,"bool"),XR={kernelName:Dt,backendName:"cpu",kernelFunc:qR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JR(e,t,n){const r=(t-e)/(n-1),s=q(n,"float32");s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+r;return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YR(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=JR(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}const ZR={kernelName:Ot,backendName:"cpu",kernelFunc:YR},QR=Q$((e=>Math.log(e))),e_=z$(Mt,QR),t_={kernelName:Mt,backendName:"cpu",kernelFunc:e_},n_=L$(Lt,(e=>Math.log1p(e))),r_={kernelName:Lt,backendName:"cpu",kernelFunc:n_},s_=H$(((e,t)=>e&&t)),i_=dN(zt,s_,null,"bool"),a_={kernelName:zt,backendName:"cpu",kernelFunc:i_},o_=L$(Pt,(e=>e?0:1),"bool"),l_={kernelName:Pt,backendName:"cpu",kernelFunc:o_},u_=H$(((e,t)=>e||t)),c_=dN(Bt,u_,null,"bool"),h_={kernelName:Bt,backendName:"cpu",kernelFunc:c_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function d_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r;D$(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=w(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const r=e-t+Math.min(t+i,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let g=0;g<d;g++){const e=f(g),t=h[g]*Math.pow(a+o*e,-l);p[g]=t}return n.makeTensorInfo(s.shape,s.dtype,p)}const p_={kernelName:Ut,backendName:"cpu",kernelFunc:d_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function f_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;D$(a,"LRNGrad");const h=w(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),b=h;for(let x=0;x<b;x++){const e=x%d,t=x-e+Math.max(0,e-o),n=x-e+Math.min(d,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=u*r+l;for(let s=t;s<n;s++){let e=-2*u*c*f[s]*g[x]/r;x===s&&(e+=Math.pow(r,-c)),e*=p[x],m[s]+=e}}return n.makeTensorInfo(a.shape,s.dtype,m)}const g_={kernelName:Vt,backendName:"cpu",kernelFunc:f_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function m_(e,t,n,r){const s=R(r,w(n));for(let i=0;i<s.length;++i){const n=i*t;let r=e[n];for(let s=0;s<t;++s){const t=e[n+s];(Number.isNaN(t)||t>r)&&(r=t)}s[i]=r}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function b_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=n;let l=s.shape;const u=l.length,c=T(i,l);let h=c;const d=Ku(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=FN(p,l,s.dtype,d,e),h=Xu(h.length,u),l=e}D$(s,"max"),ju("max",h,u);const[f,g]=Gu(l,h),m=w(g),b=m_(p,m,f,s.dtype),x=o.write(b,f,s.dtype);let y=f;if(a){const e=Hu(f,c);y=e}return{dataId:x,shape:y,dtype:s.dtype}}const x_={kernelName:Gt,backendName:"cpu",kernelFunc:b_},y_=H$(((e,t)=>Math.max(e,t))),v_=dN(Ht,y_),w_={kernelName:Ht,backendName:"cpu",kernelFunc:v_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function k_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;D$(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;b(Vo(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Eo(s.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=W$({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=G(s.shape),r=tT(e,s.shape,s.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,s.dtype,r.values)}return h}const I_={kernelName:jt,backendName:"cpu",kernelFunc:k_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function S_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r;D$(s,"maxPool3d");const c=Ro(s.shape,i,a,1,o,l,u),h=n.data.get(s.dataId).values,d=rT(h,s.shape,s.dtype,G(s.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const C_={kernelName:qt,backendName:"cpu",kernelFunc:S_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $_(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=r;D$([s,i],"maxPool3DGrad");const c=Ro(i.shape,a,o,1,l,u),h=n.bufferSync(i),d=sT(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=y-1-c.padInfo.front,I=w-1-c.padInfo.left,S=v-1-c.padInfo.top,C=ua(i.shape,"float32"),$=n.bufferSync(s);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-k,i=n-S,a=r-I;let o=0;for(let t=0;t<y;t+=m){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<v;r+=b){const s=(i+r)/f;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=x){const l=(a+i)/g;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=y*v*w-1-d.get(N,n,s,l,e),h=t*v*w+r*w+i,p=u===h?1:0;if(0===p)continue;const f=$.get(N,n,s,l,e);o+=f*p}}}C.set(o,N,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}const N_={kernelName:Xt,backendName:"cpu",kernelFunc:$_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function T_(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;D$([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Eo(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=ua(d.outShape,o.dtype,nT(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=ua(o.shape,"float32"),S=n.data.get(s.dataId).values,C=ua(s.shape,"float32",S);for(let $=0;$<d.batchSize;++$)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const r=t-k,s=n-w;let i=0;for(let t=0;t<y;t+=b){const n=(r+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let r=0;r<v;r+=x){const a=(s+r)/m;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=y*v-1-f.get($,n,a,e),l=t*v+r,u=o===l?1:0;if(0===u)continue;const c=C.get($,n,a,e);i+=c*u}}I.set(i,$,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const E_={kernelName:Kt,backendName:"cpu",kernelFunc:T_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function R_(e,t,n,r,s){const i=G(t),a=tT(e,t,n,i,s,"max"),o=nT(e,t,n,s,!0,r);return[a.values,o.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const __={kernelName:Jt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;D$(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Eo(r.shape,s,i,[1,1],a),[h,d]=R_(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function A_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=T(i,s.shape),l=Gu(s.shape,o),u=l[1],c=w(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=cN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=YE({inputs:{a:p,b:d},backend:n});h.push(f);const g=CE({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:a}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const F_={kernelName:Yt,backendName:"cpu",kernelFunc:A_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function D_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;D$(s,"min");const o=T(i,s.shape);let l=o;const u=Ku(l,s.shape.length);let c=s;null!=u&&(c=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Xu(l.length,s.shape.length)),ju("min",l,c.shape.length);const[h,d]=Gu(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const r=g[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Hu(h,o),t=xN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const O_={kernelName:Zt,backendName:"cpu",kernelFunc:D_},M_=H$(((e,t)=>Math.min(e,t))),L_=dN(Qt,M_),z_={kernelName:Qt,backendName:"cpu",kernelFunc:L_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function P_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,mode:a}=r;D$(s,"mirrorPad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===a?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=G(s.shape),f=w(o),g=o.length,m=G(o),b=R(s.dtype,f);for(let y=0;y<f;y++){let e=Z(y,g,m);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=Y(e,d,p);b[y]=h[t]}const x=n.write(b,o,s.dtype);return{dataId:x,shape:o,dtype:s.dtype}}const B_={kernelName:en,backendName:"cpu",kernelFunc:P_},W_=H$(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),U_=dN(tn,W_),V_={kernelName:tn,backendName:"cpu",kernelFunc:U_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function G_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=s.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=T([o],s.shape),u=b_({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Hu(u.shape,l),h=xN({inputs:{x:u},backend:n,attrs:{shape:c}}),d=tR({inputs:{a:s,b:h},backend:n}),p=VE({inputs:{x:d},backend:n}),f=CE({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=xN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=YE({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const H_={kernelName:Kn,backendName:"cpu",kernelFunc:G_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function j_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r;D$(s,"multinomial");const l=o?s:G_({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=q(w(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=fc.alea(a.toString()),r=f*i;for(let s=0;s<i;++s){const e=n();p[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const K_={kernelName:nn,backendName:"cpu",kernelFunc:j_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function q_(e,t,n){const r=Yr(-1,n);return wE([],t,r,e,n)}function X_(e){const{inputs:t,backend:n}=e,{x:r}=t;D$(r,"neg");const s=n.data.get(r.dataId).values,[i,a]=q_(s,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,i)}const J_={kernelName:sn,backendName:"cpu",kernelFunc:X_},Y_=bd;function Z_(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r;D$(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=Y_(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const Q_={kernelName:on,backendName:"cpu",kernelFunc:Z_},eA=xd;function tA(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;D$(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=eA(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const nA={kernelName:ln,backendName:"cpu",kernelFunc:tA},rA=yd;function sA(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;D$(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=rA(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const iA={kernelName:un,backendName:"cpu",kernelFunc:sA},aA=H$(((e,t)=>e!==t?1:0)),oA=dN(an,aA,null,"bool"),lA={kernelName:an,backendName:"cpu",kernelFunc:oA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uA(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r;D$(s,"oneHot");const u=w(s.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(s.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...s.shape,a],i,c)}const cA={kernelName:hn,backendName:"cpu",kernelFunc:uA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=oN({inputs:{input:r},backend:n}),t=hA({inputs:{x:e},backend:n}),s=DT({inputs:{input:r},backend:n}),i=hA({inputs:{x:s},backend:n}),a=sN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return cR({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const dA={kernelName:gr,backendName:"cpu",kernelFunc:hA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const e=oN({inputs:{input:r},backend:n}),t=pA({inputs:{x:e},backend:n}),s=DT({inputs:{input:r},backend:n}),i=hA({inputs:{x:s},backend:n}),a=sN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return cR({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}const fA={kernelName:cn,backendName:"cpu",kernelFunc:pA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return HE({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{x(i,e.shape,"All tensors passed to stack must have matching shapes"),b(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=HE({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),u=MT({inputs:l,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const mA={kernelName:dn,backendName:"cpu",kernelFunc:gA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;D$(s,"pad");const o=i.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(s.dataId).values,c=w(s.shape),h=s.shape.length,d=G(s.shape),p=w(o),f=o.length,g=G(o),m=R(s.dtype,p);0!==a&&m.fill(a);for(let x=0;x<c;x++){const e=Z(x,h,d),t=e.map(((e,t)=>e+l[t])),n=Y(t,f,g);m[n]=u[x]}const b=n.write(m,o,s.dtype);return{dataId:b,shape:o,dtype:s.dtype}}const xA={kernelName:pn,backendName:"cpu",kernelFunc:bA},yA=H$(((e,t)=>Math.pow(e,t))),vA=dN(fn,yA),wA={kernelName:fn,backendName:"cpu",kernelFunc:vA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kA(e,t,n,r){const[s,i]=Gu(e,r),a=Fs(t,"int32"),o=q(w(s),a),l=w(i);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];o[u]=t}return{outVals:o,outShape:s,outDtype:a}}function IA(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;D$(s,"prod");const o=s.shape.length,l=T(i,s.shape),u=Ku(l,o);let c=l,h=s;const d=[];null!=u&&(h=DN({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Xu(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=kA(h.shape,h.dtype,p,c);let b=g;return a&&(b=Hu(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}const SA={kernelName:mn,backendName:"cpu",kernelFunc:IA};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CA(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=Z(r,t.length,G(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}function $A(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}function NA(e,t,n,r){const s=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));$A(n,r);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],a=e[u]+1;for(let e=0;e<n.length;++e){const s=n[e],i=e+t.length-1;if(i>=0){const e=o[i],t=e[e.length-1]-s[r];for(let n=r;n<a;++n)o[i].push(s[n+1]+t)}r=s[r],a=s[a]}a!==r&&(s.push([r,a]),i+=a-r)}return{outSplits:o,valueSlices:s,numValues:i}}function TA(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=_("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}function EA(e,t){const n=e.slice(0,t);while(n.length<t)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function RA(e,t,n,r,s,i){const a=EA(t,2)[1],o=EA(i,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<r;++n)s[l*o+n]=e[t*a+n];++l}}function _A(e,t,n,r,s){const i=t.slice();i[0]=s;const a=_(n,w(i)),o=e.length,l=0===o?0:o/t[0];return RA(e,t,r,l,a,i),[a,i]}function AA(e,t,n,r,s,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(CA(i,a,l),0===r.length)throw new Error("params.rank must be nonzero");const u=r[0],{outSplits:c,valueSlices:h,numValues:d}=NA(i,a,e,u),p=TA(c),f=_A(n,r,s,h,d);return[p,f[0],f[1]]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FA(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=AA(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const DA={kernelName:bn,backendName:"cpu",kernelFunc:FA},OA=2147483647;function MA(e,t,n,r,s,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=_("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=l?r[0]:r[m],s=u?i[0]:i[m];if(0===s)throw new Error("Requires delta != 0");let a;if(s>0&&n<t||s<0&&n>t)a=0;else if(a=Math.ceil(Math.abs((n-t)/s)),a>OA)throw new Error(`Requires ((limit - start) / delta) <= ${OA}`);d[m+1]=d[m]+a}const p=d[h],f=_(n,p);let g=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const r=u?i[0]:i[m];for(let e=0;e<t;++e)f[g++]=n,n+=r}return[d,f]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LA(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=MA(a,r.shape,r.dtype,o,s.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],r.dtype,c);return[h,d]}const zA={kernelName:xn,backendName:"cpu",kernelFunc:LA};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var PA=Kp;class BA{constructor(e,t,n,r,s,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Xp(u),this.raggedRank=Jp(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===PA.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===PA.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case PA.VALUE_ROWIDS:return BA.getMaxWidthValueRowID(t);case PA.ROW_SPLITS:return BA.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${PA[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let i=1;i<t;++i){const t=e[i];t!==r&&(r=t,s=Math.max(i-n,s),n=i)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return UA(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;Yp(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=qp(this.raggedRank,r,t),i=s;i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let i=0;for(let a=0;a<r;++a,i+=t)s.push(i);for(let a=r;a<e;++a)s.push(-1);return b(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,i=[];for(let a=0;a<s-1;++a){const s=e[a+1]-e[a];let o=Math.min(r,s),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<s-o;++e)i.push(-1)}if(s>0&&i.length!==e[s-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,i=[];if(0===s)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++a,a<r?l+=n:l=-1);else{if(a=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case PA.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case PA.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${PA[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case PA.FIRST_DIM_SIZE:return e[0];case PA.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case PA.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${PA[t]}`)}}compute(){const e=this.rowPartitionValues[0];if(e.length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let o=r.length-2;o>=0;--o)r[o]=r[o+1]*n[o+1];const s=UA(n,!1),i=_(this.valuesDType,w(s)),a=r[0]*n[0];if(a>0){let e=this.calculateFirstParentOutputIndex(t,r[0],n[0]);for(let t=1;t<=this.raggedRank;++t){const s=this.calculateOutputIndex(t-1,e,r[t],n[t]);e=s}this.setOutput(this.raggedRank,e,i,s)}return[s,i]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,i=n;let a=r.slice();a=a.slice(e+1);const o=w(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;lo((()=>{const t=Ko(u,e),n=ll(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=s.subarray(c*o),t=i.subarray(h*o),n=(d-h)*o;WA(t,e,n)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)i.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else while(e>d){const e=i.slice(d*o);WA(e,u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function WA(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function UA(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function VA(e,t,n,r,s,i,a,o,l,u){return new BA(e,t,n,r,s,i,a,o,l,u).compute()}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GA(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=VA(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const HA={kernelName:yn,backendName:"cpu",kernelFunc:GA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jA(e,t,n,r){const s=e===t,i=e<t&&n<0,a=t<e&&n>1;if(s||i||a)return q(0,r);const o=Math.abs(Math.ceil((t-e)/n)),l=q(o,r);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KA(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:i,step:a}=n,o=jA(r,s,a,i);return t.makeTensorInfo([o.length],i,o)}const qA={kernelName:vn,backendName:"cpu",kernelFunc:KA},XA=L$(kn,(e=>1/e)),JA={kernelName:kn,backendName:"cpu",kernelFunc:XA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YA(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;D$(s,"resizeBilinear");const l=G(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(w([h,u,c,f])),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c];let y=0;const v=b[0]/x[0],k=b[1]/x[1];for(let w=0;w<h;w++)for(let e=0;e<u;e++){let t;t=a?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),i=w*l[0]+n*l[1],o=w*l[0]+s*l[1];for(let e=0;e<c;e++){let t;t=a?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),s=t-n,u=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],h=o+n*l[2],d=i+u*l[2],b=o+u*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=g[d+e],a=g[b+e],o=t+(i-t)*s,l=n+(a-n)*s,u=o+(l-o)*r;m[y++]=u}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}const ZA={kernelName:Nn,backendName:"cpu",kernelFunc:YA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QA(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;D$([i,s],"resizeBilinearGrad");const o=G(s.shape),[l,u,c,h]=s.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(i.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),i=e+r*o[1],a=e+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=i+n*o[2],g=i+r*o[2],m=a+n*o[2],b=a+r*o[2],w=d*u,k=d*s,I=l*u,S=l*s;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*S}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const eF={kernelName:Tn,backendName:"cpu",kernelFunc:QA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r;D$(s,"resizeNearestNeighbor");const l=G(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let r=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(r=Math.max(0,r));const s=e+r*l[1];for(let e=0;e<c;e++){const t=a?v*(e+.5):v*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}const nF={kernelName:Cn,backendName:"cpu",kernelFunc:tF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rF(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r;D$([i,s],"resizeNearestNeighborGrad");const o=G(s.shape),l=G(i.shape),[u,c,h,d]=s.shape,[,p,f]=i.shape,g=new Float32Array(u*c*h*d),m=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,S=2*Math.ceil(k)+2;for(let C=0;C<u;C++){const e=C*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*w),s=Math.floor(r-I/2);for(let i=0;i<h;i++){const r=n+i*o[2],u=Math.floor(i*k),b=Math.floor(u-S/2);for(let n=0;n<d;n++){let o=0;for(let r=0;r<I;r++){const u=r+s;if(u<0||u>=p)continue;const d=e+u*l[1],g=u*y,x=Math.min(c-1,a?Math.round(g):Math.floor(g));if(t===x)for(let e=0;e<S;e++){const t=e+b;if(t<0||t>=f)continue;const r=d+t*l[2],s=t*v,u=Math.min(h-1,a?Math.round(s):Math.floor(s));i===u&&(o+=m[r+n])}}g[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}const sF={kernelName:$n,backendName:"cpu",kernelFunc:rF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r;D$(s,"reverse");const a=s.shape.length,o=T(i,s.shape);if(0===a)return W$({inputs:{x:s},backend:n});const l=new bs(s.shape,s.dtype),u=n.bufferSync(s);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const aF={kernelName:Rn,backendName:"cpu",kernelFunc:iF},oF={kernelName:xr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=R(r.dtype,w(r.shape)),[u,c,h,d]=r.shape,[p,f]=ef(a,c,h),g=255,m=Math.sin(s),b=Math.cos(s),x=o.data.get(r.dataId).values;for(let v=0;v<u;v++){const e=v*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let a=0;a<d;a++){const o=[u,t,r,a],y=o[2],v=o[1];let w=(y-p)*b-(v-f)*m,k=(y-p)*m+(v-f)*b;w=Math.round(w+p),k=Math.round(k+f);let I=i;if("number"!==typeof i&&(I=3===a?g:i[a]),w>=0&&w<h&&k>=0&&k<c){const t=k*(h*d),n=w*d,r=e+t+n+a;I=x[r]}const S=e+n+s+a;l[S]=I}}}}const y=o.write(l,r.shape,r.dtype);return{dataId:y,shape:r.shape,dtype:r.dtype}}},lF=L$(_n,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),uF={kernelName:_n,backendName:"cpu",kernelFunc:lF},cF=Q$((e=>1/Math.sqrt(e))),hF=z$(An,cF),dF={kernelName:An,backendName:"cpu",kernelFunc:hF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pF(e,t,n,r,s,i,a,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return ua(n,t.dtype);const p=ua(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<i;f++){const e=[];let i=0;for(let t=0;t<a;t++){const n=h[f*a+t];e.push(n),i+=n*o[t]}if(i<0||i>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[i*s+n]+=d[f*s+n]:p.values[i*s+n]=0===t.rank?d[0]:d[f*s+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fF(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=cf(i,s,a),d=!0,p=n.bufferSync(s),f=n.bufferSync(i),g=pF(p,f,a,h,u,l,o,c,0,d);return n.makeTensorInfo(a,g.dtype,g.values)}const gF={kernelName:Fn,backendName:"cpu",kernelFunc:fF};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mF(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function bF(e,t){let n=0,r=e.length,s=0;while(n<r)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}function xF(e,t,n,r,s,i){const a=_("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)a[l+e]="left"===i?mF(n,t[e+l]):bF(n,t[e+l])}return a}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yF(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,u=xF(o,l,s.shape[0],s.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",u)}const vF={kernelName:Dn,backendName:"cpu",kernelFunc:yF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wF(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t;D$([r,s,i],"select");const a=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=Fs(s.dtype,i.dtype),h=q(w(s.shape),c);let d=0;const p=0===a||a>1||1===s.shape.length?1:w(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(s.shape,c,h)}const kF={kernelName:On,backendName:"cpu",kernelFunc:wF},IF=hf,SF=df,CF=L$(Mn,(e=>e>=0?SF*e:IF*(Math.exp(e)-1))),$F={kernelName:Mn,backendName:"cpu",kernelFunc:CF},NF=L$(Bn,(e=>e<0?-1:e>0?1:0)),TF={kernelName:Bn,backendName:"cpu",kernelFunc:NF},EF=L$(zn,(e=>Math.sin(e))),RF={kernelName:zn,backendName:"cpu",kernelFunc:EF},_F=L$(Pn,(e=>Math.sinh(e))),AF={kernelName:Pn,backendName:"cpu",kernelFunc:_F},FF=1.1920928955078125e-7,DF=Math.log(FF)+2,OF=L$(Un,(e=>{const t=e>-DF,n=e<DF,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),MF={kernelName:Un,backendName:"cpu",kernelFunc:OF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;D$([s],"spaceToBatchND");const o=w(i),l=[[0,0]];l.push(...a);for(let w=1+i.length;w<s.shape.length;++w)l.push([0,0]);const u=xA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=tf(u.shape,i,o,!1),h=nf(c.length,i.length,!1),d=rf(u.shape,i,o,!1),p={x:u},f={shape:c},g=xN({inputs:p,backend:n,attrs:f}),m={x:g},b={perm:h},x=DN({inputs:m,backend:n,attrs:b}),y={x:x},v={shape:d},k=xN({inputs:y,backend:n,attrs:v});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),k}const zF={kernelName:Hn,backendName:"cpu",kernelFunc:LF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PF(e,t,n,r,s,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(zf(o));const e=_(n,0),t=_(s,0);return[e,[0,h],t,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<o;++m){const t=e[m*h];if(t<0)throw new Error(Pf(m,t));if(t>=l)throw new Error(Bf(m,t,l));++f[t],d=d&&t>=p,p=t}let g=!0;for(let m=0;m<l;++m){const e=0===f[m];u[m]=e,g=g&&!e,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=_(n,t*h),d=_(s,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],s=p[t],a=(0===t?0:f[t-1])+s;p[t]++;for(let r=0;r<h;++r)i[a*h+r]=e[n*h+r];d[a]=r[n],c[n]=a}for(let e=0;e<l;++e){const t=p[e];if(0===t){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}}return[i,[t,h],d,u,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BF(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=PF(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const WF={kernelName:qn,backendName:"cpu",kernelFunc:BF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UF(e,t,n,r,s){const i=w(r),a=t[0],o=s.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=s[m];if(-1===e){if(-1!==c)throw new Error(Wf(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(Uf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error(Vf());const e=Math.trunc(i/u);if(u*e!==i)throw new Error(Gf(r,l));l[c]=e}const h=w(l);if(h!==i)throw new Error(Hf(r,l));const d=r.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=_(n,a*o);for(let m=0;m<a;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<o;++e)g[m*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[a,o],l]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VF(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=UF(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const GF={kernelName:Xn,backendName:"cpu",kernelFunc:VF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HF(e,t,n,r,s,i=!1,a=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0,h=c;if(h<0)throw new Error(jf());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=_(n,p);if(0===o)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(jf());let g=0,m=1,b=0,x=s[g];while(1){let t=0;if(m<o){if(t=s[m],x===t){++m;continue}if(x>=t)throw new Error(Kf())}if(x<0||x>=h)throw new Error(qf(x,h));x>b&&f.fill(a,b*u,x*u);for(let n=g;n<m;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(Xf(n,r[n],l[0]));for(let n=0;n<u;n++)f[x*u+n]+=e[t*u+n]}if(i)for(let e=0;e<u;e++)f[x*u+e]/=m-g;if(g=m,++m,b=x+1,x=t,m>o)break}return b<h&&f.fill(a,b*u,h*u),[f,d]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jF(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=HF(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}const KF={kernelName:Jn,backendName:"cpu",kernelFunc:jF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qF(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(s.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[u,c]=HF(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}const XF={kernelName:Yn,backendName:"cpu",kernelFunc:qF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JF(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=cf(i,s,o),p=!1,f=n.bufferSync(s);let g;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(a.dataId).values[0]);g=pF(f,e,o,d,c,u,l,h,t,p);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=pF(f,e,o,d,c,u,l,h,t,p);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=pF(f,e,o,d,c,u,l,h,t,p);break}case"string":{const e=n.bufferSync(i),t=ns(n.data.get(a.dataId).values[0]);g=pF(f,e,o,d,c,u,l,h,t,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}const YF={kernelName:Zn,backendName:"cpu",kernelFunc:JF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=T(a,s.shape)[0],l=Lf(s,i,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=mT({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}const QF={kernelName:jn,backendName:"cpu",kernelFunc:ZF},eD=Q$((e=>Math.sqrt(e))),tD=L$(Vn,(e=>Math.sqrt(e))),nD={kernelName:Vn,backendName:"cpu",kernelFunc:tD},rD={kernelName:er,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;D$(n,"square");const s=r.data.get(n.dataId).values,i=new Float32Array(s.length);for(let o=0;o<s.length;++o){const e=s[o];i[o]=e*e}const a=r.write(i,n.shape,n.dtype);return{dataId:a,shape:n.shape,dtype:n.dtype}}},sD=H$(((e,t)=>{const n=e-t;return n*n})),iD=dN(Qn,sD),aD={kernelName:Qn,backendName:"cpu",kernelFunc:iD},oD=L$(mr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),lD={kernelName:mr,backendName:"cpu",kernelFunc:oD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uD(e,t,n,r){const s=ua(e,t.dtype);for(let i=0;i<s.size;i++){const e=s.indexToLoc(i),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+r[t];s.set(t.get(...a),...e)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r;D$(s,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:y,end:v,strides:w}=Qa(s.shape,i,a,o,l,u,c,h,d);let k;if(g)k=xN({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||x){b(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ba(y,v,w),t=mT({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=xN({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(s),t=uD(p,e,w,y);k=n.makeTensorInfo(f,t.dtype,t.values)}return k}const hD={kernelName:tr,backendName:"cpu",kernelFunc:cD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dD{constructor(e,t,n,r,s,i){this.separator=ts(e),this.nGramWidths=t,this.leftPad=ts(n),this.rightPad=ts(r),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,i){for(let a=0;a<s;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(s-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;const p=l+u+c-1;d+=p*this.separator.length,n[r+a]=new Uint8Array(d);const f=n[r+a];let g=0;const m=e=>e.forEach((e=>f[g++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,i=_("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=s;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}const a=new Array(i[s]);for(let o=0;o<s;++o){const n=t[o];let r=i[o];if(this.nGramWidths.forEach((s=>{const i=t[o+1]-t[o],l=this.getNumNGrams(i,s);this.createNGrams(e,n,a,r,l,s),r+=l})),this.preserveShort&&r===i[o]){const s=t[o+1]-t[o];if(0===s)continue;const i=s+2*this.padWidth,l=1;this.createNGrams(e,n,a,r,l,i)}}return[a,i]}}function pD(e,t,n,r,s,i,a,o){return new dD(n,r,s,i,a,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fD(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=pD(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const gD={kernelName:nr,backendName:"cpu",kernelFunc:fD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mD(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let i=e.indexOf(s);while(-1!==i){const t=e.subarray(0,i);n&&0===t.length||r.push(t),e=e.subarray(i+1),i=e.indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(s,i);n&&0===t.length||r.push(t),s=i+1}}function bD(e,t,n){const r=e.length,s=[];let i=0,a=0;const o=new Array(r);for(let d=0;d<r;++d){const r=s.length;mD(e[d],t,n,s);const l=s.length-r;o[d]=l,i+=l,a=Math.max(a,l)}const l=_("int32",2*i),u=new Array(i),c=[r,a];let h=0;for(let d=0;d<r;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=s[h],++h;return[l,u,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xD(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=bD(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const yD={kernelName:rr,backendName:"cpu",kernelFunc:xD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vD(e,t){const n=_("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Jr(e[r]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wD(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(i.dataId).values,o=vD(a,s);return n.makeTensorInfo(i.shape,"int32",o)}const kD={kernelName:sr,backendName:"cpu",kernelFunc:wD},ID=L$(ar,(e=>Math.tan(e))),SD={kernelName:ar,backendName:"cpu",kernelFunc:ID},CD=L$(or,(e=>Math.tanh(e))),$D={kernelName:or,backendName:"cpu",kernelFunc:CD};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ND(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const r=ua(n,e.dtype);for(let s=0;s<r.values.length;++s){const t=r.indexToLoc(s),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const i=e.locToIndex(n);r.values[s]=e.values[i]}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;D$(s,"tile");const a=ND(n.bufferSync(s),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const ED={kernelName:lr,backendName:"cpu",kernelFunc:TD},RD=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function _D(e,t,n=0,r=e.length-1){while(r>n){if(r-n>600){const s=r-n+1,i=t-n+1,a=Math.log(s),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(s-o)/s)*Math.sign(i-s/2),u=Math.max(n,Math.floor(t-i*o/s+l)),c=Math.min(r,Math.floor(t+(s-i)*o/s+l));_D(e,t,u,c)}const s=e[t];let i=n,a=r;g(e,n,t),RD(e[r],s)>0&&g(e,n,r);while(i<a){g(e,i,a),i++,a--;while(RD(e[i],s)<0)i+=1;while(RD(e[a],s)>0)a-=1}0===RD(e[n],s)?g(e,n,a):(a+=1,g(e,a,r)),a<=t&&(n=a+1),t<=a&&(r=a-1)}}function AD(e,t,n,r,s){const i=t[t.length-1],[a,o]=[e.length/i,i],l=R(n,a*r),u=R("int32",a*r);for(let h=0;h<a;h++){const t=h*o,n=e.subarray(t,t+o);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(_D(i,r),i=i.slice(0,r)),s&&i.sort(RD);const a=h*r,c=l.subarray(a,a+r),d=u.subarray(a,a+r);for(let e=0;e<r;e++)c[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[ua(c,n,l),ua(c,"int32",u)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r;D$(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=AD(o,s.shape,s.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const DD={kernelName:ur,backendName:"cpu",kernelFunc:FD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OD(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=G(s.shape),x=b[0],y=b[1],v=b[2],k=G(m),I=k[0],S=k[1],C=k[2],$=R(s.dtype,w(m));$.fill(l);const N=r.data.get(s.dataId).values,T=r.data.get(i.dataId).values;for(let w=0;w<c;++w){const e=1===i.shape[0]?T:T.subarray(8*w,8*w+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let r=0;r<p;++r){let s;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const u=(e[0]*n+e[1]*t+e[2])/i,c=(e[3]*n+e[4]*t+e[5])/i,p=LD(u,d,o),f=LD(c,h,o);switch(a){case"nearest":s=VD(N,h,d,x,y,v,w,f,p,r,l);break;case"bilinear":s=GD(N,h,d,x,y,v,w,f,p,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const g=w*I+t*S+n*C+r;$[g]=s}return r.makeTensorInfo(m,s.dtype,$)}const E=r.write($,m,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}const MD={kernelName:cr,backendName:"cpu",kernelFunc:OD};function LD(e,t,n){switch(n){case"reflect":return zD(e,t);case"wrap":return PD(e,t);case"nearest":return WD(e,t);case"constant":default:return BD(e,t)}}function zD(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return p(0,n,t-1)}function PD(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return p(0,n,t-1)}function BD(e,t){return e}function WD(e,t){return p(0,e,t-1)}function UD(e,t,n,r,s,i,a,o,l,u,c){const h=a*r+o*s+l*i+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:c}function VD(e,t,n,r,s,i,a,o,l,u,c){const h=Math.round(o),d=Math.round(l);return UD(e,t,n,r,s,i,a,h,d,u,c)}function GD(e,t,n,r,s,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1,g=(f-l)*UD(e,t,n,r,s,i,a,h,d,u,c)+(l-d)*UD(e,t,n,r,s,i,a,h,f,u,c),m=(f-l)*UD(e,t,n,r,s,i,a,p,d,u,c)+(l-d)*UD(e,t,n,r,s,i,a,p,f,u,c);return(p-o)*g+(o-h)*m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HD(e,t,n,r){const s=T(t,n)[0],i=[1,n[0],1];for(let f=0;f<s;f++)i[0]*=n[f];i[1]=n[s];for(let f=s+1;f<n.length;f++)i[2]*=n[f];const a={},o=new Int32Array(n[s]),l=new bs(i,r,e),u=[],c=1===i[0]&&1===i[2];for(let f=0;f<n[s];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==a[t])o[f]=a[t];else{const e=Object.keys(a).length;a[t]=e,o[f]=e,u.push(f)}}const h=i.slice();h[1]=Object.keys(a).length;const d=new bs(h,r);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jD(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;D$(i,"unique");const a=r.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=HD(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const KD={kernelName:dr,backendName:"cpu",kernelFunc:jD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qD(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s.shape.length,o=s.shape[i],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==i&&(l[u++]=s.shape[p]);const c=new Array(a).fill(0),h=s.shape.slice();h[i]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[i]=p;const e=mT({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[p]=xN({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}const XD={kernelName:pr,backendName:"cpu",kernelFunc:qD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r;D$(s,"unsortedSegmentSum");const o=s.shape.length,l=i.shape.length,u=[],c=[],h=o-l;let d=i;for(let f=0;f<h;++f){const e=HE({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,c.push(e)}for(let f=0;f<a;++f){const e=Yr(f,"int32"),t=n.makeTensorInfo([],"int32",e),r=AE({inputs:{a:t,b:d},backend:n}),i=cN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=IE({inputs:{a:i,b:s},backend:n}),o=CE({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),c.push(t),c.push(r),c.push(i),c.push(a),c.push(o)}const p=gA({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const YD={kernelName:fr,backendName:"cpu",kernelFunc:JD},ZD=[IN,$N,TN,RN,bN,AN,LN,PN,WN,VN,HN,KN,XN,ZN,eT,aT,lT,cT,dT,wN,fT,yT,IT,CT,hN,TT,RT,iN,AT,LT,PT,WT,VT,HT,KT,XT,YT,QT,tE,rE,iE,oE,uE,hE,pE,gE,bE,xE,yE,vE,TE,B$,RE,FE,WE,GE,jE,XE,uR,hR,pR,mR,yR,wR,IR,$R,ER,AR,OR,U$,LR,OT,PR,WR,VR,G$,jR,XR,ZR,t_,r_,a_,l_,h_,p_,g_,x_,w_,I_,C_,N_,E_,__,F_,O_,z_,B_,V_,K_,SE,J_,Q_,nA,iA,lA,cA,fA,mA,xA,wA,q$,SA,DA,zA,HA,qA,lN,ZE,JA,J$,Z$,yN,ZA,eF,nF,sF,aF,oF,uF,dF,gF,vF,kF,$F,nN,TF,RF,AF,bT,H_,MF,zF,WF,GF,KF,XF,YF,QF,nD,rD,aD,lD,hD,gD,yD,kD,nR,$E,SD,$D,ED,DD,MD,ON,KD,XD,YD,dA];for(const CX of ZD)Er(CX);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const QD={},eO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function tO(e,t){QD[e]=t}function nO(e,t){if(!(e in QD)||null!=t){const n=sO(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;QD[e]=n}const n=QD[e];return null==n||n.isContextLost()?(delete QD[e],nO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),QD[e])}function rO(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function sO(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?rO(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete QD[e]}),!1),ie().getBool("SOFTWARE_WEBGL_ENABLED")&&(eO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",eO)||n.getContext("experimental-webgl",eO):n.getContext("webgl2",eO)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var iO,aO,oO;function lO(e,t){return[t,e]}function uO(e,t){return e*t}function cO(e){const t=w(e),n=Math.ceil(t/4);return S(n)}function hO(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function dO(e,t){const[n,r]=hO(e,t);return n*r*4}function pO(e,t){const n=e;let r,s,i,a,o,l,u,c,h,d;return 2===ie().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fO(e,t){const n=t();return ie().getBool("DEBUG")&&gO(e),n}function gO(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+yO(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})(iO||(iO={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(aO||(aO={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(oO||(oO={}));const mO=5.96e-8,bO=65504;function xO(e){return!!(ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||mO<Math.abs(e)&&Math.abs(e)<bO)}function yO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function vO(e,t){return UO(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function wO(e,t){const n=UO(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(fO(e,(()=>e.shaderSource(n,t))),fO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function kO(e,t){const n=UO(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(fO(e,(()=>e.shaderSource(n,t))),fO(e,(()=>e.compileShader(n))),ie().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw SO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const IO=/ERROR: [0-9]+:([0-9]+):/g;function SO(e,t){const n=IO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),i=s.length.toString().length+2,a=s.map(((e,t)=>C((t+1).toString(),i)+e));let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,r-1),u=a.slice(r-1,r),c=a.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${C(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function CO(e){return UO(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function $O(e,t){if(fO(e,(()=>e.linkProgram(t))),!ie().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function NO(e,t){if(fO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function TO(e,t){const n=UO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),fO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function EO(e,t){const n=UO(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return fO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),fO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function RO(e){return UO(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function _O(e,t){const n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const r=`[${e}x${t}]`,s=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+s+".")}}function AO(e){return UO(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function FO(e,t,n,r,s,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),fO(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,i,a))),fO(e,(()=>e.enableVertexAttribArray(o))),!0)}function DO(e,t,n){VO(e,n),fO(e,(()=>e.activeTexture(e.TEXTURE0+n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function OO(e,t,n){return UO(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function MO(e,t,n){return e.getUniformLocation(t,n)}function LO(e,t,n,r){fO(e,(()=>DO(e,t,r))),fO(e,(()=>e.uniform1i(n,r)))}function zO(e,t,n){fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),fO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function PO(e,t){fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),fO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function BO(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+WO(e,t))}function WO(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function UO(e,t,n){const r=fO(e,(()=>t()));if(null==r)throw new Error(n);return r}function VO(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function GO(e,t=2){return w(e.slice(0,e.length-t))}function HO(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function jO(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[GO(e),...HO(e)]),t}function KO(e,t=!1){let n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=ie().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&ie().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,e=e.map(((t,n)=>n>=e.length-2?f(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=E(e);e=t.newShape}let s=w(e),i=null;e.length<=1&&s<=n?i=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>r&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=GO(e);let n=2,r=2;e.length&&([n,r]=HO(e)),s=t*(n/2)*(r/2),i=S(s).map((e=>2*e))}else i=S(s);return i}function qO(e){return e%2===0}function XO(e,t){if(e=e.slice(-2),t=t.slice(-2),k(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(qO(n)&&qO(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&qO(e[0])&&qO(t[0])}let JO,YO;function ZO(e){if(null==JO){const t=nO(e);JO=t.getParameter(t.MAX_TEXTURE_SIZE)}return JO}function QO(e){if(null==YO){const t=nO(e);YO=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,YO)}function eM(e){if(0===e)return 0;let t;const n=nO(e);return t=tM(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:tM(n,"EXT_disjoint_timer_query")?1:0,t}function tM(e,t){const n=e.getExtension(t);return null!=n}function nM(e){try{const t=nO(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function rM(e){if(0===e)return!1;const t=nO(e);if(1===e){if(!tM(t,"OES_texture_float"))return!1}else if(!tM(t,"EXT_color_buffer_float"))return!1;const n=iM(t);return n}function sM(e){if(0===e)return!1;const t=nO(e);if(1!==e){if(tM(t,"EXT_color_buffer_float"))return iM(t);const e="EXT_color_buffer_half_float";if(tM(t,e)){const n=t.getExtension(e);return aM(t,n)}return!1}if(!tM(t,"OES_texture_float"))return!1;if(!tM(t,"WEBGL_color_buffer_float"))return!1;const n=iM(t);return n}function iM(e){const t=pO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,s,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),a}function aM(e,t){const n=pO(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const s=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,s,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),o}function oM(e){if(2!==e)return!1;const t=nO(e),n=null!=t.fenceSync;return n}function lM(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&b("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const uM=ie();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cM(){let e,t,n,r,s,i,a,o,l,u;return 2===ie().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",i="outputColor",a="out vec4 outputColor;",o=ie().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hM(e,t,n="index"){const r=G(t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / ${t}`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`;return`${i}; ${a};`})).join("")}function dM(e,t,n="index"){const r=G(t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${a};`})).join("")}function pM(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let i=n-3;i>=0;--i)s[i]=`(${s[i+1]} * ${r[i+1]})`;return s}function fM(e,t,n="index"){const r=e.map(((e,t)=>t)),s=pM(r,t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / ${s[r]}`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`;return`${i}; ${a};`})).join("")}function gM(e){const t=G(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function mM(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}uM.registerFlag("HAS_WEBGL",(()=>uM.getNumber("WEBGL_VERSION")>0)),uM.registerFlag("WEBGL_VERSION",(()=>nM(2)?2:nM(1)?1:0)),uM.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),uM.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===uM.get("WEBGL_VERSION"))),uM.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),uM.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),uM.registerFlag("WEBGL_PACK",(()=>uM.getBool("HAS_WEBGL"))),uM.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_CLIP",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_PACK_REDUCE",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_LAZILY_UNPACK",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_CONV_IM2COL",(()=>uM.getBool("WEBGL_PACK"))),uM.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>ZO(uM.getNumber("WEBGL_VERSION")))),uM.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>QO(uM.getNumber("WEBGL_VERSION")))),uM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=uM.getNumber("WEBGL_VERSION");return 0===e?0:eM(e)})),uM.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>uM.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Xs())),uM.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>rM(uM.getNumber("WEBGL_VERSION")))),uM.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!uM.getBool("WEBGL_FORCE_F16_TEXTURES")&&uM.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),uM.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>sM(uM.getNumber("WEBGL_VERSION")))),uM.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>oM(uM.getNumber("WEBGL_VERSION")))),uM.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>{const e=uM.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0})),uM.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),uM.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Xs()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),uM.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),uM.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),uM.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),uM.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),uM.registerFlag("WEBGL_EXP_CONV",(()=>!1)),uM.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>uM.getBool("IS_TEST"))),uM.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),uM.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),uM.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));const bM="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:xM}=i;function yM(e,t,n){const r=[];if(e.forEach((e=>{const t=w(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=oL(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break;default:break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),i=e.map((e=>kM(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=cM(),l=CM(o);let u,c,h=TM(o);t.isPacked?(u=IM(t.logicalShape,a,n.enableShapeUniforms),c=NM(o)):(u=SM(t.logicalShape,a,n.enableShapeUniforms),c=$M(o)),n.packedInputs&&(h+=AM);const d=[h,l,c,s,u,i,n.userCode].join("\n");return d}function vM(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return jM(e,t);case 1:return qM(e,t);case 2:return JM(e,t);case 3:return ZM(e,t);case 4:return eL(e,t);case 5:return tL(e);case 6:return nL(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function wM(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return HM(e);case 1:return KM(e,t);case 2:return XM(e,t);case 3:return YM(e,t);default:return QM(e,t)}}function kM(e,t,n=!1,r){let s="";s+=n?wM(e,r):vM(e,r);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(s+=n?sL(e,t):iL(e,t)),s}function IM(e,t,n){switch(e.length){case 0:return FM();case 1:return DM(e,t,n);case 2:return UM(e,t,n);case 3:return MM(e,t,n);default:return zM(e,t,n)}}function SM(e,t,n){switch(e.length){case 0:return FM();case 1:return OM(e,t,n);case 2:return VM(e,t,n);case 3:return LM(e,t,n);case 4:return PM(e,t,n);case 5:return BM(e,t);case 6:return WM(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function CM(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function $M(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function NM(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function TM(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${EM}\n    ${RM}\n    ${_M}\n  `;return t}const EM="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",RM="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_M="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",AM="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function FM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function DM(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}function OM(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function MM(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),i=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function LM(e,t,n){if(n){const t=dM(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const r=hM(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}function zM(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),i=s*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)a*=e[e.length-u-1],o=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function PM(e,t,n){if(n){const t=dM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=hM(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}function BM(e,t){const n=hM(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function WM(e,t){const n=hM(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function UM(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function VM(e,t,n){return k(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function GM(e){return`offset${e}`}function HM(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=cM();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}function jM(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,i]=e.shapeInfo.texShape;if(1===s&&1===i)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=GM(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}function KM(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,i=cM();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}function qM(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${rL(e)}\n      }\n    `;const s=e.shapeInfo.texShape,i=s[0],a=s[1];if(1===a&&1===i)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=GM(n);return 1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function XM(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=cM();if(null!=i&&k(n,i))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}function JM(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape;if(null!=i&&k(n,i)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=i[0],n=i[1];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=E(n),l=a;if(l.length<n.length){const n=lL(e,l),r=["row","col"];return`\n      ${vM(n,t)}\n      float ${s}(int row, int col) {\n        return ${s}(${uL(r,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${rL(e)}\n      }\n    `;const u=i[0],c=i[1],h=GM(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}function YM(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const r=n.slice(1),i=[1,2],a=lL(e,r),o=["b","row","col"];return`\n        ${wM(a,t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${uL(o,i)});\n        }\n      `}const o=cM();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}function ZM(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=E(n),u=o;if(u.length<n.length){const n=lL(e,u),r=["row","col","depth"];return`\n        ${vM(n,t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${uL(r,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${rL(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=GM(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}function QM(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=cM();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=i[a-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function eL(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=E(n);if(l.length<n.length){const n=lL(e,l),r=["row","col","depth","depth2"];return`\n      ${vM(n,t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${uL(r,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${rL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=GM(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}function tL(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],i=t[3]*s,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=E(t);if(l.length<t.length){const t=lL(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${vM(t)}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${uL(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${s})) +\n          depth3;\n        ${rL(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=GM(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${s} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function nL(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:i}=E(t);if(s.length<t.length){const t=lL(e,s),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${vM(t)}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${uL(n,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${rL(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=GM(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function rL(e){const t=e.name,n=w(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function sL(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=xM(e.shapeInfo.logicalShape,t.logicalShape),l=aL(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=w(e.shapeInfo.logicalShape),g=1===f,m=w(t.logicalShape),b=1===m;if(1!==i||g||b){if(g&&!b)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}function iL(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&k(a,i))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=aL(l),c=xM(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}function aL(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function oL(e,t,n){const{newShape:r,keptDims:s}=E(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):r,l=!e&&i>1&&!k(t,n)&&r.length<i||a,u=l?o:t;return{useSqueezeShape:l,uniformShape:u,keptDims:s}}function lL(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function uL(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cL(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),a={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=yM(s,a,t),l=kO(e.gl,o),u=e.createProgram(l);return ie().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},hL(e,t,u))}function hL(e,t,n){const r={},s={},i={},a=[];let o,l,u,c=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===ie().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const d=!1;for(let p=0;p<t.variableNames.length;p++){const a=t.variableNames[p];r[a]=e.getUniformLocation(n,a,d),r[`offset${a}`]=e.getUniformLocation(n,`offset${a}`,d),t.enableShapeUniforms&&(s[`${a}Shape`]=e.getUniformLocation(n,`${a}Shape`,d),i[`${a}TexShape`]=e.getUniformLocation(n,`${a}TexShape`,d))}return t.enableShapeUniforms&&(o=e.getUniformLocation(n,"outShape",d),u=e.getUniformLocation(n,"outShapeStrides",d),l=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{a[r]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:r,customUniformLocations:a,infLoc:c,nanLoc:h,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:u,outTexShapeLocation:l}}function dL(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],i=s.shape;if(!k(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&s.isUniform)return;const a=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!k(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function pL(e,t,n,r,s){t.program.enableShapeUniforms||(dL(t.inShapeInfos,n),dL([t.outShapeInfo],[r]));const i=r.texData.texture,a=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),1===ie().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],i=t.uniformLocations[s],a=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=oL(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r));break;default:break}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=i)if(n.isUniform)if(w(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=a&&e.gl.uniform1i(a,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,i,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break;default:break}if(t.outShapeStridesLocation){const n=G(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const i=t.customUniformLocations[r],a=s[r];if("float"===n.type)e.gl.uniform1fv(i,a);else if("vec2"===n.type)e.gl.uniform2fv(i,a);else if("vec3"===n.type)e.gl.uniform3fv(i,a);else if("vec4"===n.type)e.gl.uniform4fv(i,a);else if("int"===n.type)e.gl.uniform1iv(i,a);else if("ivec2"===n.type)e.gl.uniform2iv(i,a);else if("ivec3"===n.type)e.gl.uniform3iv(i,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(i,a)}})),e.executeProgram()}function fL(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=oL(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=G(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&k(t.shape,i),f=1===w(t.shape),g=Fa(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&k(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;r+=`${d}_${m}_${a?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let i=e.constructor.name;return i+="_"+r+"_"+s+`${ie().getNumber("WEBGL_VERSION")}`,i}function gL(e){return ie().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=iO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cM();this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?dM(["r","c","d"],e):hM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=iO.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=cM();this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?dM(["r","c","d"],e):hM(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xL{constructor(e){this.variableNames=["A"],this.outTexUsage=aO.DOWNLOAD;const t=cM();this.outputShape=e,this.userCode=`\n      ${bM}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aO.DOWNLOAD;const t=cM();this.outputShape=e,this.userCode=`\n      ${bM}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vL={R:0,G:1,B:2,A:3};class wL{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=cM();this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){const e=n[a];i+=`\n          if(offset == ${a}) {\n            result = values[${vL[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?mM():gM(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${i}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kL{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=cM();this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){const s=2*i+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?mM():gM(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IL(e){const t=cM(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return wO(e,n)}function SL(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return TO(e,t)}function CL(e){const t=new Uint16Array([0,1,2,2,1,3]);return EO(e,t)}function $L(e,t,n,r,s,i){_O(t,n);const a=RO(e),o=e.TEXTURE_2D;return fO(e,(()=>e.bindTexture(o,a))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),fO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ie().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texImage2D(o,0,r,t,n,0,s,i,null))):fO(e,(()=>e.texStorage2D(o,1,r,t,n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function NL(e){return e.internalFormatFloat}function TL(e,t,n,r){const[s,i]=lO(t,n);return $L(e,s,i,NL(r),r.textureFormatFloat,e.FLOAT)}function EL(e){return e.internalFormatHalfFloat}function RL(e,t,n,r){const[s,i]=lO(t,n);return $L(e,s,i,EL(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function _L(e){return e.downloadTextureFormat}function AL(e,t,n,r){const[s,i]=lO(t,n);return $L(e,s,i,_L(r),e.RGBA,e.UNSIGNED_BYTE)}function FL(e){return e.internalFormatPackedFloat}function DL(e,t,n,r){const[s,i]=hO(t,n);return $L(e,s,i,FL(r),e.RGBA,e.FLOAT)}function OL(e){return e.internalFormatPackedHalfFloat}function ML(e,t,n,r){const[s,i]=hO(t,n);return $L(e,s,i,OL(r),e.RGBA,r.textureTypeHalfFloat)}function LL(e,t,n){const r=0,s=12,i=20;fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));const a=FO(e,t,"clipSpacePos",n,3,i,r);return a&&FO(e,t,"uv",n,2,i,s)}function zL(e,t,n,r,s,i){let a,o,l;fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(a=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*r*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(s),2===ie().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,a))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,a))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function PL(e,t,n){fO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ie().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ie().getNumber("WEBGL_VERSION")?fO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):fO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),fO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function BL(e,t,n,r){const s=e.createBuffer();fO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const i=4,a=4,o=i*a*t*n;return fO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),fO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),fO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}function WL(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}function UL(e,t,n,r){const[s,i]=lO(t,n),a=4,o=new Uint8Array(uO(t*n,a));return fO(e,(()=>e.readPixels(0,0,s,i,r.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function VL(e,t,n,r,s,i,a,o){const l=e,u=new Float32Array(dO(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function GL(e,t,n){const r=new Float32Array(t*n*4);return fO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HL{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=ie().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,tO(t,e)):this.gl=nO(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ie().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=vO(this.gl,e),tM(this.gl,t))this.textureHalfFloatExtension=vO(this.gl,t);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tM(this.gl,r))this.colorBufferHalfFloatExtension=vO(this.gl,r);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tM(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!tM(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=SL(this.gl),this.indexBuffer=CL(this.gl),this.framebuffer=AO(this.gl),this.textureConfig=pO(this.gl,this.textureHalfFloatExtension)}get debug(){return ie().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;fO(e,(()=>e.finish())),fO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),fO(e,(()=>e.deleteFramebuffer(this.framebuffer))),fO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),fO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),fO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),TL(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),RL(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),AL(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),PL(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),zL(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),ML(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),DL(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(PO(this.gl,this.framebuffer),this.outputTexture=null),fO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>UL(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,i){return VL(this.gl,e,t,n,r,s,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return WL(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=BL(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ie().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>GL(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=IL(t));const n=CO(t);return fO(t,(()=>t.attachShader(n,this.vertexShader))),fO(t,(()=>t.attachShader(n,e))),$O(t,n),this.debug&&NO(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=LL(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&fO(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&NO(this.gl,this.program),fO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?OO(this.gl,e,t):MO(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),fO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),LO(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=hO(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&NO(this.gl,this.program),BO(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),fO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),fO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=vO(this.gl,2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $((()=>this.disposed||this.isQueryAvailable(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=jL(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ie().platform&&(n=ie().platform.setTimeoutCustom.bind(ie().platform)),$((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),zO(this.gl,e,this.framebuffer),this.debug&&BO(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(zO(this.gl,this.outputTexture,this.framebuffer),this.debug&&BO(this.gl)):PO(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;zO(r,e,this.framebuffer),this.debug&&BO(r),this.outputTexture=e,fO(r,(()=>r.viewport(0,0,t,n))),fO(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),fO(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function jL(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:KL,bincountImpl:qL,bincountReduceImpl:XL,castImpl:JL,ceilImpl:YL,concatImpl:ZL,equalImpl:QL,expImpl:ez,expm1Impl:tz,floorImpl:nz,gatherNdImpl:rz,gatherV2Impl:sz,greaterImpl:iz,greaterEqualImpl:az,lessImpl:oz,lessEqualImpl:lz,linSpaceImpl:uz,logImpl:cz,maxImpl:hz,maximumImpl:dz,minimumImpl:pz,multiplyImpl:fz,negImpl:gz,notEqualImpl:mz,prodImpl:bz,raggedGatherImpl:xz,raggedRangeImpl:yz,raggedTensorToTensorImpl:vz,rangeImpl:wz,rsqrtImpl:kz,scatterImpl:Iz,sigmoidImpl:Sz,simpleAbsImpl:Cz,sliceImpl:$z,sparseFillEmptyRowsImpl:Nz,sparseReshapeImpl:Tz,sparseSegmentReductionImpl:Ez,sqrtImpl:Rz,stridedSliceImpl:_z,stringNGramsImpl:Az,stringSplitImpl:Fz,stringToHashBucketFastImpl:Dz,subImpl:Oz,tileImpl:Mz,topKImpl:Lz,transposeImpl:zz,uniqueImpl:Pz}=a;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bz(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Wz(e,t){return 1===t?[e]:Bz(e,t)}function Uz(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Vz{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gL(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Wz("rc",this.rank),t=aL(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Gz{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length);let n="";for(let r=0;r<4;r++){let e="thisRC = rc;";r%2===1&&(e+="thisRC.z += 1;"),r>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${r}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${r>0?"}":""}\n      `}this.userCode=`\n      ${Hz(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?mM():gM(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function Hz(e,t){const n=t?fM(["r","c","d"],"inputShape"):hM(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jz{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Yz(t,n),s=Zz(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const i=qz(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let a;return r===oO.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===oO.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===oO.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===oO.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===oO.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Yz(n,r),i=Zz(t,s,r);i in this.freeTextures||(this.freeTextures[i]=[]);const a=qz(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=ie().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Kz(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function qz(e,t,n,r,s){const i=Xz(t,r);let a;if(s){const[t,n]=hO(e[0],e[1]);a=t*n}else{const[t,n]=lO(e[0],e[1]);a=t*n}const o=Kz(n,i);return a*o}function Xz(e,t){switch(e){case oO.PACKED_2X2_FLOAT32:return FL(t);case oO.PACKED_2X2_FLOAT16:return OL(t);case oO.UNPACKED_FLOAT32:return NL(t);case oO.UNPACKED_FLOAT16:return EL(t);case oO.PACKED_4X1_UNSIGNED_BYTE:return _L(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function Jz(e){return ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?oO.PACKED_2X2_FLOAT32:oO.UNPACKED_FLOAT32:e?oO.PACKED_2X2_FLOAT16:oO.UNPACKED_FLOAT16}function Yz(e,t){if(e===aO.UPLOAD)return oO.PACKED_2X2_FLOAT32;if(e===aO.RENDER||null==e)return Jz(t);if(e===aO.DOWNLOAD||e===aO.PIXELS)return oO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Zz(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Qz{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const eP="if (isnan(x)) return x;",tP="return x;",nP="return abs(x);";const rP="return (x >= 0.0) ? x : (exp(x) - 1.0);",sP=eP+"\n  return (x < 0.0) ? 0.0 : x;\n",iP=eP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",aP="return x;",oP="return 1.0 / (1.0 + exp(-1.0 * x));",lP="return x;",uP="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",cP="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hP="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",dP="return 1.0 / (1.0 + exp(-1.0 * x));";class pP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length);const t=e.length,n=Wz("rc",t),r=aL(t),s=Uz(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gP=tg,mP=1e-7,bP=1e-4,xP={};function yP(e){return e in xP||(xP[e]={}),xP[e]}const vP=ie().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),wP=600;function kP(){return null==ie().global.screen?1024:ie().global.screen.height*ie().global.screen.width*window.devicePixelRatio*wP/1024/1024}class IP extends c{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ie().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof HL)t=e;else{const n=nO(ie().getNumber("WEBGL_VERSION"),e);t=new HL(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=nO(ie().getNumber("WEBGL_VERSION"));t=new HL(e),this.binaryCache=yP(ie().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new jz(this.gpgpu),this.numMBBeforeWarning=kP(),this.texData=new u(this,ao())}nextDataId(){return IP.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=jO(t),u=new wL(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((ie().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ie().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:aO.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,r,s){if(ie().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:aO.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new pP(a,aP):new Qz(a,aP);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=es()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);c=yf(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=es()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=s){let t;t=o?new pP(r,aP):new Qz(r,aP);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(ie().getBool("DEBUG")&&!ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ie().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ie().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...cO(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),t=e[0],n=e[1];u=yf(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=w(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;fO(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ao().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new pP(s,aP):new Qz(s,aP);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:a}],a),i=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),i}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=ao().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>ns(e)));return ua(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return ua(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!xO(n)){if(ie().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=w(t);if(ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...cO(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),i}const i=ie().getBool("WEBGL_PACK")&&!0===r,a=i?jO(t):t,o=i?new yL(a):new xL(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=v(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=v(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);a["kernelMs"]=m(e),a["getExtraProfileInfo"]=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:es(),endMs:null}}endTimer(e){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=es(),e)}async getQueryTime(e){if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=vP){return ie().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&w(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){kr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return gP(e.shape,t)}packedUnaryOp(e,t,n){const r=new pP(e.shape,t),s=this.compileAndRun(r,[e],n);return ao().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Cz(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ie().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,nP,e.dtype);const t=new Qz(e.shape,nP),n=this.compileAndRun(t,[e]);return ao().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&z(n[0])){const s=n.map((e=>ts(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return ao().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new fP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Vz(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[GO(e.shape),...HO(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[GO(t),...HO(t)],i=new Gz(s,n),a=!0,o=[n],l=this.runWebGLProgram(i,[r],e.dtype,o,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:i}=n;if(null!=t){const e=w(s),n=t[0]*t[1]*4;b(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const a=jO(s);let o;o=r?new bL(a):new mL(a);const l=!0,u=[null!=t?t:cO(a)],c=this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,u,l,t);return{dtype:i,shape:s,dataId:c.dataId}}runWebGLProgram(e,t,n,r,s=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===iO.DENSE){const t=null!=i?i:cO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===w(a.shape))return o.values=R(a.dtype,0),a;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&w(t.shape)<=ie().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!XO(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=fL(e,u,c),d=this.getAndSaveBinary(h,(()=>cL(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ie().get("ENGINE_COMPILE_ONLY")||pL(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=ie().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=es();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ie().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,r,s=!1){n=n||t[0].dtype;const i=this.runWebGLProgram(e,t,n,r,s);return i}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ie().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=lo((()=>{if(!ie().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ie().getBool("DEBUG");ie().set("DEBUG",!1);const t=this.abs(mo(1e-8)).dataSync()[0];if(ie().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?mP:bP}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=es());let c=t.texShape;if(null==c&&(c=KO(n,o),t.texShape=c),null!=s){const e=jO(n);let i,a=c[1],h=c[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([a,h]=hO(c[0],c[1])),i=o?new kL(e,d):new wL(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,r),g=this.texData.get(f.dataId);g.usage=d?aO.PIXELS:aO.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,s);const m=[[h,a]],b=!0,x=this.runWebGLProgram(i,[f],r,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,ie().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=es()-u)}else{const e=this.acquireTexture(c,a,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=SP(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*M(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Gp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw SO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,inShapesLocations:i,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=hL(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.inShapesLocations=i,e.inTexShapesLocations=a,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromTexture(e,t,n){const{texture:r,height:s,width:i,channels:a}=e,o=ao().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,i,a);return ao().makeTensorFromDataId(l,t,n,o)}}function SP(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}IP.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Js()&&ho("webgl",(()=>new IP),2);const CP="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class $P{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Oa(t,n),this.enableShapeUniforms=gL(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const NP="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class TP{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Oa(t,n);const s=this.outputShape.length;this.enableShapeUniforms=gL(s);let i="";if(r)if(0===s||1===w(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=aL(s);if(i=`\n          ${e} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Wz("coords",s);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EP(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const RP={kernelName:$t,backendName:"webgl",kernelFunc:EP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _P(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,i=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(i.dataId),o=EP({inputs:{x:r},backend:n}),l=EP({inputs:{x:s},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const AP={kernelName:ze,backendName:"webgl",kernelFunc:_P},FP="return (a < 0.) ? b * a : a;",DP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function OP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:i}=r,a=n.makeTensorInfo([],"float32",Yr(i,"float32")),o=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TP(DP,s.shape,a.shape):new $P(FP,s.shape,a.shape),l=n.runWebGLProgram(o,[s,a],"float32");return n.disposeIntermediateTensorInfo(a),l}const MP={kernelName:At,backendName:"webgl",kernelFunc:OP},LP="return (a < 0.) ? b * a : a;",zP="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function PP(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TP(zP,r.shape,s.shape):new $P(LP,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],"float32")}const BP={kernelName:gn,backendName:"webgl",kernelFunc:PP},WP="if (isnan(x)) return x;";function UP({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:i})=>{const{x:a}=s,o=i,l=r||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}const u=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=u?new pP(a.shape,t):new Qz(a.shape,e),o.runWebGLProgram(c,[a],l)}}function VP({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:r.dataId,dtype:r.dtype,shape:u.shape},a=new $P(e,l.shape,u.shape);return c.runWebGLProgram(a,[s,i],Fs(n.dtype,r.dtype))})),i=_P({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),i}const h=i||Fs(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Qf(e):e,r="string"===l.dtype?Qf(t):t,[i,a]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(a,h),d=c.texData.get(o.dataId);return d.values=i,o}const d=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=d?new TP(t,l.shape,u.shape,n):new $P(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function GP(e,t=!1){if("linear"===e)return t?lP:tP;if("relu"===e)return t?cP:sP;if("elu"===e)return t?uP:rP;if("relu6"===e)return t?hP:iP;if("prelu"===e)return t?zP:LP;if("leakyrelu"===e)return t?DP:FP;if("sigmoid"===e)return t?dP:oP;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HP{constructor(e,t,n,r=!1,s=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gL(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${x};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const jP={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class KP{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Oa(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const qP="return a * b;";function XP(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,i=Fs(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),i=new KP(jP.REAL,r.shape,s.shape),a=new KP(jP.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=_P({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[a,o]=fz(r.shape,s.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i),u=n.texData.get(l.dataId);return u.values=a,l}let a;return a=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TP(qP,r.shape,s.shape):new $P(qP,r.shape,s.shape),n.runWebGLProgram(a,[r,s],i)}const JP={kernelName:rn,backendName:"webgl",kernelFunc:XP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YP(e,t,n){const r=[GO(e.shape),...HO(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},i=[GO(t),...HO(t)],a=new Gz(i,r),o=!0,l=[r],u=n.runWebGLProgram(a,[s],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:i}=r,a=n,o=w(s.shape),l=N(i,o),u=w(l);b(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(s.dataId);return!c.isPacked||XO(s.shape,l)||null!==c.texture&&XO(c.shape,l)?(a.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):YP(s,l,a)}const QP={kernelName:Sn,backendName:"webgl",kernelFunc:ZP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eB{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${I(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tB{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:i}=e;this.outputShape=[r,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nB(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],r=Qp(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function rB(e,t,n,r){const s=nB(e.shape);let i=e;for(let a=0;a<s.length;a++){const{inSize:o,windowSize:l,outSize:u}=s[a];let c,h;c="mean"===n?0===a?new eB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new eB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new tB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const r=aL(this.rank),s=iB(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}function iB(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=aL(this.rank),s=Bz("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=s[u];const a=`vec2(${i.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oB(e,t,n){const r=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new aB(e.shape,t):new sB(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lB(e,t,n,r){const s=t,i=e.shape.length,a=T(s,e.shape);let o=a;const l=Ku(o,i),u=null!=l;let c=e;u&&(c=oB(e,l,r),o=Xu(o.length,i)),ju("sum",o,i);const[h,d]=Gu(c.shape,o);let p=h;n&&(p=Hu(h,a));const f=w(d),g=w(e.shape),m=g/f,b=ZP({inputs:{x:c},attrs:{shape:[m,f]},backend:r}),x=Ds(e.dtype),y=rB(b,x,"sum",r),v=ZP({inputs:{x:y},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(y),u&&r.disposeIntermediateTensorInfo(c),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r;return lB(s,i,a,n)}const cB={kernelName:Gn,backendName:"webgl",kernelFunc:uB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:i}=r,a=n,o=s.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=s.shape[i[c]];let u;if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId),t=e.values,n=zz(t,s.shape,s.dtype,i,l);u=a.makeTensorInfo(l,s.dtype);const r=a.texData.get(u.dataId);r.values=n}else u=oB(s,i,a);return u}const dB={kernelName:hr,backendName:"webgl",kernelFunc:hB},pB=1e3;function fB({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),x=w(g),y=w(m),v=Oa(e.shape.slice(0,-2),t.shape.slice(0,-2)),k=v.concat([p,f]);b(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const I=n?[x,h,p]:[x,p,h],S=r?[y,f,d]:[y,d,f],C=ZP({inputs:{x:e},backend:s,attrs:{shape:I}}),$=ZP({inputs:{x:t},backend:s,attrs:{shape:S}}),N=[C,$],T=Math.max(x,y),E=n?C.shape[1]:C.shape[2],R=null!=i,_=null!=a,A="leakyrelu"===l,F=null!=l?GP(l,!0):null,D=R||_||A||null!=F;let O;if((1===p||1===f)&&E>pB&&!1===D){let e=C,t=$;n&&(e=hB({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=hB({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),N.push(t));const i=1!==f,a=1===f;let o=e;i&&(o=ZP({inputs:{x:e},backend:s,attrs:{shape:[T,E,1]}}),N.push(o));const l=1===f?2:1;let u=t;a&&(u=ZP({inputs:{x:t},backend:s,attrs:{shape:[T,1,E]}}),N.push(u));const c=XP({inputs:{a:o,b:u},backend:s});O=uB({inputs:{x:c},backend:s,attrs:{axis:l,keepDims:!0}}),N.push(c)}else{const l=Fs(e.dtype,t.dtype),u=new HP(I,S,[T,p,f],n,r,R,F,_,A),c=[C,$];if(null!=i&&c.push(i),_&&c.push(a),A){const e=s.makeTensorInfo([],"float32",Yr(o,"float32"));c.push(e),N.push(e)}O=s.runWebGLProgram(u,c,l)}const M=ZP({inputs:{x:O},backend:s,attrs:{shape:k}});N.push(O);for(const b of N)s.disposeIntermediateTensorInfo(b);return M}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gB(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return fB({a:s,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const mB={kernelName:yr,backendName:"webgl",kernelFunc:gB},bB="return abs(x);";function xB(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Cz(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pP(r.shape,bB):new Qz(r.shape,bB),n.runWebGLProgram(s,[r],r.dtype)}const yB={kernelName:de,backendName:"webgl",kernelFunc:xB},vB=eP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",wB=UP({opSnippet:vB}),kB={kernelName:pe,backendName:"webgl",kernelFunc:wB},IB=eP+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",SB=UP({opSnippet:IB}),CB={kernelName:fe,backendName:"webgl",kernelFunc:SB},$B="return a + b;",NB=VP({opSnippet:$B,packedOpSnippet:$B,supportsComplex:!0,cpuKernelImpl:KL}),TB={kernelName:ge,backendName:"webgl",kernelFunc:NB};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EB{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RB{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _B(e){const{inputs:t,backend:n}=e,r=t;if(1===r.length)return EP({inputs:{x:r[0]},backend:n});if(r.length>ie().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(r.length/2),t=_B({inputs:r.slice(0,e),backend:n}),s=_B({inputs:r.slice(e),backend:n});return _B({inputs:[t,s],backend:n})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>Fs(e,t))),i=r.map((e=>e.shape)),a=ie().getBool("WEBGL_PACK"),o=a?new RB(r[0].shape,i):new EB(r[0].shape,i);return n.runWebGLProgram(o,r,s)}const AB={kernelName:me,backendName:"webgl",kernelFunc:_B};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=T(i,s.shape);let u=l;const c=Ku(u,o);let h=s;null!=c&&(h=hB({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Xu(u.length,o)),ju("all",u,o);const[d,p]=Gu(h.shape,u),f=w(p),g=ZP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=rB(g,g.dtype,"all",n);let b;if(a){const e=Hu(d,l);b=ZP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=ZP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const DB={kernelName:be,backendName:"webgl",kernelFunc:FB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=T(i,s.shape);let u=l;const c=Ku(u,o);let h=s;null!=c&&(h=hB({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Xu(u.length,o)),ju("any",u,o);const[d,p]=Gu(h.shape,u),f=w(p),g=ZP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=rB(g,g.dtype,"any",n);let b;if(a){const e=Hu(d,l);b=ZP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=ZP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const MB={kernelName:xe,backendName:"webgl",kernelFunc:OB};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LB{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zB{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,b(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],i=Math.ceil(s/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=aL(o),u=Wz("coords",o);let c,h;if(1===i){h=o+1;const e=aL(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=Wz("sourceLocR",h-1).concat("inIdx.r"),m=Wz("sourceLocG",h-1).concat("inIdx.g"),x=Wz("sourceLocB",h-1).concat("inIdx.b"),y=Wz("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${x.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PB(e,t,n,r=null){let s=t.shape[0],i=t.shape[1];null!=r&&(s=r.shape[0],i=r.shape[1]);const a=Qp(i),o={windowSize:a,inSize:i,batchSize:s,outSize:Math.ceil(i/a)},l=new LB(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=PB(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function BB(e,t,n,r=null){const s=null!=r?r.shape:t.shape,i=s[s.length-1],a=Qp(i),o=new zB(s,a,n,null==r),l=null==r?[t]:[t,r],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const r=BB(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function WB(e,t,n,r){const s=[n];if(ju("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!ie().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId),a=null!==i&&i.isPacked;let o=t;a&&(o=e.unpackTensor(t),n.push(o));const[l,u]=Gu(o.shape,s),c=w(u),h=ZP({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=PB(e,h,r);n.push(d);const p=ZP({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return BB(e,t,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=T(i,s.shape);const o=Ku(a,s.shape.length);let l=s;const u=[];null!=o&&(l=hB({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Xu(a.length,l.shape.length)),ju("argMax",[a[0]],l.shape.length);const c=WB(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const VB={kernelName:ye,backendName:"webgl",kernelFunc:UB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i}=r;let a=T(i,s.shape);const o=Ku(a,s.shape.length);let l=s;const u=[];null!=o&&(l=hB({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),a=Xu(a.length,l.shape.length)),ju("argMin",[a[0]],l.shape.length);const c=WB(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const HB={kernelName:ve,backendName:"webgl",kernelFunc:GB},jB=eP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",KB=UP({opSnippet:jB}),qB={kernelName:we,backendName:"webgl",kernelFunc:KB},XB=eP+"return log(x + sqrt(x * x + 1.0));",JB=UP({opSnippet:XB}),YB={kernelName:ke,backendName:"webgl",kernelFunc:JB},ZB=eP+"\n  return atan(x);\n",QB=UP({opSnippet:ZB}),eW={kernelName:Ie,backendName:"webgl",kernelFunc:QB},tW=CP+"\n  return atan(a, b);\n",nW="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NP+"\n  return result;\n",rW=VP({opSnippet:tW,packedOpSnippet:nW}),sW={kernelName:Ce,backendName:"webgl",kernelFunc:rW},iW=eP+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",aW=UP({opSnippet:iW}),oW={kernelName:Se,backendName:"webgl",kernelFunc:aW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lW{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const x="max";let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const v=4*Math.floor(i/4),w=i%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${x}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class uW{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const k=4*Math.floor(i/4),I=i%4,S=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;lM(s,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;b(Vo(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Eo(s.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return EP({inputs:{x:s},backend:n});const h=new lW(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}const hW={kernelName:$e,backendName:"webgl",kernelFunc:cW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=[1,1,1],h=Ro(s.shape,i,a,c,o,l,u),d=new uW(h,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}const pW={kernelName:Te,backendName:"webgl",kernelFunc:dW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mW(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=[1,1,1],d=Ro(a.shape,o,l,h,u,c),p=new gW(d);return n.runWebGLProgram(p,[s],a.dtype)}const bW={kernelName:Ee,backendName:"webgl",kernelFunc:mW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xW(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i;lM([s,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Eo(a.shape,o,l,1,u),h=new fW(c);return n.runWebGLProgram(h,[s],a.dtype)}const yW={kernelName:Ne,backendName:"webgl",kernelFunc:xW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vW(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:i}=t,{transposeA:a,transposeB:o}=r;return fB({a:s,b:i,transposeA:a,transposeB:o,backend:n})}const wW={kernelName:Re,backendName:"webgl",kernelFunc:vW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kW{constructor(e,t,n,r,s,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Oa(e,t),Oa(e,n);let a="0.0";null!=r&&(Oa(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Oa(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IW{constructor(e,t,n,r,s,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Oa(e,t),Oa(e,n);let a="vec4(0.0)";null!=r&&(Oa(e,r),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Oa(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SW=({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:i,offset:a,scale:o}=e;b(s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),b(null==a||s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),b(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=ie().getBool("WEBGL_PACK_NORMALIZATION")?new IW(r.shape,s.shape,i.shape,c,h,l):new kW(r.shape,s.shape,i.shape,c,h,l),p=t.runWebGLProgram(d,u,u[0].dtype);return p},CW={kernelName:wt,backendName:"webgl",kernelFunc:SW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class $W{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=aL(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=TW(this.rank);let r;const s=e.map(((e,t)=>`sourceLoc.${NW[t]} = start[${t}] + coords.${NW[t]};`));r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${s.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const NW=["x","y","z","w","u","v"];function TW(e){if(1===e)return"sourceLoc";if(e<=6)return NW.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EW{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=aL(this.rank),n=Wz("coords",this.rank),r=Wz("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,i=`getChannel(getSource(${r.join()}), ${s})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${i};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RW(e,t,n,r){const s=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),a=r.texData.get(i.dataId);Object.assign(a,s),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=Ya(t,G(e.shape));s.slice&&(o+=s.slice.flatOffset),a.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(a.slice.origDataId)||1;return r.dataRefCount.set(a.slice.origDataId,l+1),i}function _W(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,size:a}=r,[o,l]=Za(s,i,a);if(za(s,o,l),0===w(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=$z(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=Ja(s.shape,o,l);if(u||!c){const e=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EW(l):new $W(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),RW(s,o,l,n)}const AW={kernelName:Ln,backendName:"webgl",kernelFunc:_W},FW=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,crops:a}=r;b(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=tf(s.shape,i,o),u=nf(l.length,i.length),c=rf(s.shape,i,o),h=sf(a,i.length),d=af(c,a,i.length),p=[],f=ZP({inputs:{x:s},backend:n,attrs:{shape:l}}),g=hB({inputs:{x:f},backend:n,attrs:{perm:u}}),m=ZP({inputs:{x:g},backend:n,attrs:{shape:c}}),x=_W({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),x},DW={kernelName:_e,backendName:"webgl",kernelFunc:FW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a}=r,o=n.readSync(s.dataId),l=n.readSync(i.dataId),u=qL(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const MW={kernelName:Ae,backendName:"webgl",kernelFunc:OW};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LW(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,i=n.readSync(r.dataId),a=n.readSync(s.dataId),o=Oa(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const zW={kernelName:De,backendName:"webgl",kernelFunc:LW},PW="return float(a != b);",BW=VP({opSnippet:PW,cpuKernelImpl:mz,dtype:"bool"}),WW={kernelName:an,backendName:"webgl",kernelFunc:BW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UW(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return EP({inputs:{x:s.complexTensorInfos.real},backend:n})}const VW={kernelName:wn,backendName:"webgl",kernelFunc:UW},GW="return float(int(x));";function HW(e,t){const n=new Qz(e.shape,GW),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return EP({inputs:{x:s},backend:n});const e=ac(s.shape),t=jW({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=_P({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=UW({inputs:{input:s},backend:n}),t=jW({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(s.dtype,i)){const e=EP({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId).values,[t,r,a]=JL(e,s.shape,s.dtype,i);return n.makeTensorInfo(t,r,a)}if("int32"===i)return HW(s,n);if("bool"===i){const e=n.makeTensorInfo([],"bool",R("bool",1)),t={a:s,b:e},r=BW({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),r}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}const KW={kernelName:Oe,backendName:"webgl",kernelFunc:jW},qW="return ceil(x);",XW=UP({opSnippet:qW,packedOpSnippet:qW,cpuKernelImpl:YL}),JW={kernelName:Me,backendName:"webgl",kernelFunc:XW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class YW{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZW{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QW(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:i,clipValueMax:a}=r;let o;o=ie().getBool("WEBGL_PACK_CLIP")?new ZW(s.shape):new YW(s.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[s],s.dtype,l)}const eU={kernelName:Le,backendName:"webgl",kernelFunc:QW};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tU{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function rU(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),i=new tU(r.shape),a=[nU(r,s.complexTensorInfos.real),nU(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}const sU={kernelName:Pe,backendName:"webgl",kernelFunc:rU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class iU{constructor(e){this.outputShape=[],this.outputShape=jp(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aU{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=jp(e,t);const n=this.outputShape,r=n.length,s=aL(r),i=Wz("coords",r),a=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${oU(a,l,e)}),\n            vec2(${oU(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${oU(a,l,p)}),\n          vec2(${oU(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function oU(e,t,n){const r=e.indexOf(t),s=e.map(((e,t)=>t===r?`${e} - ${n}`:e));return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lU(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.texData.get(r.dataId);return EP({inputs:{x:s.complexTensorInfos.imag},backend:n})}const uU={kernelName:Tt,backendName:"webgl",kernelFunc:lU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cU(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>UW({inputs:{input:e},backend:n}))),s=e.map((e=>lU({inputs:{input:e},backend:n}))),i=cU(r,t,n),a=cU(s,t,n),o=_P({inputs:{real:i,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=w(e.shape.slice(t)),s=[-1,r];return ZP({inputs:{x:e},backend:n,attrs:{shape:s}})})),i=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=jp(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=ZL(i,a,r,o),u=jp(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>i){const r=[];for(let a=0;a<e.length;a+=i){const s=e.slice(a,a+i);r.push(cU(s,t,n))}const s=cU(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return s}if(ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new aU(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:o}=hU(e,t,n),l=new iU(a.map((e=>e.shape))),u=n.runWebGLProgram(l,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=ZP({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function hU(e,t,n){const r=jp(e.map((e=>e.shape)),t),s=e.map((e=>ZP({inputs:{x:e},attrs:{shape:[-1,w(e.shape.slice(t))]},backend:n})));return{tensors2D:s,outShape:r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dU(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,i=T(s,t[0].shape)[0],a=t.map((e=>e.shape));Hp(a,i);const o=jp(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));return 1===l.length?EP({inputs:{x:l[0]},backend:n}):cU(l,i,n)}const pU={kernelName:Be,backendName:"webgl",kernelFunc:dU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fU{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class gU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mU{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gL(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let f=0;f<u;f++)h+=`\n           vec4 xTexelC${2*f};\n           int xTexelC${2*f}Ready;\n           vec4 xTexelC${2*f+1};\n           int xTexelC${2*f+1}Ready;\n           vec4 xC${f};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let f=0;f<u;f++)h+=`\n           xTexelC${2*f} = vec4(0.0);\n           xTexelC${2*f}Ready = 0;\n           xTexelC${2*f+1} = vec4(0.0);\n           xTexelC${2*f+1}Ready = 0;\n           xC${f} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===a){if(t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=i%2===0?f(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gL(this.outputShape.length);const{dataFormat:n}=t,r=cM(),s="channelsLast"===n,i=s?1:2,a=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xU(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function yU({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,g=!1;let m;const x=[];if(null!=i){const e=xU(i.shape,p);null!=e&&(i=ZP({inputs:{x:i},backend:r,attrs:{shape:e}}),x.push(i))}if(null!=s){const e=xU(s.shape,p);null!=e&&(s=ZP({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const y=(1===h||1===d)&&c>pB,v=!y&&u.isPacked&&p&&null!=u.texture&&l[2]%2!==0&&k(u.shape.slice(-3),l.slice(-3));if(v){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,b(XO(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=ZP({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});x.push(p);const y=fB({a:h,b:p,backend:r,transposeA:f,transposeB:g,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),v=r.texData.get(y.dataId);b(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,v.shape=n.outShape,m=EP({inputs:{x:y},backend:r}),m.shape=n.outShape,x.push(y)}else{const l=n.outHeight*n.outWidth,u=ZP({inputs:{x:e},backend:r,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=ZP({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=fB({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:g,backend:r,bias:s,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=ZP({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),x.push(u),x.push(c),x.push(h)}for(const b of x)r.disposeIntermediateTensorInfo(b);return m}function vU({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[n.batchSize,g,m],x=!0,y=!1,v=[];if(null!=i){const e=xU(i.shape,f);null!=e&&(i=ZP({inputs:{x:i},backend:r,attrs:{shape:e}}),v.push(i))}if(null!=s){const e=xU(s.shape,f);null!=e&&(s=ZP({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const k=ZP({inputs:{x:t},backend:r,attrs:{shape:[1,g,w(t.shape)/g]}});v.push(k);const I=new bU(b,n),S=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],C=r.runWebGLProgram(I,[e],"float32",S),$=ZP({inputs:{x:C},backend:r,attrs:{shape:b}});v.push(C),v.push($);const N=null!=s,T=null!=i,E="leakyrelu"===o,R=o?GP(o,!0):null,_=new HP(f?$.shape:k.shape,f?k.shape:$.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],x,y,N,R,T,E),A=f?[$,k]:[k,$];if(s&&A.push(s),T&&A.push(i),E){const e=r.makeTensorInfo([],"float32",Yr(a,"float32"));A.push(e),v.push(e)}const F=r.runWebGLProgram(_,A,"float32"),D=ZP({inputs:{x:F},backend:r,attrs:{shape:n.outShape}});v.push(F);for(const w of v)r.disposeIntermediateTensorInfo(w);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Go(l),d=_o(s.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ie().getBool("WEBGL_EXP_CONV")){const e=new mU(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,i],"float32",t)}else if(ie().getBool("WEBGL_CONV_IM2COL"))p=vU({x:s,filter:i,convInfo:d,backend:n});else{const e=new fU(d);p=n.runWebGLProgram(e,[s,i],"float32")}else p=yU({x:s,filter:i,convInfo:d,backend:n});const f=ZP({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const kU={kernelName:We,backendName:"webgl",kernelFunc:wU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${i}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $U{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Go(l),d=_o(s.shape,c,a,1,o,u,!1,h),p=new IU(d);return n.runWebGLProgram(p,[s,i],"float32")}const TU={kernelName:Ue,backendName:"webgl",kernelFunc:NU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EU(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Go(u),d=_o(a,i.shape,o,1,l,c,!1,h),p=new SU(d);return n.runWebGLProgram(p,[s,i],"float32")}const RU={kernelName:Ve,backendName:"webgl",kernelFunc:EU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _U(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=Ao(s.shape,i.shape,a,l,o),c=new gU(u);return n.runWebGLProgram(c,[s,i],"float32")}const AU={kernelName:Ge,backendName:"webgl",kernelFunc:_U};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,pad:o,filterShape:l}=r,u=Ao(s.shape,l,a,1,o),c=new CU(u);return n.runWebGLProgram(c,[s,i],"float32")}const DU={kernelName:He,backendName:"webgl",kernelFunc:FU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OU(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{pad:a,strides:o,inputShape:l}=r,u=Ao(l,i.shape,o,1,a),c=new $U(u);return n.runWebGLProgram(c,[s,i],"float32")}const MU={kernelName:je,backendName:"webgl",kernelFunc:OU},LU=WP+"\n  return cos(x);\n",zU=UP({opSnippet:LU}),PU={kernelName:Ke,backendName:"webgl",kernelFunc:zU},BU="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",WU=UP({opSnippet:BU}),UU={kernelName:qe,backendName:"webgl",kernelFunc:WU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VU{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const GU=e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new VU(s.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[s,i,a],"float32")},HU={kernelName:Ye,backendName:"webgl",kernelFunc:GU};var jU;(function(e){e["Prod"]="*",e["Sum"]="+"})(jU||(jU={}));class KU{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,i=this.op===jU.Prod?"1.0":"0.0",a=n?i:`getX(${qU(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${aL(s)} coords = getOutputCoords();\n        int end = ${XU(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${XU(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${qU(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function qU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function XU(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JU(e,t,n,r,s,i){const a=t.shape.length,o=Ku([r],a);let l=t;null!=o&&(l=hB({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Xu(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=EP({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new KU(e,l.shape,!1,i),r=[[d]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new KU(e,l.shape,s,i),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=qu(o),t=hB({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return JU(jU.Prod,s,n,i,a,o)}const ZU={kernelName:Xe,backendName:"webgl",kernelFunc:YU};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QU(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,exclusive:a,reverse:o}=r;return JU(jU.Sum,s,n,i,a,o)}const eV={kernelName:Je,backendName:"webgl",kernelFunc:QU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:i}=t,{size:a,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(i.dataId),r=qL(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(i),r=XL(e,t,a,o);return n.makeTensorInfo(r.shape,i.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}const nV={kernelName:Ze,backendName:"webgl",kernelFunc:tV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rV{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:i,dataFormat:a}=r,o=s.shape[0],l="NHWC"===a?s.shape[1]:s.shape[2],u="NHWC"===a?s.shape[2]:s.shape[3],c="NHWC"===a?s.shape[3]:s.shape[1],h=l*i,d=u*i,p=c/(i*i),f="NHWC"===a?[o,h,d,p]:[o,p,h,d],g=new rV(f,i,a);return n.runWebGLProgram(g,[s],s.dtype)}const iV={kernelName:Qe,backendName:"webgl",kernelFunc:sV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aV{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gL(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oV{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gL(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let f=0;f<c;f++)d+=`\n          vec4 xTexelC${2*f};\n          int xTexelC${2*f}Ready;\n          vec4 xTexelC${2*f+1};\n          int xTexelC${2*f+1}Ready;\n          vec4 xC${f};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let f=0;f<c;f++)d+=`\n          xTexelC${2*f} = vec4(0.0);\n          xTexelC${2*f}Ready = 0;\n          xTexelC${2*f+1} = vec4(0.0);\n          xTexelC${2*f+1}Ready = 0;\n          xC${f} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2===0?f(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",g="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),b(Vo(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=_o(s.shape,i.shape,a,c,o,u,!0);let d;d=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new oV(h):new aV(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[s,i],"float32",p)}const uV={kernelName:et,backendName:"webgl",kernelFunc:lV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class hV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=_o(s.shape,c,a,o,l,u,!0),d=new cV(h);return n.runWebGLProgram(d,[s,i],"float32")}const pV={kernelName:tt,backendName:"webgl",kernelFunc:dV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fV(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=_o(c,i.shape,a,o,l,u,!0),d=new hV(h);return n.runWebGLProgram(d,[s,i],"float32")}const gV={kernelName:nt,backendName:"webgl",kernelFunc:fV};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class mV{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bV(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],i=w(r.shape),a=ZP({inputs:{x:r},backend:n,attrs:{shape:[i]}}),o=new mV(i),l=n.runWebGLProgram(o,[a],a.dtype),u=ZP({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const xV={kernelName:rt,backendName:"webgl",kernelFunc:bV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yV{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vV(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i}=t,{strides:a,pad:o,dilations:l}=r,u=To(s.shape,i.shape,a,o,"NHWC",l);let c;const h=new yV(u);c=n.runWebGLProgram(h,[s,i],"float32");const d=ZP({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const wV={kernelName:st,backendName:"webgl",kernelFunc:vV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kV(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,i=t,{allDims:a,summedDims:o,idDims:l}=_f(s,i.length);Ff(a.length,l,i);const{path:u,steps:c}=Df(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:r}=Af(p,l[e]);let s;Of(t)?s=i[e]:(s=hB({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(s));const a=s.shape.slice();for(let e=0;e<r.length;++e)a.splice(r[e],0,1);k(s.shape,a)||(s=ZP({inputs:{x:s},backend:n,attrs:{shape:a}}),f.push(s)),null===d?d=s:(d=XP({inputs:{a:s,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=uB({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const IV={kernelName:lt,backendName:"webgl",kernelFunc:kV},SV="return (x >= 0.0) ? x : (exp(x) - 1.0);",CV="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",$V=UP({opSnippet:SV,packedOpSnippet:CV}),NV={kernelName:ut,backendName:"webgl",kernelFunc:$V},TV="return (b >= 1.0) ? a : a * (b + 1.0);",EV="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",RV=e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new TP(EV,r.shape,s.shape):new $P(TV,r.shape,s.shape);return n.runWebGLProgram(i,[r,s],r.dtype)},_V={kernelName:ct,backendName:"webgl",kernelFunc:RV},AV="\n  return vec4(equal(a, b));\n",FV="return float(a == b);",DV=VP({opSnippet:FV,packedOpSnippet:AV,dtype:"bool",cpuKernelImpl:QL}),OV={kernelName:dt,backendName:"webgl",kernelFunc:DV},MV=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${pf};\n  float a1 = ${ff};\n  float a2 = ${gf};\n  float a3 = ${mf};\n  float a4 = ${bf};\n  float a5 = ${xf};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,LV=UP({opSnippet:MV}),zV={kernelName:ht,backendName:"webgl",kernelFunc:LV},PV=WP+"\n  return exp(x);\n",BV="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",WV=UP({opSnippet:PV,packedOpSnippet:BV,cpuKernelImpl:ez,dtype:"float32"}),UV={kernelName:pt,backendName:"webgl",kernelFunc:WV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VV(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=s;return s<0&&(b(-(a+1)<=s,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+s+1),o.splice(l,0,1),ZP({inputs:{x:i},backend:r,attrs:{shape:o}})}const GV={kernelName:ft,backendName:"webgl",kernelFunc:VV},HV="return exp(x) - 1.0;",jV=UP({opSnippet:HV,packedOpSnippet:HV,cpuKernelImpl:tz}),KV={kernelName:gt,backendName:"webgl",kernelFunc:jV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qV{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XV(e,t,n){const r=n.texData.get(e.dataId),s=w(e.shape),i=e.shape[e.shape.length-1],a=s/i,o=ZP({inputs:{x:e},backend:n,attrs:{shape:[a,i]}}),l=o.shape,u=new qV("real",l,t),c=new qV("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=_P({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=ZP({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JV(e){const{inputs:t,backend:n}=e,{input:r}=t;return XV(r,!1,n)}const YV={kernelName:mt,backendName:"webgl",kernelFunc:JV};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZV{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QV(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:i}=n;if(i=i||W(s),"string"===i){const e=_(i,w(r));return e.fill(s),t.makeTensorInfo(r,i,e)}{const e=new ZV(r,s),n=[[s]];return t.runWebGLProgram(e,[],i,n)}}const eG={kernelName:bt,backendName:"webgl",kernelFunc:QV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tG{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nG={kernelName:xt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new tG(n.shape),i=r.runWebGLProgram(s,[n],n.dtype);return i}},rG="return floor(x);",sG=UP({opSnippet:rG,packedOpSnippet:rG,cpuKernelImpl:nz}),iG={kernelName:yt,backendName:"webgl",kernelFunc:sG},aG="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",oG="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",lG=VP({opSnippet:aG,packedOpSnippet:oG,dtype:"int32"}),uG={kernelName:vt,backendName:"webgl",kernelFunc:lG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cG{constructor(e){this.variableNames=["A"];const t=cM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class hG{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=cM(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const dG={kernelName:br,backendName:"webgl",kernelFunc:gG};let pG,fG=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function gG(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:i}=r,a="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=a?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,i];if(o||a){const e=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=pG&&e===fG||(fG=e,pG=document.createElement("canvas").getContext("2d",{willReadFrequently:fG})),pG.canvas.width=l,pG.canvas.height=u,pG.drawImage(s,0,0,l,u),s=pG.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=aO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=ie().getBool("WEBGL_PACK")?new hG(h):new cG(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Go(c),m=_o(s.shape,i.shape,l,h,u,d,!1,g);let b;const x=[],y=null!=a,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ZP({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(a,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Yr(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&ie().getBool("WEBGL_EXP_CONV")){const e=p?GP(p,!0):null,t=new mU(m,y,e,v,w),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(ie().getBool("WEBGL_CONV_IM2COL"))b=vU({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?GP(p,!1):null,t=new fU(m,y,e,v,w),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=yU({x:s,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=ZP({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const bG={kernelName:vr,backendName:"webgl",kernelFunc:mG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=r,f=[];let g=c;null==g&&(g=[1,1]),b(Vo(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=_o(s.shape,i.shape,l,g,u,h,!0),x=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,y=d?GP(d,x):null,v=[s,i],w=null!=a,k=null!=o,I="leakyrelu"===d;if(w&&v.push(a),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Yr(p,"float32"));v.push(e),f.push(e)}let S;S=x?new oV(m,w,y,k,I):new aV(m,w,y,k,I);const C=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=n.runWebGLProgram(S,v,"float32",C);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}const yG={kernelName:wr,backendName:"webgl",kernelFunc:xG};class vG{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=aL(n.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wG(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,i=s.shape,a=i[i.length-1],o=w(r.shape),[l,u,c,h]=of(r,s),d=ZP({inputs:{x:s},backend:n,attrs:{shape:[u,a]}}),p=ZP({inputs:{x:r},backend:n,attrs:{shape:[w(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),i=rz(e,t,r.dtype,u,a,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,i.values)}const f=new vG(a,h,[u,c],r.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=ZP({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}const kG={kernelName:It,backendName:"webgl",kernelFunc:wG};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IG{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=aL(this.rank),r=SG(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function SG(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)2===s?r.push("index"):r.push(`${n[s]}`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CG(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:i}=t,{axis:a,batchDims:o}=r,l=T(a,s.shape)[0];if(ie().get("DEBUG")){const e=n.readSync(i.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];b(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Zf(s,i,l,o),c=w(i.shape),h=[],d=ZP({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=ZP({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=sz(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const g=new IG(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const x=ZP({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const $G={kernelName:kt,backendName:"webgl",kernelFunc:CG},NG="return float(a > b);",TG="\n  return vec4(greaterThan(a, b));\n",EG=VP({opSnippet:NG,packedOpSnippet:TG,cpuKernelImpl:iz,dtype:"bool"}),RG={kernelName:St,backendName:"webgl",kernelFunc:EG},_G="return float(a >= b);",AG="\n  return vec4(greaterThanEqual(a, b));\n",FG=VP({opSnippet:_G,packedOpSnippet:AG,dtype:"bool",cpuKernelImpl:az}),DG={kernelName:Ct,backendName:"webgl",kernelFunc:FG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OG(e){const{inputs:t,backend:n}=e,{input:r}=t;return XV(r,!0,n)}const MG={kernelName:Nt,backendName:"webgl",kernelFunc:OG},LG="return float(!isnan(x) && !isinf(x));",zG=UP({opSnippet:LG,dtype:"bool"}),PG={kernelName:Et,backendName:"webgl",kernelFunc:zG},BG="return float(isinf(x));",WG=UP({opSnippet:BG,dtype:"bool"}),UG={kernelName:Rt,backendName:"webgl",kernelFunc:WG},VG="return float(isnan(x));",GG=UP({opSnippet:VG,dtype:"bool"}),HG={kernelName:_t,backendName:"webgl",kernelFunc:GG},jG="return float(a < b);",KG="\n  return vec4(lessThan(a, b));\n",qG=VP({opSnippet:jG,packedOpSnippet:KG,cpuKernelImpl:oz,dtype:"bool"}),XG={kernelName:Ft,backendName:"webgl",kernelFunc:qG},JG="return float(a <= b);",YG="\n  return vec4(lessThanEqual(a, b));\n",ZG=VP({opSnippet:JG,packedOpSnippet:YG,cpuKernelImpl:lz,dtype:"bool"}),QG={kernelName:Dt,backendName:"webgl",kernelFunc:ZG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eH(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:i}=n,a=uz(r,s,i);return t.makeTensorInfo([a.length],"float32",a)}const tH={kernelName:Ot,backendName:"webgl",kernelFunc:eH},nH=WP+"\n  return x < 0.0 ? 0./0. : log(x);\n",rH="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",sH=UP({opSnippet:nH,packedOpSnippet:rH,cpuKernelImpl:cz}),iH={kernelName:Mt,backendName:"webgl",kernelFunc:sH},aH=WP+"\n  return log(1.0 + x);\n",oH=UP({opSnippet:aH}),lH={kernelName:Lt,backendName:"webgl",kernelFunc:oH},uH="return float(a >= 1.0 && b >= 1.0);",cH="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",hH=VP({opSnippet:uH,packedOpSnippet:cH,dtype:"bool"}),dH={kernelName:zt,backendName:"webgl",kernelFunc:hH},pH="return float(!(x >= 1.0));",fH=UP({opSnippet:pH}),gH={kernelName:Pt,backendName:"webgl",kernelFunc:fH},mH="return float(a >= 1.0 || b >= 1.0);",bH="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",xH=VP({opSnippet:mH,packedOpSnippet:bH,dtype:"bool"}),yH={kernelName:Bt,backendName:"webgl",kernelFunc:xH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vH{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wH{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const kH=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=r,u=ie().getBool("WEBGL_PACK_NORMALIZATION")?new wH(s.shape,i,a,o,l):new vH(s.shape,i,a,o,l);return n.runWebGLProgram(u,[s],s.dtype)},IH={kernelName:Ut,backendName:"webgl",kernelFunc:kH};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SH{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const CH=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new SH(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,i,a],s.dtype)},$H={kernelName:Vt,backendName:"webgl",kernelFunc:CH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NH(e,t,n,r){const s=w(t),i=w(e.shape),a=i/s,o=ZP({inputs:{x:e},attrs:{shape:[a,s]},backend:r}),l=rB(o,e.dtype,"max",r),u=ZP({inputs:{x:l},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:i,keepDims:a}=r,o=s.shape.length,l=T(i,s.shape);let u=l;const c=Ku(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId),t=e.values,r=new Array(o);for(let n=0;n<r.length;n++)r[n]=s.shape[c[n]];const i=zz(t,s.shape,s.dtype,c,r);p=n.makeTensorInfo(r,s.dtype);const a=n.texData.get(p.dataId);a.values=i}else p=oB(s,c,n);u=Xu(u.length,o)}ju("max",u,o);const[f,g]=Gu(p.shape,u);let m,b=f;if(a&&(b=Hu(f,l)),d){const e=n.texData.get(p.dataId),t=e.values,r=hz(t,w(g),b,s.dtype);m=n.makeTensorInfo(b,s.dtype);const i=n.texData.get(m.dataId);i.values=r}else m=NH(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const EH={kernelName:Gt,backendName:"webgl",kernelFunc:TH},RH=CP+"\n  return max(a, b);\n",_H="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NP+"\n  return result;\n",AH=VP({opSnippet:RH,packedOpSnippet:_H,cpuKernelImpl:dz}),FH={kernelName:Ht,backendName:"webgl",kernelFunc:AH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;lM(s,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=r,u=1;b(Vo(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Eo(s.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return EP({inputs:{x:s},backend:n});const h=new lW(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}const OH={kernelName:jt,backendName:"webgl",kernelFunc:DH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=[1,1,1],h=Ro(s.shape,i,a,c,o,u,l),d=new uW(h,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}const LH={kernelName:qt,backendName:"webgl",kernelFunc:MH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=s-1-e.padInfo.top,o=i-1-e.padInfo.left,l=s*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PH{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BH(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=[1,1,1],d=Ro(a.shape,o,l,h,u,c),p=new uW(d,"max",!0),f=n.runWebGLProgram(p,[a],a.dtype),g=new PH(d),m=n.runWebGLProgram(g,[s,f],a.dtype);return n.disposeIntermediateTensorInfo(f),m}const WH={kernelName:Xt,backendName:"webgl",kernelFunc:BH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UH(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:i,output:a}=t,o=i;lM([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Eo(o.shape,l,u,1,c,h),p=!0,f=new lW(d,"max",p),g=n.runWebGLProgram(f,[o],o.dtype),m=new zH(d),b=n.runWebGLProgram(m,[s,g],o.dtype);return n.disposeIntermediateTensorInfo(g),b}const VH={kernelName:Kt,backendName:"webgl",kernelFunc:UH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GH(e,t,n,r){let s=new lW(n,"max",!1);const i=r.runWebGLProgram(s,[e],"float32");s=new lW(n,"max",!0,!0,t);const a=r.runWebGLProgram(s,[e],"float32");return[i,a]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const HH={kernelName:Jt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;b(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];b(Vo(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Eo(r.shape,s,i,u,a),[h,d]=GH(r,o,c,l);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jH(e,t,n,r){const s=w(t),i=w(e.shape),a=i/s,o=ZP({inputs:{x:e},attrs:{shape:[a,s]},backend:r}),l=rB(o,"float32","mean",r),u=ZP({inputs:{x:l},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const KH={kernelName:Yt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:i}=t,a=n,o=r.shape.length,l=T(i,r.shape);let u=l;const c=Ku(u,o),h=null!=c,d=a.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=a.texData.get(f.dataId),t=e.values,n=new Array(o);for(let a=0;a<n.length;a++)n[a]=r.shape[c[a]];const s=zz(t,r.shape,r.dtype,c,n);f=a.makeTensorInfo(n,r.dtype);const i=a.texData.get(f.dataId);i.values=s}else f=oB(r,c,a);p.push(f),u=Xu(u.length,o)}ju("sum",u,o);const[g,m]=Gu(f.shape,u);let b=g;s&&(b=Hu(g,l));const x=jH(f,m,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qH(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=T(i,s.shape);let u=l;const c=Ku(u,o);let h=s;null!=c&&(h=hB({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Xu(u.length,s.shape.length)),ju("min",u,o);const[d,p]=Gu(h.shape,u),f=w(p),g=ZP({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=rB(g,g.dtype,"min",n);let b;if(a){const e=Hu(d,l);b=ZP({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=ZP({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const XH={kernelName:Zt,backendName:"webgl",kernelFunc:qH},JH=CP+"\n  return min(a, b);\n",YH="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+NP+"\n  return result;\n",ZH=VP({opSnippet:JH,packedOpSnippet:YH,cpuKernelImpl:pz}),QH={kernelName:Qt,backendName:"webgl",kernelFunc:ZH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ej{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=Wz("rc",r),l=Wz("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const nj=({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:i}=n,a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tj(r.shape,s,i):new ej(r.shape,s,i),o=t.runWebGLProgram(a,[r],r.dtype);return o},rj={kernelName:en,backendName:"webgl",kernelFunc:nj},sj="if (b == 0.0) return NAN;\n  return mod(a, b);",ij="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+NP+"\n  return result;\n",aj=VP({opSnippet:sj,packedOpSnippet:ij}),oj={kernelName:tn,backendName:"webgl",kernelFunc:aj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lj{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const uj="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",cj="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",hj=VP({opSnippet:uj,packedOpSnippet:cj,checkOutOfBounds:!0}),dj={kernelName:ot,backendName:"webgl",kernelFunc:hj},pj="return a - b;",fj=VP({opSnippet:pj,packedOpSnippet:pj,supportsComplex:!0,cpuKernelImpl:Oz}),gj={kernelName:ir,backendName:"webgl",kernelFunc:fj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mj(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:i}=r,a=T([i],s.shape),o=TH({inputs:{x:s},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=Hu(o.shape,a),u=ZP({inputs:{x:o},backend:n,attrs:{shape:l}}),c=fj({inputs:{a:s,b:u},backend:n}),h=WV({inputs:{x:c},backend:n}),d=uB({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=ZP({inputs:{x:d},backend:n,attrs:{shape:l}}),f=hj({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const bj={kernelName:Kn,backendName:"webgl",kernelFunc:mj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xj(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:i,seed:a,normalized:o}=r,l=o?s:mj({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new lj(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}const yj={kernelName:nn,backendName:"webgl",kernelFunc:xj},vj=eP+"\n  return -x;\n",wj="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function kj(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=gz(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new pP(r.shape,wj):new Qz(r.shape,vj),n.runWebGLProgram(s,[r],r.dtype)}const Ij={kernelName:sn,backendName:"webgl",kernelFunc:kj},Sj=bd;function Cj(e){kr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=Sj(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const $j={kernelName:on,backendName:"webgl",kernelFunc:Cj},Nj=xd;function Tj(e){kr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=Nj(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const Ej={kernelName:ln,backendName:"webgl",kernelFunc:Tj},Rj=yd;function _j(e){kr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=Rj(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const Aj={kernelName:un,backendName:"webgl",kernelFunc:_j};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Fj{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Dj=e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:i,depth:a,onValue:o,offValue:l}=r,u=w(s.shape),c=new Fj(u,a,o,l),h=ZP({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...s.shape,a],f=ZP({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},Oj={kernelName:hn,backendName:"webgl",kernelFunc:Dj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mj(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=UW({inputs:{input:r},backend:n}),t=Mj({inputs:{x:e},backend:n}),s=lU({inputs:{input:r},backend:n}),i=Mj({inputs:{x:s},backend:n}),a=_P({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return QV({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Lj={kernelName:gr,backendName:"webgl",kernelFunc:Mj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zj(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const e=UW({inputs:{input:r},backend:n}),t=zj({inputs:{x:e},backend:n}),s=lU({inputs:{input:r},backend:n}),i=Mj({inputs:{x:s},backend:n}),a=_P({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),a}return QV({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}const Pj={kernelName:cn,backendName:"webgl",kernelFunc:zj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bj(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return VV({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{x(i,e.shape,"All tensors passed to stack must have matching shapes"),b(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=VV({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),u=dU({inputs:l,backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Wj={kernelName:dn,backendName:"webgl",kernelFunc:Bj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Uj{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${i});\n      ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Vj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=aL(r),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=Wz("rc",r),l=Wz("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===r?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${i});\n      const ${s} end = ${s}(${a});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Gj=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:i,constantValue:a}=r;if(0===w(s.shape)){const e=i.map(((e,t)=>e[0]+s.shape[t]+e[1]));return QV({backend:n,attrs:{shape:e,value:a,dtype:s.dtype}})}const o=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Vj(s.shape,i,a):new Uj(s.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[s],s.dtype,l)},Hj={kernelName:pn,backendName:"webgl",kernelFunc:Gj},jj="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",Kj="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+NP+"\n  return result;\n",qj=VP({opSnippet:jj,packedOpSnippet:Kj}),Xj={kernelName:fn,backendName:"webgl",kernelFunc:qj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jj(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:i,keepDims:a}=r,o=s.shape.length,l=[],u=T(i,s.shape);let c=u;const h=Ku(c,o);let d,p=s;if(null!=h&&(p=hB({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Xu(c.length,o),l.push(p)),ju("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=bz(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Gu(p.shape,c),r=w(t),i=ZP({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),a=Ds(s.dtype),o=rB(i,a,"prod",n);d=ZP({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(a){l.push(d);const e=Hu(d.shape,u);d=ZP({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const Yj={kernelName:mn,backendName:"webgl",kernelFunc:Jj};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zj(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=xz(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const Qj={kernelName:bn,backendName:"webgl",kernelFunc:Zj};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eK(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:i}=t,a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=yz(a,r.shape,r.dtype,o,s.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],r.dtype,c);return[h,d]}const tK={kernelName:xn,backendName:"webgl",kernelFunc:eK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nK(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=vz(u,s.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const rK={kernelName:yn,backendName:"webgl",kernelFunc:nK},sK=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:i,dtype:a}=n,o=wz(r,s,i,a);return t.makeTensorInfo([o.length],a,o)},iK={kernelName:vn,backendName:"webgl",kernelFunc:sK},aK="return 1.0 / x;",oK=UP({opSnippet:aK}),lK={kernelName:kn,backendName:"webgl",kernelFunc:oK},uK=eP+"\n  return (x < 0.0) ? 0.0 : x;\n",cK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hK=UP({opSnippet:uK,packedOpSnippet:cK}),dK={kernelName:In,backendName:"webgl",kernelFunc:hK},pK=eP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",fK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gK=UP({opSnippet:pK,packedOpSnippet:fK}),mK={kernelName:En,backendName:"webgl",kernelFunc:gK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bK{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xK{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yK(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new xK(s.shape,l,u,i,a):new bK(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],"float32")}const vK={kernelName:Nn,backendName:"webgl",kernelFunc:yK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wK{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kK(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new wK(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const IK={kernelName:Tn,backendName:"webgl",kernelFunc:kK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SK{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class CK{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[r&&t>1?a-1:a,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $K(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:i,halfPixelCenters:a,size:o}=r,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new CK(s.shape,l,u,i,a):new SK(s.shape,l,u,i,a);return n.runWebGLProgram(c,[s],s.dtype)}const NK={kernelName:Cn,backendName:"webgl",kernelFunc:$K};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class TK{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,i,a]=e,o=[n&&i>1?r-1:r,n&&a>1?s-1:s],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EK(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:i}=t,{alignCorners:a}=r,o=new TK(i.shape,s.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const RK={kernelName:$n,backendName:"webgl",kernelFunc:EK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _K{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,s=e.map(((e,t)=>r(t))).join(","),i=aL(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AK{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Wz("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=aL(n);function o(e){return h(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){const n=e.map(((e,n)=>d(n,t))),r=n.join(","),s=n.slice(-2).join(",");return`getChannel(getX(${r}), vec2(${s}))`}function d(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(r.slice())};\n          if(${s}){\n            result.g = ${l(r.slice())};\n          }\n          if(${i}) {\n            result.b = ${u(r.slice())};\n            if(${s}) {\n              result.a = ${c(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FK(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:i}=r,a=s.shape.length,o=T(i,s.shape);if(0===a)return EP({inputs:{x:s},backend:n});const l=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AK(s.shape,o):new _K(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}const DK={kernelName:Rn,backendName:"webgl",kernelFunc:FK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OK{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const MK={kernelName:xr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:i,center:a}=t,o=n,l=new OK(r.shape,i),[u,c]=ef(a,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]],d=o.runWebGLProgram(l,[r],r.dtype,h);return d}},LK="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",zK=UP({opSnippet:LK}),PK={kernelName:_n,backendName:"webgl",kernelFunc:zK},BK="return inversesqrt(x);",WK=UP({opSnippet:BK,cpuKernelImpl:kz}),UK={kernelName:An,backendName:"webgl",kernelFunc:WK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VK{constructor(e,t,n,r,s,i,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const o=aL(s.length),l=aL(i.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GK(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:i}=t,{shape:a}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=cf(i,s,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,s.dtype);const p=ZP({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=ZP({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new VK(l,o,p.shape.length,f.shape.length,c,d),b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=ZP({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}const HK={kernelName:Fn,backendName:"webgl",kernelFunc:GK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jK{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===ie().getNumber("WEBGL_VERSION")?s:i,o="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KK(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:i}=t,{side:a}=r,o=new jK(s.shape[0],s.shape[1],i.shape[1],a),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,i],"int32",l)}const qK={kernelName:Dn,backendName:"webgl",kernelFunc:KK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XK{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&i.push(`${n[r]}`);r=i.join(),s=a.join()}const i=aL(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JK(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:i}=t,a=new XK(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(a,[r,s,i],Fs(s.dtype,i.dtype))}const YK={kernelName:On,backendName:"webgl",kernelFunc:JK},ZK=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${hf};\n  float scale = ${df};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,QK=UP({opSnippet:ZK}),eq={kernelName:Mn,backendName:"webgl",kernelFunc:QK},tq=WP+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",nq="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",rq=UP({opSnippet:tq,packedOpSnippet:nq,cpuKernelImpl:Sz}),sq={kernelName:Wn,backendName:"webgl",kernelFunc:rq},iq="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",aq=UP({opSnippet:iq}),oq={kernelName:Bn,backendName:"webgl",kernelFunc:aq},lq=WP+"\n  return sin(x);\n",uq=UP({opSnippet:lq}),cq={kernelName:zn,backendName:"webgl",kernelFunc:uq},hq="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",dq=UP({opSnippet:hq}),pq={kernelName:Pn,backendName:"webgl",kernelFunc:dq},fq="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",gq=UP({opSnippet:fq}),mq={kernelName:Un,backendName:"webgl",kernelFunc:gq},bq=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:i,paddings:a}=r;b(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let b=1+i.length;b<s.shape.length;++b)l.push([0,0]);const u=[],c=Gj({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=tf(c.shape,i,o,!1),d=nf(h.length,i.length,!1),p=rf(c.shape,i,o,!1),f=ZP({inputs:{x:c},backend:n,attrs:{shape:h}}),g=hB({inputs:{x:f},backend:n,attrs:{perm:d}}),m=ZP({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m},xq={kernelName:Hn,backendName:"webgl",kernelFunc:bq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yq(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=Nz(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}const vq={kernelName:qn,backendName:"webgl",kernelFunc:yq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wq(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:i}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=Tz(o,r.shape,r.dtype,a,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const kq={kernelName:Xn,backendName:"webgl",kernelFunc:wq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iq(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=Ez(a,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}const Sq={kernelName:Jn,backendName:"webgl",kernelFunc:Iq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cq(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:i}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(i.dataId),[u,c]=Ez(a,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}const $q={kernelName:Yn,backendName:"webgl",kernelFunc:Cq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nq(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:a}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=cf(i,s,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(s),t=n.bufferSync(i),r=ns(n.readSync(a.dataId)[0]),f=Iz(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new VK(u,l,s.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,s,a],i.dtype),m=ZP({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}const Tq={kernelName:Zn,backendName:"webgl",kernelFunc:Nq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Eq(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:i,axis:a}=r,o=T(a,s.shape)[0],l=Lf(s,i,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=_W({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}const Rq={kernelName:jn,backendName:"webgl",kernelFunc:Eq},_q="return sqrt(x);",Aq=UP({opSnippet:_q,packedOpSnippet:_q,cpuKernelImpl:Rz}),Fq={kernelName:Vn,backendName:"webgl",kernelFunc:Aq},Dq="return x * x;",Oq=UP({opSnippet:Dq}),Mq={kernelName:er,backendName:"webgl",kernelFunc:Oq},Lq="return (a - b) * (a - b);",zq=VP({opSnippet:Lq,packedOpSnippet:Lq}),Pq={kernelName:Qn,backendName:"webgl",kernelFunc:zq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bq({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=eP+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new Qz(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}const Wq={kernelName:mr,backendName:"webgl",kernelFunc:Bq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Uq{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=aL(n.length),i=aL(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vq(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=r,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:x,begin:y,end:v,strides:w}=Qa(s.shape,i,a,o,l,u,c,h,d);let k;if(g)k=ZP({inputs:{x:s},backend:n,attrs:{shape:f}});else if(m||x){b(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=Ba(y,v,w),t=_W({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=ZP({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.shouldExecuteOnCPU([s]);if(e){const e=n.readSync(s.dataId),t=ua(s.shape,s.dtype,e),r=_z(p,t,w,y);k=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new Uq(y,w,p);k=n.runWebGLProgram(e,[s],s.dtype)}}const I=ZP({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}const Gq={kernelName:tr,backendName:"webgl",kernelFunc:Vq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hq(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=Az(d,p,s,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const jq={kernelName:nr,backendName:"webgl",kernelFunc:Hq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kq(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=Fz(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const qq={kernelName:rr,backendName:"webgl",kernelFunc:Kq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xq(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=Dz(a,s);return n.makeTensorInfo(i.shape,"int32",o)}const Jq={kernelName:sr,backendName:"webgl",kernelFunc:Xq},Yq="return tan(x);",Zq=UP({opSnippet:Yq}),Qq={kernelName:ar,backendName:"webgl",kernelFunc:Zq},eX="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",tX=UP({opSnippet:eX}),nX={kernelName:or,backendName:"webgl",kernelFunc:tX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rX{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const r=aL(this.rank),s=sX(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function sX(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:i}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>ns(e))):e,r=ua(s.shape,s.dtype,t),a=Mz(r,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new rX(s.shape,i),o=n.runWebGLProgram(a,[s],s.dtype);return o}const aX={kernelName:lr,backendName:"webgl",kernelFunc:iX};class oX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class lX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uX(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function cX(e){let t=1;while(t<e)t*=2;return t}function hX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:i,sorted:a}=r,o=ie().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ie().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||i>l){const e=n.readSync(s.dataId),[t,r]=Lz(e,u,s.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,QV({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=w(u),g=f/c,m=ZP({inputs:{x:p},attrs:{shape:[g,c]},backend:n});d&&uX(n,p);const b=cX(i),x=cX(c);let y=null;const v=()=>null===y?[m,m]:[m,y],k=(e,t,r)=>{const s=v(),i=new oX(r),a=null===y?1:0,o=[[c],[a],[Number.NEGATIVE_INFINITY],[e],[t]],l=y;y=n.runWebGLProgram(i,s,"int32",o),uX(n,l)};for(let w=1;w<b;w*=2){const e=2*w;for(let t=w;t>=1;t/=2)k(e,t,[g,x])}for(let w=x;w>b;w/=2){const e=v(),t=new lX([g,w/2]),r=null===y?1:0,s=[[c],[r],[b]],i=y;y=n.runWebGLProgram(t,e,"int32",s),uX(n,i);const a=b/2,o=2*a;for(let n=a;n>=1;n/=2)k(o,n,y.shape)}let I=y;y=_W({inputs:{x:y},backend:n,attrs:{begin:0,size:[g,i]}}),uX(n,I);let S=CG({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});uX(n,m);const C=u.slice(0,-1);C.push(i),I=y,y=ZP({inputs:{x:y},attrs:{shape:C},backend:n}),uX(n,I);const $=S;return S=ZP({inputs:{x:S},attrs:{shape:C},backend:n}),uX(n,$),[S,y]}const dX={kernelName:ur,backendName:"webgl",kernelFunc:hX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pX{constructor(e,t,n,r,s,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fX(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=new pX(h,d,a,o,l,m);return n.runWebGLProgram(b,[s,i],"float32")}const gX={kernelName:cr,backendName:"webgl",kernelFunc:fX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mX(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:i}=t;lM(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=Pz(a,s,i.shape,i.dtype);return[r.makeTensorInfo(l,i.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}const bX={kernelName:dr,backendName:"webgl",kernelFunc:mX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xX(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:i}=r;i<0&&(i+=s.shape.length);const a=s,o=a.shape.length,l=s.shape[i],u=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==i&&(u[c++]=a.shape[g]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;const e=_W({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=ZP({inputs:{x:e},backend:n,attrs:{shape:u}});f[g]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const yX={kernelName:pr,backendName:"webgl",kernelFunc:xX};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vX{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,i=e.numSegments,a=i*Math.ceil(s/n);this.outputShape=[r,a];const o="0.0",l="sumValue",u=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wX(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:i}=t,{numSegments:a}=r,o=s.shape.length,l=[];let u=0;const c=Ku([u],o);let h=s;null!=c&&(h=hB({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Xu(1,o)[0]);const d=Yf(h.shape,u,a),p=w([h.shape[u]]),f=ZP({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=Ds(s.dtype),m=(e,t,r,s,i)=>{const a=e.shape[0],o=e.shape[1],u=Jf(o,i),c={windowSize:u,inSize:o,batchSize:a,numSegments:i},h=new vX(c,t),d=n.compileAndRun(h,[e,r],s);if(l.push(d),d.shape[1]===i)return d;const p=sK({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=iX({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});l.push(p),l.push(f);const g=m(d,t,f,s,i);return g},b=m(f,"unsortedSegmentSum",i,g,a),x=ZP({inputs:{x:b},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const e=qu(c);y=hB({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const kX={kernelName:fr,backendName:"webgl",kernelFunc:wX},IX=[mB,yB,kB,CB,TB,AB,DB,MB,VB,HB,qB,YB,eW,sW,oW,hW,pW,bW,yW,wW,CW,DW,MW,zW,KW,JW,eU,AP,sU,pU,kU,TU,RU,AU,DU,MU,PU,UU,HU,ZU,eV,nV,iV,uV,pV,gV,xV,wV,IV,NV,_V,OV,zV,UV,GV,KV,YV,eG,nG,iG,uG,dG,bG,yG,kG,$G,RG,DG,RP,MG,uU,PG,UG,HG,MP,XG,QG,tH,iH,lH,dH,gH,yH,IH,$H,EH,FH,OH,LH,WH,VH,HH,KH,XH,QH,rj,oj,yj,JP,Ij,$j,Ej,Aj,WW,Oj,Pj,Wj,Hj,Xj,BP,Yj,Qj,tK,rK,iK,VW,dj,lK,dK,mK,QP,vK,IK,NK,RK,DK,MK,PK,UK,HK,qK,YK,eq,sq,oq,cq,pq,AW,bj,mq,xq,vq,kq,Sq,$q,Tq,Rq,Fq,Mq,Pq,Wq,Gq,jq,qq,Jq,gj,cB,Qq,nX,aX,dX,gX,dB,bX,yX,kX,Lj];for(const CX of IX)Er(CX)},4870:function(e,t,n){"use strict";n.d(t,{Bj:function(){return i},Fl:function(){return Ge},IU:function(){return Te},Jd:function(){return I},PG:function(){return Se},SU:function(){return Pe},Um:function(){return we},WL:function(){return We},X$:function(){return N},X3:function(){return Ne},XI:function(){return Me},Xl:function(){return Ee},dq:function(){return De},iH:function(){return Oe},j:function(){return C},lk:function(){return S},qj:function(){return ve},qq:function(){return y},yT:function(){return $e}});n(7658);var r=n(7139);let s;class i{constructor(e=!1){this.active=!0,this.effects=[],this.cleanups=[],!e&&s&&(this.parent=s,this.index=(s.scopes||(s.scopes=[])).push(this)-1)}run(e){if(this.active){const t=s;try{return s=this,e()}finally{s=t}}else 0}on(){s=this}off(){s=this.parent}stop(e){if(this.active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.active=!1}}}function a(e,t=s){t&&t.active&&t.effects.push(e)}const o=e=>{const t=new Set(e);return t.w=0,t.n=0,t},l=e=>(e.w&f)>0,u=e=>(e.n&f)>0,c=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=f},h=e=>{const{deps:t}=e;if(t.length){let n=0;for(let r=0;r<t.length;r++){const s=t[r];l(s)&&!u(s)?s.delete(e):t[n++]=s,s.w&=~f,s.n&=~f}t.length=n}},d=new WeakMap;let p=0,f=1;const g=30;let m;const b=Symbol(""),x=Symbol("");class y{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,a(this,n)}run(){if(!this.active)return this.fn();let e=m,t=w;while(e){if(e===this)return;e=e.parent}try{return this.parent=m,m=this,w=!0,f=1<<++p,p<=g?c(this):v(this),this.fn()}finally{p<=g&&h(this),f=1<<--p,m=this.parent,w=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){m===this?this.deferStop=!0:this.active&&(v(this),this.onStop&&this.onStop(),this.active=!1)}}function v(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let w=!0;const k=[];function I(){k.push(w),w=!1}function S(){const e=k.pop();w=void 0===e||e}function C(e,t,n){if(w&&m){let t=d.get(e);t||d.set(e,t=new Map);let r=t.get(n);r||t.set(n,r=o());const s=void 0;$(r,s)}}function $(e,t){let n=!1;p<=g?u(e)||(e.n|=f,n=!l(e)):n=!e.has(m),n&&(e.add(m),m.deps.push(e))}function N(e,t,n,s,i,a){const l=d.get(e);if(!l)return;let u=[];if("clear"===t)u=[...l.values()];else if("length"===n&&(0,r.kJ)(e))l.forEach(((e,t)=>{("length"===t||t>=s)&&u.push(e)}));else switch(void 0!==n&&u.push(l.get(n)),t){case"add":(0,r.kJ)(e)?(0,r.S0)(n)&&u.push(l.get("length")):(u.push(l.get(b)),(0,r._N)(e)&&u.push(l.get(x)));break;case"delete":(0,r.kJ)(e)||(u.push(l.get(b)),(0,r._N)(e)&&u.push(l.get(x)));break;case"set":(0,r._N)(e)&&u.push(l.get(b));break}if(1===u.length)u[0]&&T(u[0]);else{const e=[];for(const t of u)t&&e.push(...t);T(o(e))}}function T(e,t){const n=(0,r.kJ)(e)?e:[...e];for(const r of n)r.computed&&E(r,t);for(const r of n)r.computed||E(r,t)}function E(e,t){(e!==m||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const R=(0,r.fY)("__proto__,__v_isRef,__isVue"),_=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter(r.yk)),A=L(),F=L(!1,!0),D=L(!0),O=M();function M(){const e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){const n=Te(this);for(let t=0,s=this.length;t<s;t++)C(n,"get",t+"");const r=n[t](...e);return-1===r||!1===r?n[t](...e.map(Te)):r}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){I();const n=Te(this)[t].apply(this,e);return S(),n}})),e}function L(e=!1,t=!1){return function(n,s,i){if("__v_isReactive"===s)return!e;if("__v_isReadonly"===s)return e;if("__v_isShallow"===s)return t;if("__v_raw"===s&&i===(e?t?be:me:t?ge:fe).get(n))return n;const a=(0,r.kJ)(n);if(!e&&a&&(0,r.RI)(O,s))return Reflect.get(O,s,i);const o=Reflect.get(n,s,i);return((0,r.yk)(s)?_.has(s):R(s))?o:(e||C(n,"get",s),t?o:De(o)?a&&(0,r.S0)(s)?o:o.value:(0,r.Kn)(o)?e?ke(o):ve(o):o)}}const z=B(),P=B(!0);function B(e=!1){return function(t,n,s,i){let a=t[n];if(Ce(a)&&De(a)&&!De(s))return!1;if(!e&&($e(s)||Ce(s)||(a=Te(a),s=Te(s)),!(0,r.kJ)(t)&&De(a)&&!De(s)))return a.value=s,!0;const o=(0,r.kJ)(t)&&(0,r.S0)(n)?Number(n)<t.length:(0,r.RI)(t,n),l=Reflect.set(t,n,s,i);return t===Te(i)&&(o?(0,r.aU)(s,a)&&N(t,"set",n,s,a):N(t,"add",n,s)),l}}function W(e,t){const n=(0,r.RI)(e,t),s=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&N(e,"delete",t,void 0,s),i}function U(e,t){const n=Reflect.has(e,t);return(0,r.yk)(t)&&_.has(t)||C(e,"has",t),n}function V(e){return C(e,"iterate",(0,r.kJ)(e)?"length":b),Reflect.ownKeys(e)}const G={get:A,set:z,deleteProperty:W,has:U,ownKeys:V},H={get:D,set(e,t){return!0},deleteProperty(e,t){return!0}},j=(0,r.l7)({},G,{get:F,set:P}),K=e=>e,q=e=>Reflect.getPrototypeOf(e);function X(e,t,n=!1,r=!1){e=e["__v_raw"];const s=Te(e),i=Te(t);n||(t!==i&&C(s,"get",t),C(s,"get",i));const{has:a}=q(s),o=r?K:n?_e:Re;return a.call(s,t)?o(e.get(t)):a.call(s,i)?o(e.get(i)):void(e!==s&&e.get(t))}function J(e,t=!1){const n=this["__v_raw"],r=Te(n),s=Te(e);return t||(e!==s&&C(r,"has",e),C(r,"has",s)),e===s?n.has(e):n.has(e)||n.has(s)}function Y(e,t=!1){return e=e["__v_raw"],!t&&C(Te(e),"iterate",b),Reflect.get(e,"size",e)}function Z(e){e=Te(e);const t=Te(this),n=q(t),r=n.has.call(t,e);return r||(t.add(e),N(t,"add",e,e)),this}function Q(e,t){t=Te(t);const n=Te(this),{has:s,get:i}=q(n);let a=s.call(n,e);a||(e=Te(e),a=s.call(n,e));const o=i.call(n,e);return n.set(e,t),a?(0,r.aU)(t,o)&&N(n,"set",e,t,o):N(n,"add",e,t),this}function ee(e){const t=Te(this),{has:n,get:r}=q(t);let s=n.call(t,e);s||(e=Te(e),s=n.call(t,e));const i=r?r.call(t,e):void 0,a=t.delete(e);return s&&N(t,"delete",e,void 0,i),a}function te(){const e=Te(this),t=0!==e.size,n=void 0,r=e.clear();return t&&N(e,"clear",void 0,void 0,n),r}function ne(e,t){return function(n,r){const s=this,i=s["__v_raw"],a=Te(i),o=t?K:e?_e:Re;return!e&&C(a,"iterate",b),i.forEach(((e,t)=>n.call(r,o(e),o(t),s)))}}function re(e,t,n){return function(...s){const i=this["__v_raw"],a=Te(i),o=(0,r._N)(a),l="entries"===e||e===Symbol.iterator&&o,u="keys"===e&&o,c=i[e](...s),h=n?K:t?_e:Re;return!t&&C(a,"iterate",u?x:b),{next(){const{value:e,done:t}=c.next();return t?{value:e,done:t}:{value:l?[h(e[0]),h(e[1])]:h(e),done:t}},[Symbol.iterator](){return this}}}}function se(e){return function(...t){return"delete"!==e&&this}}function ie(){const e={get(e){return X(this,e)},get size(){return Y(this)},has:J,add:Z,set:Q,delete:ee,clear:te,forEach:ne(!1,!1)},t={get(e){return X(this,e,!1,!0)},get size(){return Y(this)},has:J,add:Z,set:Q,delete:ee,clear:te,forEach:ne(!1,!0)},n={get(e){return X(this,e,!0)},get size(){return Y(this,!0)},has(e){return J.call(this,e,!0)},add:se("add"),set:se("set"),delete:se("delete"),clear:se("clear"),forEach:ne(!0,!1)},r={get(e){return X(this,e,!0,!0)},get size(){return Y(this,!0)},has(e){return J.call(this,e,!0)},add:se("add"),set:se("set"),delete:se("delete"),clear:se("clear"),forEach:ne(!0,!0)},s=["keys","values","entries",Symbol.iterator];return s.forEach((s=>{e[s]=re(s,!1,!1),n[s]=re(s,!0,!1),t[s]=re(s,!1,!0),r[s]=re(s,!0,!0)})),[e,n,t,r]}const[ae,oe,le,ue]=ie();function ce(e,t){const n=t?e?ue:le:e?oe:ae;return(t,s,i)=>"__v_isReactive"===s?!e:"__v_isReadonly"===s?e:"__v_raw"===s?t:Reflect.get((0,r.RI)(n,s)&&s in t?n:t,s,i)}const he={get:ce(!1,!1)},de={get:ce(!1,!0)},pe={get:ce(!0,!1)};const fe=new WeakMap,ge=new WeakMap,me=new WeakMap,be=new WeakMap;function xe(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ye(e){return e["__v_skip"]||!Object.isExtensible(e)?0:xe((0,r.W7)(e))}function ve(e){return Ce(e)?e:Ie(e,!1,G,he,fe)}function we(e){return Ie(e,!1,j,de,ge)}function ke(e){return Ie(e,!0,H,pe,me)}function Ie(e,t,n,s,i){if(!(0,r.Kn)(e))return e;if(e["__v_raw"]&&(!t||!e["__v_isReactive"]))return e;const a=i.get(e);if(a)return a;const o=ye(e);if(0===o)return e;const l=new Proxy(e,2===o?s:n);return i.set(e,l),l}function Se(e){return Ce(e)?Se(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function Ce(e){return!(!e||!e["__v_isReadonly"])}function $e(e){return!(!e||!e["__v_isShallow"])}function Ne(e){return Se(e)||Ce(e)}function Te(e){const t=e&&e["__v_raw"];return t?Te(t):e}function Ee(e){return(0,r.Nj)(e,"__v_skip",!0),e}const Re=e=>(0,r.Kn)(e)?ve(e):e,_e=e=>(0,r.Kn)(e)?ke(e):e;function Ae(e){w&&m&&(e=Te(e),$(e.dep||(e.dep=o())))}function Fe(e,t){e=Te(e),e.dep&&T(e.dep)}function De(e){return!(!e||!0!==e.__v_isRef)}function Oe(e){return Le(e,!1)}function Me(e){return Le(e,!0)}function Le(e,t){return De(e)?e:new ze(e,t)}class ze{constructor(e,t){this.__v_isShallow=t,this.dep=void 0,this.__v_isRef=!0,this._rawValue=t?e:Te(e),this._value=t?e:Re(e)}get value(){return Ae(this),this._value}set value(e){const t=this.__v_isShallow||$e(e)||Ce(e);e=t?e:Te(e),(0,r.aU)(e,this._rawValue)&&(this._rawValue=e,this._value=t?e:Re(e),Fe(this,e))}}function Pe(e){return De(e)?e.value:e}const Be={get:(e,t,n)=>Pe(Reflect.get(e,t,n)),set:(e,t,n,r)=>{const s=e[t];return De(s)&&!De(n)?(s.value=n,!0):Reflect.set(e,t,n,r)}};function We(e){return Se(e)?e:new Proxy(e,Be)}var Ue;class Ve{constructor(e,t,n,r){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this[Ue]=!1,this._dirty=!0,this.effect=new y(e,(()=>{this._dirty||(this._dirty=!0,Fe(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!r,this["__v_isReadonly"]=n}get value(){const e=Te(this);return Ae(e),!e._dirty&&e._cacheable||(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function Ge(e,t,n=!1){let s,i;const a=(0,r.mf)(e);a?(s=e,i=r.dG):(s=e.get,i=e.set);const o=new Ve(s,i,a||!i,n);return o}Ue="__v_isReadonly"},3396:function(e,t,n){"use strict";n.d(t,{$d:function(){return a},Cn:function(){return M},FN:function(){return hn},Fl:function(){return Nn},HY:function(){return _t},JJ:function(){return j},Ko:function(){return Pe},P$:function(){return re},Q6:function(){return ue},U2:function(){return ie},Uk:function(){return Qt},Us:function(){return Ct},Wm:function(){return Xt},Y3:function(){return x},Y8:function(){return ee},YP:function(){return X},_:function(){return qt},aZ:function(){return ce},dD:function(){return O},f3:function(){return K},h:function(){return Tn},iD:function(){return Ut},ic:function(){return Ce},nK:function(){return le},uE:function(){return en},up:function(){return Oe},w5:function(){return L},wg:function(){return Lt},wy:function(){return Ae}});n(7658),n(1703),n(541);var r=n(4870),s=n(7139);function i(e,t,n,r){let s;try{s=r?e(...r):e()}catch(i){o(i,t,n)}return s}function a(e,t,n,r){if((0,s.mf)(e)){const a=i(e,t,n,r);return a&&(0,s.tI)(a)&&a.catch((e=>{o(e,t,n)})),a}const l=[];for(let s=0;s<e.length;s++)l.push(a(e[s],t,n,r));return l}function o(e,t,n,r=!0){const s=t?t.vnode:null;if(t){let r=t.parent;const s=t.proxy,a=n;while(r){const t=r.ec;if(t)for(let n=0;n<t.length;n++)if(!1===t[n](e,s,a))return;r=r.parent}const o=t.appContext.config.errorHandler;if(o)return void i(o,null,10,[e,s,a])}l(e,n,s,r)}function l(e,t,n,r=!0){console.error(e)}let u=!1,c=!1;const h=[];let d=0;const p=[];let f=null,g=0;const m=Promise.resolve();let b=null;function x(e){const t=b||m;return e?t.then(this?e.bind(this):e):t}function y(e){let t=d+1,n=h.length;while(t<n){const r=t+n>>>1,s=$(h[r]);s<e?t=r+1:n=r}return t}function v(e){h.length&&h.includes(e,u&&e.allowRecurse?d+1:d)||(null==e.id?h.push(e):h.splice(y(e.id),0,e),w())}function w(){u||c||(c=!0,b=m.then(T))}function k(e){const t=h.indexOf(e);t>d&&h.splice(t,1)}function I(e){(0,s.kJ)(e)?p.push(...e):f&&f.includes(e,e.allowRecurse?g+1:g)||p.push(e),w()}function S(e,t=(u?d+1:0)){for(0;t<h.length;t++){const e=h[t];e&&e.pre&&(h.splice(t,1),t--,e())}}function C(e){if(p.length){const e=[...new Set(p)];if(p.length=0,f)return void f.push(...e);for(f=e,f.sort(((e,t)=>$(e)-$(t))),g=0;g<f.length;g++)f[g]();f=null,g=0}}const $=e=>null==e.id?1/0:e.id,N=(e,t)=>{const n=$(e)-$(t);if(0===n){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function T(e){c=!1,u=!0,h.sort(N);s.dG;try{for(d=0;d<h.length;d++){const e=h[d];e&&!1!==e.active&&i(e,null,14)}}finally{d=0,h.length=0,C(e),u=!1,b=null,(h.length||p.length)&&T(e)}}new Set;new Map;function E(e,t,...n){if(e.isUnmounted)return;const r=e.vnode.props||s.kT;let i=n;const o=t.startsWith("update:"),l=o&&t.slice(7);if(l&&l in r){const e=`${"modelValue"===l?"model":l}Modifiers`,{number:t,trim:a}=r[e]||s.kT;a&&(i=n.map((e=>e.trim()))),t&&(i=n.map(s.He))}let u;let c=r[u=(0,s.hR)(t)]||r[u=(0,s.hR)((0,s._A)(t))];!c&&o&&(c=r[u=(0,s.hR)((0,s.rs)(t))]),c&&a(c,e,6,i);const h=r[u+"Once"];if(h){if(e.emitted){if(e.emitted[u])return}else e.emitted={};e.emitted[u]=!0,a(h,e,6,i)}}function R(e,t,n=!1){const r=t.emitsCache,i=r.get(e);if(void 0!==i)return i;const a=e.emits;let o={},l=!1;if(!(0,s.mf)(e)){const r=e=>{const n=R(e,t,!0);n&&(l=!0,(0,s.l7)(o,n))};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}return a||l?((0,s.kJ)(a)?a.forEach((e=>o[e]=null)):(0,s.l7)(o,a),(0,s.Kn)(e)&&r.set(e,o),o):((0,s.Kn)(e)&&r.set(e,null),null)}function _(e,t){return!(!e||!(0,s.F7)(t))&&(t=t.slice(2).replace(/Once$/,""),(0,s.RI)(e,t[0].toLowerCase()+t.slice(1))||(0,s.RI)(e,(0,s.rs)(t))||(0,s.RI)(e,t))}let A=null,F=null;function D(e){const t=A;return A=e,F=e&&e.type.__scopeId||null,t}function O(e){F=e}function M(){F=null}function L(e,t=A,n){if(!t)return e;if(e._n)return e;const r=(...n)=>{r._d&&Bt(-1);const s=D(t),i=e(...n);return D(s),r._d&&Bt(1),i};return r._n=!0,r._c=!0,r._d=!0,r}function z(e){const{type:t,vnode:n,proxy:r,withProxy:i,props:a,propsOptions:[l],slots:u,attrs:c,emit:h,render:d,renderCache:p,data:f,setupState:g,ctx:m,inheritAttrs:b}=e;let x,y;const v=D(e);try{if(4&n.shapeFlag){const e=i||r;x=tn(d.call(e,e,p,a,g,f,m)),y=c}else{const e=t;0,x=tn(e.length>1?e(a,{attrs:c,slots:u,emit:h}):e(a,null)),y=t.props?c:P(c)}}catch(k){Ot.length=0,o(k,e,1),x=Xt(Ft)}let w=x;if(y&&!1!==b){const e=Object.keys(y),{shapeFlag:t}=w;e.length&&7&t&&(l&&e.some(s.tR)&&(y=B(y,l)),w=Zt(w,y))}return n.dirs&&(w=Zt(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),x=w,D(v),x}const P=e=>{let t;for(const n in e)("class"===n||"style"===n||(0,s.F7)(n))&&((t||(t={}))[n]=e[n]);return t},B=(e,t)=>{const n={};for(const r in e)(0,s.tR)(r)&&r.slice(9)in t||(n[r]=e[r]);return n};function W(e,t,n){const{props:r,children:s,component:i}=e,{props:a,children:o,patchFlag:l}=t,u=i.emitsOptions;if(t.dirs||t.transition)return!0;if(!(n&&l>=0))return!(!s&&!o||o&&o.$stable)||r!==a&&(r?!a||U(r,a,u):!!a);if(1024&l)return!0;if(16&l)return r?U(r,a,u):!!a;if(8&l){const e=t.dynamicProps;for(let t=0;t<e.length;t++){const n=e[t];if(a[n]!==r[n]&&!_(u,n))return!0}}return!1}function U(e,t,n){const r=Object.keys(t);if(r.length!==Object.keys(e).length)return!0;for(let s=0;s<r.length;s++){const i=r[s];if(t[i]!==e[i]&&!_(n,i))return!0}return!1}function V({vnode:e,parent:t},n){while(t&&t.subTree===e)(e=t.vnode).el=n,t=t.parent}const G=e=>e.__isSuspense;function H(e,t){t&&t.pendingBranch?(0,s.kJ)(e)?t.effects.push(...e):t.effects.push(e):I(e)}function j(e,t){if(cn){let n=cn.provides;const r=cn.parent&&cn.parent.provides;r===n&&(n=cn.provides=Object.create(r)),n[e]=t}else 0}function K(e,t,n=!1){const r=cn||A;if(r){const i=null==r.parent?r.vnode.appContext&&r.vnode.appContext.provides:r.parent.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&(0,s.mf)(t)?t.call(r.proxy):t}else 0}const q={};function X(e,t,n){return J(e,t,n)}function J(e,t,{immediate:n,deep:o,flush:l,onTrack:u,onTrigger:c}=s.kT){const h=cn;let d,p,f=!1,g=!1;if((0,r.dq)(e)?(d=()=>e.value,f=(0,r.yT)(e)):(0,r.PG)(e)?(d=()=>e,o=!0):(0,s.kJ)(e)?(g=!0,f=e.some((e=>(0,r.PG)(e)||(0,r.yT)(e))),d=()=>e.map((e=>(0,r.dq)(e)?e.value:(0,r.PG)(e)?Q(e):(0,s.mf)(e)?i(e,h,2):void 0))):d=(0,s.mf)(e)?t?()=>i(e,h,2):()=>{if(!h||!h.isUnmounted)return p&&p(),a(e,h,3,[m])}:s.dG,t&&o){const e=d;d=()=>Q(e())}let m=e=>{p=w.onStop=()=>{i(e,h,4)}};if(bn)return m=s.dG,t?n&&a(t,h,3,[d(),g?[]:void 0,m]):d(),s.dG;let b=g?[]:q;const x=()=>{if(w.active)if(t){const e=w.run();(o||f||(g?e.some(((e,t)=>(0,s.aU)(e,b[t]))):(0,s.aU)(e,b)))&&(p&&p(),a(t,h,3,[e,b===q?void 0:b,m]),b=e)}else w.run()};let y;x.allowRecurse=!!t,"sync"===l?y=x:"post"===l?y=()=>St(x,h&&h.suspense):(x.pre=!0,h&&(x.id=h.uid),y=()=>v(x));const w=new r.qq(d,y);return t?n?x():b=w.run():"post"===l?St(w.run.bind(w),h&&h.suspense):w.run(),()=>{w.stop(),h&&h.scope&&(0,s.Od)(h.scope.effects,w)}}function Y(e,t,n){const r=this.proxy,i=(0,s.HD)(e)?e.includes(".")?Z(r,e):()=>r[e]:e.bind(r,r);let a;(0,s.mf)(t)?a=t:(a=t.handler,n=t);const o=cn;dn(this);const l=J(i,a.bind(r),n);return o?dn(o):pn(),l}function Z(e,t){const n=t.split(".");return()=>{let t=e;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function Q(e,t){if(!(0,s.Kn)(e)||e["__v_skip"])return e;if(t=t||new Set,t.has(e))return e;if(t.add(e),(0,r.dq)(e))Q(e.value,t);else if((0,s.kJ)(e))for(let n=0;n<e.length;n++)Q(e[n],t);else if((0,s.DM)(e)||(0,s._N)(e))e.forEach((e=>{Q(e,t)}));else if((0,s.PO)(e))for(const n in e)Q(e[n],t);return e}function ee(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return Ie((()=>{e.isMounted=!0})),$e((()=>{e.isUnmounting=!0})),e}const te=[Function,Array],ne={name:"BaseTransition",props:{mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:te,onEnter:te,onAfterEnter:te,onEnterCancelled:te,onBeforeLeave:te,onLeave:te,onAfterLeave:te,onLeaveCancelled:te,onBeforeAppear:te,onAppear:te,onAfterAppear:te,onAppearCancelled:te},setup(e,{slots:t}){const n=hn(),s=ee();let i;return()=>{const a=t.default&&ue(t.default(),!0);if(!a||!a.length)return;let o=a[0];if(a.length>1){let e=!1;for(const t of a)if(t.type!==Ft){0,o=t,e=!0;break}}const l=(0,r.IU)(e),{mode:u}=l;if(s.isLeaving)return ae(o);const c=oe(o);if(!c)return ae(o);const h=ie(c,l,s,n);le(c,h);const d=n.subTree,p=d&&oe(d);let f=!1;const{getTransitionKey:g}=c.type;if(g){const e=g();void 0===i?i=e:e!==i&&(i=e,f=!0)}if(p&&p.type!==Ft&&(!Gt(c,p)||f)){const e=ie(p,l,s,n);if(le(p,e),"out-in"===u)return s.isLeaving=!0,e.afterLeave=()=>{s.isLeaving=!1,n.update()},ae(o);"in-out"===u&&c.type!==Ft&&(e.delayLeave=(e,t,n)=>{const r=se(s,p);r[String(p.key)]=p,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=n})}return o}}},re=ne;function se(e,t){const{leavingVNodes:n}=e;let r=n.get(t.type);return r||(r=Object.create(null),n.set(t.type,r)),r}function ie(e,t,n,r){const{appear:i,mode:o,persisted:l=!1,onBeforeEnter:u,onEnter:c,onAfterEnter:h,onEnterCancelled:d,onBeforeLeave:p,onLeave:f,onAfterLeave:g,onLeaveCancelled:m,onBeforeAppear:b,onAppear:x,onAfterAppear:y,onAppearCancelled:v}=t,w=String(e.key),k=se(n,e),I=(e,t)=>{e&&a(e,r,9,t)},S=(e,t)=>{const n=t[1];I(e,t),(0,s.kJ)(e)?e.every((e=>e.length<=1))&&n():e.length<=1&&n()},C={mode:o,persisted:l,beforeEnter(t){let r=u;if(!n.isMounted){if(!i)return;r=b||u}t._leaveCb&&t._leaveCb(!0);const s=k[w];s&&Gt(e,s)&&s.el._leaveCb&&s.el._leaveCb(),I(r,[t])},enter(e){let t=c,r=h,s=d;if(!n.isMounted){if(!i)return;t=x||c,r=y||h,s=v||d}let a=!1;const o=e._enterCb=t=>{a||(a=!0,I(t?s:r,[e]),C.delayedLeave&&C.delayedLeave(),e._enterCb=void 0)};t?S(t,[e,o]):o()},leave(t,r){const s=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return r();I(p,[t]);let i=!1;const a=t._leaveCb=n=>{i||(i=!0,r(),I(n?m:g,[t]),t._leaveCb=void 0,k[s]===e&&delete k[s])};k[s]=e,f?S(f,[t,a]):a()},clone(e){return ie(e,t,n,r)}};return C}function ae(e){if(de(e))return e=Zt(e),e.children=null,e}function oe(e){return de(e)?e.children?e.children[0]:void 0:e}function le(e,t){6&e.shapeFlag&&e.component?le(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function ue(e,t=!1,n){let r=[],s=0;for(let i=0;i<e.length;i++){let a=e[i];const o=null==n?a.key:String(n)+String(null!=a.key?a.key:i);a.type===_t?(128&a.patchFlag&&s++,r=r.concat(ue(a.children,t,o))):(t||a.type!==Ft)&&r.push(null!=o?Zt(a,{key:o}):a)}if(s>1)for(let i=0;i<r.length;i++)r[i].patchFlag=-2;return r}function ce(e){return(0,s.mf)(e)?{setup:e,name:e.name}:e}const he=e=>!!e.type.__asyncLoader;const de=e=>e.type.__isKeepAlive;RegExp,RegExp;function pe(e,t){return(0,s.kJ)(e)?e.some((e=>pe(e,t))):(0,s.HD)(e)?e.split(",").includes(t):!!e.test&&e.test(t)}function fe(e,t){me(e,"a",t)}function ge(e,t){me(e,"da",t)}function me(e,t,n=cn){const r=e.__wdc||(e.__wdc=()=>{let t=n;while(t){if(t.isDeactivated)return;t=t.parent}return e()});if(ve(t,r,n),n){let e=n.parent;while(e&&e.parent)de(e.parent.vnode)&&be(r,t,n,e),e=e.parent}}function be(e,t,n,r){const i=ve(t,e,r,!0);Ne((()=>{(0,s.Od)(r[t],i)}),n)}function xe(e){let t=e.shapeFlag;256&t&&(t-=256),512&t&&(t-=512),e.shapeFlag=t}function ye(e){return 128&e.shapeFlag?e.ssContent:e}function ve(e,t,n=cn,s=!1){if(n){const i=n[e]||(n[e]=[]),o=t.__weh||(t.__weh=(...s)=>{if(n.isUnmounted)return;(0,r.Jd)(),dn(n);const i=a(t,n,e,s);return pn(),(0,r.lk)(),i});return s?i.unshift(o):i.push(o),o}}const we=e=>(t,n=cn)=>(!bn||"sp"===e)&&ve(e,t,n),ke=we("bm"),Ie=we("m"),Se=we("bu"),Ce=we("u"),$e=we("bum"),Ne=we("um"),Te=we("sp"),Ee=we("rtg"),Re=we("rtc");function _e(e,t=cn){ve("ec",e,t)}function Ae(e,t){const n=A;if(null===n)return e;const r=Sn(n)||n.proxy,i=e.dirs||(e.dirs=[]);for(let a=0;a<t.length;a++){let[e,n,o,l=s.kT]=t[a];(0,s.mf)(e)&&(e={mounted:e,updated:e}),e.deep&&Q(n),i.push({dir:e,instance:r,value:n,oldValue:void 0,arg:o,modifiers:l})}return e}function Fe(e,t,n,s){const i=e.dirs,o=t&&t.dirs;for(let l=0;l<i.length;l++){const u=i[l];o&&(u.oldValue=o[l].value);let c=u.dir[s];c&&((0,r.Jd)(),a(c,n,8,[e.el,u,e,t]),(0,r.lk)())}}const De="components";function Oe(e,t){return Le(De,e,!0,t)||e}const Me=Symbol();function Le(e,t,n=!0,r=!1){const i=A||cn;if(i){const n=i.type;if(e===De){const e=Cn(n,!1);if(e&&(e===t||e===(0,s._A)(t)||e===(0,s.kC)((0,s._A)(t))))return n}const a=ze(i[e]||n[e],t)||ze(i.appContext[e],t);return!a&&r?n:a}}function ze(e,t){return e&&(e[t]||e[(0,s._A)(t)]||e[(0,s.kC)((0,s._A)(t))])}function Pe(e,t,n,r){let i;const a=n&&n[r];if((0,s.kJ)(e)||(0,s.HD)(e)){i=new Array(e.length);for(let n=0,r=e.length;n<r;n++)i[n]=t(e[n],n,void 0,a&&a[n])}else if("number"===typeof e){0,i=new Array(e);for(let n=0;n<e;n++)i[n]=t(n+1,n,void 0,a&&a[n])}else if((0,s.Kn)(e))if(e[Symbol.iterator])i=Array.from(e,((e,n)=>t(e,n,void 0,a&&a[n])));else{const n=Object.keys(e);i=new Array(n.length);for(let r=0,s=n.length;r<s;r++){const s=n[r];i[r]=t(e[s],s,r,a&&a[r])}}else i=[];return n&&(n[r]=i),i}const Be=e=>e?fn(e)?Sn(e)||e.proxy:Be(e.parent):null,We=(0,s.l7)(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Be(e.parent),$root:e=>Be(e.root),$emit:e=>e.emit,$options:e=>qe(e),$forceUpdate:e=>e.f||(e.f=()=>v(e.update)),$nextTick:e=>e.n||(e.n=x.bind(e.proxy)),$watch:e=>Y.bind(e)}),Ue={get({_:e},t){const{ctx:n,setupState:i,data:a,props:o,accessCache:l,type:u,appContext:c}=e;let h;if("$"!==t[0]){const r=l[t];if(void 0!==r)switch(r){case 1:return i[t];case 2:return a[t];case 4:return n[t];case 3:return o[t]}else{if(i!==s.kT&&(0,s.RI)(i,t))return l[t]=1,i[t];if(a!==s.kT&&(0,s.RI)(a,t))return l[t]=2,a[t];if((h=e.propsOptions[0])&&(0,s.RI)(h,t))return l[t]=3,o[t];if(n!==s.kT&&(0,s.RI)(n,t))return l[t]=4,n[t];Ve&&(l[t]=0)}}const d=We[t];let p,f;return d?("$attrs"===t&&(0,r.j)(e,"get",t),d(e)):(p=u.__cssModules)&&(p=p[t])?p:n!==s.kT&&(0,s.RI)(n,t)?(l[t]=4,n[t]):(f=c.config.globalProperties,(0,s.RI)(f,t)?f[t]:void 0)},set({_:e},t,n){const{data:r,setupState:i,ctx:a}=e;return i!==s.kT&&(0,s.RI)(i,t)?(i[t]=n,!0):r!==s.kT&&(0,s.RI)(r,t)?(r[t]=n,!0):!(0,s.RI)(e.props,t)&&(("$"!==t[0]||!(t.slice(1)in e))&&(a[t]=n,!0))},has({_:{data:e,setupState:t,accessCache:n,ctx:r,appContext:i,propsOptions:a}},o){let l;return!!n[o]||e!==s.kT&&(0,s.RI)(e,o)||t!==s.kT&&(0,s.RI)(t,o)||(l=a[0])&&(0,s.RI)(l,o)||(0,s.RI)(r,o)||(0,s.RI)(We,o)||(0,s.RI)(i.config.globalProperties,o)},defineProperty(e,t,n){return null!=n.get?e._.accessCache[t]=0:(0,s.RI)(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};let Ve=!0;function Ge(e){const t=qe(e),n=e.proxy,i=e.ctx;Ve=!1,t.beforeCreate&&je(t.beforeCreate,e,"bc");const{data:a,computed:o,methods:l,watch:u,provide:c,inject:h,created:d,beforeMount:p,mounted:f,beforeUpdate:g,updated:m,activated:b,deactivated:x,beforeDestroy:y,beforeUnmount:v,destroyed:w,unmounted:k,render:I,renderTracked:S,renderTriggered:C,errorCaptured:$,serverPrefetch:N,expose:T,inheritAttrs:E,components:R,directives:_,filters:A}=t,F=null;if(h&&He(h,i,F,e.appContext.config.unwrapInjectedRef),l)for(const r in l){const e=l[r];(0,s.mf)(e)&&(i[r]=e.bind(n))}if(a){0;const t=a.call(n,n);0,(0,s.Kn)(t)&&(e.data=(0,r.qj)(t))}if(Ve=!0,o)for(const r in o){const e=o[r],t=(0,s.mf)(e)?e.bind(n,n):(0,s.mf)(e.get)?e.get.bind(n,n):s.dG;0;const a=!(0,s.mf)(e)&&(0,s.mf)(e.set)?e.set.bind(n):s.dG,l=Nn({get:t,set:a});Object.defineProperty(i,r,{enumerable:!0,configurable:!0,get:()=>l.value,set:e=>l.value=e})}if(u)for(const r in u)Ke(u[r],i,n,r);if(c){const e=(0,s.mf)(c)?c.call(n):c;Reflect.ownKeys(e).forEach((t=>{j(t,e[t])}))}function D(e,t){(0,s.kJ)(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(d&&je(d,e,"c"),D(ke,p),D(Ie,f),D(Se,g),D(Ce,m),D(fe,b),D(ge,x),D(_e,$),D(Re,S),D(Ee,C),D($e,v),D(Ne,k),D(Te,N),(0,s.kJ)(T))if(T.length){const t=e.exposed||(e.exposed={});T.forEach((e=>{Object.defineProperty(t,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});I&&e.render===s.dG&&(e.render=I),null!=E&&(e.inheritAttrs=E),R&&(e.components=R),_&&(e.directives=_)}function He(e,t,n=s.dG,i=!1){(0,s.kJ)(e)&&(e=Qe(e));for(const a in e){const n=e[a];let o;o=(0,s.Kn)(n)?"default"in n?K(n.from||a,n.default,!0):K(n.from||a):K(n),(0,r.dq)(o)&&i?Object.defineProperty(t,a,{enumerable:!0,configurable:!0,get:()=>o.value,set:e=>o.value=e}):t[a]=o}}function je(e,t,n){a((0,s.kJ)(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Ke(e,t,n,r){const i=r.includes(".")?Z(n,r):()=>n[r];if((0,s.HD)(e)){const n=t[e];(0,s.mf)(n)&&X(i,n)}else if((0,s.mf)(e))X(i,e.bind(n));else if((0,s.Kn)(e))if((0,s.kJ)(e))e.forEach((e=>Ke(e,t,n,r)));else{const r=(0,s.mf)(e.handler)?e.handler.bind(n):t[e.handler];(0,s.mf)(r)&&X(i,r,e)}else 0}function qe(e){const t=e.type,{mixins:n,extends:r}=t,{mixins:i,optionsCache:a,config:{optionMergeStrategies:o}}=e.appContext,l=a.get(t);let u;return l?u=l:i.length||n||r?(u={},i.length&&i.forEach((e=>Xe(u,e,o,!0))),Xe(u,t,o)):u=t,(0,s.Kn)(t)&&a.set(t,u),u}function Xe(e,t,n,r=!1){const{mixins:s,extends:i}=t;i&&Xe(e,i,n,!0),s&&s.forEach((t=>Xe(e,t,n,!0)));for(const a in t)if(r&&"expose"===a);else{const r=Je[a]||n&&n[a];e[a]=r?r(e[a],t[a]):t[a]}return e}const Je={data:Ye,props:tt,emits:tt,methods:tt,computed:tt,beforeCreate:et,created:et,beforeMount:et,mounted:et,beforeUpdate:et,updated:et,beforeDestroy:et,beforeUnmount:et,destroyed:et,unmounted:et,activated:et,deactivated:et,errorCaptured:et,serverPrefetch:et,components:tt,directives:tt,watch:nt,provide:Ye,inject:Ze};function Ye(e,t){return t?e?function(){return(0,s.l7)((0,s.mf)(e)?e.call(this,this):e,(0,s.mf)(t)?t.call(this,this):t)}:t:e}function Ze(e,t){return tt(Qe(e),Qe(t))}function Qe(e){if((0,s.kJ)(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function et(e,t){return e?[...new Set([].concat(e,t))]:t}function tt(e,t){return e?(0,s.l7)((0,s.l7)(Object.create(null),e),t):t}function nt(e,t){if(!e)return t;if(!t)return e;const n=(0,s.l7)(Object.create(null),e);for(const r in t)n[r]=et(e[r],t[r]);return n}function rt(e,t,n,i=!1){const a={},o={};(0,s.Nj)(o,Ht,1),e.propsDefaults=Object.create(null),it(e,t,a,o);for(const r in e.propsOptions[0])r in a||(a[r]=void 0);n?e.props=i?a:(0,r.Um)(a):e.type.props?e.props=a:e.props=o,e.attrs=o}function st(e,t,n,i){const{props:a,attrs:o,vnode:{patchFlag:l}}=e,u=(0,r.IU)(a),[c]=e.propsOptions;let h=!1;if(!(i||l>0)||16&l){let r;it(e,t,a,o)&&(h=!0);for(const i in u)t&&((0,s.RI)(t,i)||(r=(0,s.rs)(i))!==i&&(0,s.RI)(t,r))||(c?!n||void 0===n[i]&&void 0===n[r]||(a[i]=at(c,u,i,void 0,e,!0)):delete a[i]);if(o!==u)for(const e in o)t&&(0,s.RI)(t,e)||(delete o[e],h=!0)}else if(8&l){const n=e.vnode.dynamicProps;for(let r=0;r<n.length;r++){let i=n[r];if(_(e.emitsOptions,i))continue;const l=t[i];if(c)if((0,s.RI)(o,i))l!==o[i]&&(o[i]=l,h=!0);else{const t=(0,s._A)(i);a[t]=at(c,u,t,l,e,!1)}else l!==o[i]&&(o[i]=l,h=!0)}}h&&(0,r.X$)(e,"set","$attrs")}function it(e,t,n,i){const[a,o]=e.propsOptions;let l,u=!1;if(t)for(let r in t){if((0,s.Gg)(r))continue;const c=t[r];let h;a&&(0,s.RI)(a,h=(0,s._A)(r))?o&&o.includes(h)?(l||(l={}))[h]=c:n[h]=c:_(e.emitsOptions,r)||r in i&&c===i[r]||(i[r]=c,u=!0)}if(o){const t=(0,r.IU)(n),i=l||s.kT;for(let r=0;r<o.length;r++){const l=o[r];n[l]=at(a,t,l,i[l],e,!(0,s.RI)(i,l))}}return u}function at(e,t,n,r,i,a){const o=e[n];if(null!=o){const e=(0,s.RI)(o,"default");if(e&&void 0===r){const e=o.default;if(o.type!==Function&&(0,s.mf)(e)){const{propsDefaults:s}=i;n in s?r=s[n]:(dn(i),r=s[n]=e.call(null,t),pn())}else r=e}o[0]&&(a&&!e?r=!1:!o[1]||""!==r&&r!==(0,s.rs)(n)||(r=!0))}return r}function ot(e,t,n=!1){const r=t.propsCache,i=r.get(e);if(i)return i;const a=e.props,o={},l=[];let u=!1;if(!(0,s.mf)(e)){const r=e=>{u=!0;const[n,r]=ot(e,t,!0);(0,s.l7)(o,n),r&&l.push(...r)};!n&&t.mixins.length&&t.mixins.forEach(r),e.extends&&r(e.extends),e.mixins&&e.mixins.forEach(r)}if(!a&&!u)return(0,s.Kn)(e)&&r.set(e,s.Z6),s.Z6;if((0,s.kJ)(a))for(let h=0;h<a.length;h++){0;const e=(0,s._A)(a[h]);lt(e)&&(o[e]=s.kT)}else if(a){0;for(const e in a){const t=(0,s._A)(e);if(lt(t)){const n=a[e],r=o[t]=(0,s.kJ)(n)||(0,s.mf)(n)?{type:n}:n;if(r){const e=ht(Boolean,r.type),n=ht(String,r.type);r[0]=e>-1,r[1]=n<0||e<n,(e>-1||(0,s.RI)(r,"default"))&&l.push(t)}}}}const c=[o,l];return(0,s.Kn)(e)&&r.set(e,c),c}function lt(e){return"$"!==e[0]}function ut(e){const t=e&&e.toString().match(/^\s*function (\w+)/);return t?t[1]:null===e?"null":""}function ct(e,t){return ut(e)===ut(t)}function ht(e,t){return(0,s.kJ)(t)?t.findIndex((t=>ct(t,e))):(0,s.mf)(t)&&ct(t,e)?0:-1}const dt=e=>"_"===e[0]||"$stable"===e,pt=e=>(0,s.kJ)(e)?e.map(tn):[tn(e)],ft=(e,t,n)=>{if(t._n)return t;const r=L(((...e)=>pt(t(...e))),n);return r._c=!1,r},gt=(e,t,n)=>{const r=e._ctx;for(const i in e){if(dt(i))continue;const n=e[i];if((0,s.mf)(n))t[i]=ft(i,n,r);else if(null!=n){0;const e=pt(n);t[i]=()=>e}}},mt=(e,t)=>{const n=pt(t);e.slots.default=()=>n},bt=(e,t)=>{if(32&e.vnode.shapeFlag){const n=t._;n?(e.slots=(0,r.IU)(t),(0,s.Nj)(t,"_",n)):gt(t,e.slots={})}else e.slots={},t&&mt(e,t);(0,s.Nj)(e.slots,Ht,1)},xt=(e,t,n)=>{const{vnode:r,slots:i}=e;let a=!0,o=s.kT;if(32&r.shapeFlag){const e=t._;e?n&&1===e?a=!1:((0,s.l7)(i,t),n||1!==e||delete i._):(a=!t.$stable,gt(t,i)),o=t}else t&&(mt(e,t),o={default:1});if(a)for(const s in i)dt(s)||s in o||delete i[s]};function yt(){return{app:null,config:{isNativeTag:s.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let vt=0;function wt(e,t){return function(n,r=null){(0,s.mf)(n)||(n=Object.assign({},n)),null==r||(0,s.Kn)(r)||(r=null);const i=yt(),a=new Set;let o=!1;const l=i.app={_uid:vt++,_component:n,_props:r,_container:null,_context:i,_instance:null,version:En,get config(){return i.config},set config(e){0},use(e,...t){return a.has(e)||(e&&(0,s.mf)(e.install)?(a.add(e),e.install(l,...t)):(0,s.mf)(e)&&(a.add(e),e(l,...t))),l},mixin(e){return i.mixins.includes(e)||i.mixins.push(e),l},component(e,t){return t?(i.components[e]=t,l):i.components[e]},directive(e,t){return t?(i.directives[e]=t,l):i.directives[e]},mount(s,a,u){if(!o){0;const c=Xt(n,r);return c.appContext=i,a&&t?t(c,s):e(c,s,u),o=!0,l._container=s,s.__vue_app__=l,Sn(c.component)||c.component.proxy}},unmount(){o&&(e(null,l._container),delete l._container.__vue_app__)},provide(e,t){return i.provides[e]=t,l}};return l}}function kt(e,t,n,a,o=!1){if((0,s.kJ)(e))return void e.forEach(((e,r)=>kt(e,t&&((0,s.kJ)(t)?t[r]:t),n,a,o)));if(he(a)&&!o)return;const l=4&a.shapeFlag?Sn(a.component)||a.component.proxy:a.el,u=o?null:l,{i:c,r:h}=e;const d=t&&t.r,p=c.refs===s.kT?c.refs={}:c.refs,f=c.setupState;if(null!=d&&d!==h&&((0,s.HD)(d)?(p[d]=null,(0,s.RI)(f,d)&&(f[d]=null)):(0,r.dq)(d)&&(d.value=null)),(0,s.mf)(h))i(h,c,12,[u,p]);else{const t=(0,s.HD)(h),i=(0,r.dq)(h);if(t||i){const r=()=>{if(e.f){const n=t?p[h]:h.value;o?(0,s.kJ)(n)&&(0,s.Od)(n,l):(0,s.kJ)(n)?n.includes(l)||n.push(l):t?(p[h]=[l],(0,s.RI)(f,h)&&(f[h]=p[h])):(h.value=[l],e.k&&(p[e.k]=h.value))}else t?(p[h]=u,(0,s.RI)(f,h)&&(f[h]=u)):i&&(h.value=u,e.k&&(p[e.k]=u))};u?(r.id=-1,St(r,n)):r()}else 0}}function It(){}const St=H;function Ct(e){return $t(e)}function $t(e,t){It();const n=(0,s.E9)();n.__VUE__=!0;const{insert:i,remove:a,patchProp:o,createElement:l,createText:u,createComment:c,setText:h,setElementText:d,parentNode:p,nextSibling:f,setScopeId:g=s.dG,cloneNode:m,insertStaticContent:b}=e,x=(e,t,n,r=null,s=null,i=null,a=!1,o=null,l=!!t.dynamicChildren)=>{if(e===t)return;e&&!Gt(e,t)&&(r=Q(e),q(e,s,i,!0),e=null),-2===t.patchFlag&&(l=!1,t.dynamicChildren=null);const{type:u,ref:c,shapeFlag:h}=t;switch(u){case At:y(e,t,n,r);break;case Ft:w(e,t,n,r);break;case Dt:null==e&&I(t,n,r,a);break;case _t:O(e,t,n,r,s,i,a,o,l);break;default:1&h?T(e,t,n,r,s,i,a,o,l):6&h?M(e,t,n,r,s,i,a,o,l):(64&h||128&h)&&u.process(e,t,n,r,s,i,a,o,l,te)}null!=c&&s&&kt(c,e&&e.ref,i,t||e,!t)},y=(e,t,n,r)=>{if(null==e)i(t.el=u(t.children),n,r);else{const n=t.el=e.el;t.children!==e.children&&h(n,t.children)}},w=(e,t,n,r)=>{null==e?i(t.el=c(t.children||""),n,r):t.el=e.el},I=(e,t,n,r)=>{[e.el,e.anchor]=b(e.children,t,n,r,e.el,e.anchor)},$=({el:e,anchor:t},n,r)=>{let s;while(e&&e!==t)s=f(e),i(e,n,r),e=s;i(t,n,r)},N=({el:e,anchor:t})=>{let n;while(e&&e!==t)n=f(e),a(e),e=n;a(t)},T=(e,t,n,r,s,i,a,o,l)=>{a=a||"svg"===t.type,null==e?E(t,n,r,s,i,a,o,l):A(e,t,s,i,a,o,l)},E=(e,t,n,r,a,u,c,h)=>{let p,f;const{type:g,props:b,shapeFlag:x,transition:y,patchFlag:v,dirs:w}=e;if(e.el&&void 0!==m&&-1===v)p=e.el=m(e.el);else{if(p=e.el=l(e.type,u,b&&b.is,b),8&x?d(p,e.children):16&x&&_(e.children,p,null,r,a,u&&"foreignObject"!==g,c,h),w&&Fe(e,null,r,"created"),b){for(const t in b)"value"===t||(0,s.Gg)(t)||o(p,t,null,b[t],u,e.children,r,a,Z);"value"in b&&o(p,"value",null,b.value),(f=b.onVnodeBeforeMount)&&an(f,r,e)}R(p,e,e.scopeId,c,r)}w&&Fe(e,null,r,"beforeMount");const k=(!a||a&&!a.pendingBranch)&&y&&!y.persisted;k&&y.beforeEnter(p),i(p,t,n),((f=b&&b.onVnodeMounted)||k||w)&&St((()=>{f&&an(f,r,e),k&&y.enter(p),w&&Fe(e,null,r,"mounted")}),a)},R=(e,t,n,r,s)=>{if(n&&g(e,n),r)for(let i=0;i<r.length;i++)g(e,r[i]);if(s){let n=s.subTree;if(t===n){const t=s.vnode;R(e,t,t.scopeId,t.slotScopeIds,s.parent)}}},_=(e,t,n,r,s,i,a,o,l=0)=>{for(let u=l;u<e.length;u++){const l=e[u]=o?nn(e[u]):tn(e[u]);x(null,l,t,n,r,s,i,a,o)}},A=(e,t,n,r,i,a,l)=>{const u=t.el=e.el;let{patchFlag:c,dynamicChildren:h,dirs:p}=t;c|=16&e.patchFlag;const f=e.props||s.kT,g=t.props||s.kT;let m;n&&Nt(n,!1),(m=g.onVnodeBeforeUpdate)&&an(m,n,t,e),p&&Fe(t,e,n,"beforeUpdate"),n&&Nt(n,!0);const b=i&&"foreignObject"!==t.type;if(h?F(e.dynamicChildren,h,u,n,r,b,a):l||G(e,t,u,null,n,r,b,a,!1),c>0){if(16&c)D(u,t,f,g,n,r,i);else if(2&c&&f.class!==g.class&&o(u,"class",null,g.class,i),4&c&&o(u,"style",f.style,g.style,i),8&c){const s=t.dynamicProps;for(let t=0;t<s.length;t++){const a=s[t],l=f[a],c=g[a];c===l&&"value"!==a||o(u,a,l,c,i,e.children,n,r,Z)}}1&c&&e.children!==t.children&&d(u,t.children)}else l||null!=h||D(u,t,f,g,n,r,i);((m=g.onVnodeUpdated)||p)&&St((()=>{m&&an(m,n,t,e),p&&Fe(t,e,n,"updated")}),r)},F=(e,t,n,r,s,i,a)=>{for(let o=0;o<t.length;o++){const l=e[o],u=t[o],c=l.el&&(l.type===_t||!Gt(l,u)||70&l.shapeFlag)?p(l.el):n;x(l,u,c,null,r,s,i,a,!0)}},D=(e,t,n,r,i,a,l)=>{if(n!==r){for(const u in r){if((0,s.Gg)(u))continue;const c=r[u],h=n[u];c!==h&&"value"!==u&&o(e,u,h,c,l,t.children,i,a,Z)}if(n!==s.kT)for(const u in n)(0,s.Gg)(u)||u in r||o(e,u,n[u],null,l,t.children,i,a,Z);"value"in r&&o(e,"value",n.value,r.value)}},O=(e,t,n,r,s,a,o,l,c)=>{const h=t.el=e?e.el:u(""),d=t.anchor=e?e.anchor:u("");let{patchFlag:p,dynamicChildren:f,slotScopeIds:g}=t;g&&(l=l?l.concat(g):g),null==e?(i(h,n,r),i(d,n,r),_(t.children,n,d,s,a,o,l,c)):p>0&&64&p&&f&&e.dynamicChildren?(F(e.dynamicChildren,f,n,s,a,o,l),(null!=t.key||s&&t===s.subTree)&&Tt(e,t,!0)):G(e,t,n,d,s,a,o,l,c)},M=(e,t,n,r,s,i,a,o,l)=>{t.slotScopeIds=o,null==e?512&t.shapeFlag?s.ctx.activate(t,n,r,a,l):L(t,n,r,s,i,a,l):P(e,t,l)},L=(e,t,n,r,s,i,a)=>{const o=e.component=un(e,r,s);if(de(e)&&(o.ctx.renderer=te),xn(o),o.asyncDep){if(s&&s.registerDep(o,B),!e.el){const e=o.subTree=Xt(Ft);w(null,e,t,n)}}else B(o,e,t,n,s,i,a)},P=(e,t,n)=>{const r=t.component=e.component;if(W(e,t,n)){if(r.asyncDep&&!r.asyncResolved)return void U(r,t,n);r.next=t,k(r.update),r.update()}else t.el=e.el,r.vnode=t},B=(e,t,n,i,a,o,l)=>{const u=()=>{if(e.isMounted){let t,{next:n,bu:r,u:i,parent:u,vnode:c}=e,h=n;0,Nt(e,!1),n?(n.el=c.el,U(e,n,l)):n=c,r&&(0,s.ir)(r),(t=n.props&&n.props.onVnodeBeforeUpdate)&&an(t,u,n,c),Nt(e,!0);const d=z(e);0;const f=e.subTree;e.subTree=d,x(f,d,p(f.el),Q(f),e,a,o),n.el=d.el,null===h&&V(e,d.el),i&&St(i,a),(t=n.props&&n.props.onVnodeUpdated)&&St((()=>an(t,u,n,c)),a)}else{let r;const{el:l,props:u}=t,{bm:c,m:h,parent:d}=e,p=he(t);if(Nt(e,!1),c&&(0,s.ir)(c),!p&&(r=u&&u.onVnodeBeforeMount)&&an(r,d,t),Nt(e,!0),l&&re){const n=()=>{e.subTree=z(e),re(l,e.subTree,e,a,null)};p?t.type.__asyncLoader().then((()=>!e.isUnmounted&&n())):n()}else{0;const r=e.subTree=z(e);0,x(null,r,n,i,e,a,o),t.el=r.el}if(h&&St(h,a),!p&&(r=u&&u.onVnodeMounted)){const e=t;St((()=>an(r,d,e)),a)}(256&t.shapeFlag||d&&he(d.vnode)&&256&d.vnode.shapeFlag)&&e.a&&St(e.a,a),e.isMounted=!0,t=n=i=null}},c=e.effect=new r.qq(u,(()=>v(h)),e.scope),h=e.update=()=>c.run();h.id=e.uid,Nt(e,!0),h()},U=(e,t,n)=>{t.component=e;const s=e.vnode.props;e.vnode=t,e.next=null,st(e,t.props,s,n),xt(e,t.children,n),(0,r.Jd)(),S(),(0,r.lk)()},G=(e,t,n,r,s,i,a,o,l=!1)=>{const u=e&&e.children,c=e?e.shapeFlag:0,h=t.children,{patchFlag:p,shapeFlag:f}=t;if(p>0){if(128&p)return void j(u,h,n,r,s,i,a,o,l);if(256&p)return void H(u,h,n,r,s,i,a,o,l)}8&f?(16&c&&Z(u,s,i),h!==u&&d(n,h)):16&c?16&f?j(u,h,n,r,s,i,a,o,l):Z(u,s,i,!0):(8&c&&d(n,""),16&f&&_(h,n,r,s,i,a,o,l))},H=(e,t,n,r,i,a,o,l,u)=>{e=e||s.Z6,t=t||s.Z6;const c=e.length,h=t.length,d=Math.min(c,h);let p;for(p=0;p<d;p++){const r=t[p]=u?nn(t[p]):tn(t[p]);x(e[p],r,n,null,i,a,o,l,u)}c>h?Z(e,i,a,!0,!1,d):_(t,n,r,i,a,o,l,u,d)},j=(e,t,n,r,i,a,o,l,u)=>{let c=0;const h=t.length;let d=e.length-1,p=h-1;while(c<=d&&c<=p){const r=e[c],s=t[c]=u?nn(t[c]):tn(t[c]);if(!Gt(r,s))break;x(r,s,n,null,i,a,o,l,u),c++}while(c<=d&&c<=p){const r=e[d],s=t[p]=u?nn(t[p]):tn(t[p]);if(!Gt(r,s))break;x(r,s,n,null,i,a,o,l,u),d--,p--}if(c>d){if(c<=p){const e=p+1,s=e<h?t[e].el:r;while(c<=p)x(null,t[c]=u?nn(t[c]):tn(t[c]),n,s,i,a,o,l,u),c++}}else if(c>p)while(c<=d)q(e[c],i,a,!0),c++;else{const f=c,g=c,m=new Map;for(c=g;c<=p;c++){const e=t[c]=u?nn(t[c]):tn(t[c]);null!=e.key&&m.set(e.key,c)}let b,y=0;const v=p-g+1;let w=!1,k=0;const I=new Array(v);for(c=0;c<v;c++)I[c]=0;for(c=f;c<=d;c++){const r=e[c];if(y>=v){q(r,i,a,!0);continue}let s;if(null!=r.key)s=m.get(r.key);else for(b=g;b<=p;b++)if(0===I[b-g]&&Gt(r,t[b])){s=b;break}void 0===s?q(r,i,a,!0):(I[s-g]=c+1,s>=k?k=s:w=!0,x(r,t[s],n,null,i,a,o,l,u),y++)}const S=w?Et(I):s.Z6;for(b=S.length-1,c=v-1;c>=0;c--){const e=g+c,s=t[e],d=e+1<h?t[e+1].el:r;0===I[c]?x(null,s,n,d,i,a,o,l,u):w&&(b<0||c!==S[b]?K(s,n,d,2):b--)}}},K=(e,t,n,r,s=null)=>{const{el:a,type:o,transition:l,children:u,shapeFlag:c}=e;if(6&c)return void K(e.component.subTree,t,n,r);if(128&c)return void e.suspense.move(t,n,r);if(64&c)return void o.move(e,t,n,te);if(o===_t){i(a,t,n);for(let e=0;e<u.length;e++)K(u[e],t,n,r);return void i(e.anchor,t,n)}if(o===Dt)return void $(e,t,n);const h=2!==r&&1&c&&l;if(h)if(0===r)l.beforeEnter(a),i(a,t,n),St((()=>l.enter(a)),s);else{const{leave:e,delayLeave:r,afterLeave:s}=l,o=()=>i(a,t,n),u=()=>{e(a,(()=>{o(),s&&s()}))};r?r(a,o,u):u()}else i(a,t,n)},q=(e,t,n,r=!1,s=!1)=>{const{type:i,props:a,ref:o,children:l,dynamicChildren:u,shapeFlag:c,patchFlag:h,dirs:d}=e;if(null!=o&&kt(o,null,n,e,!0),256&c)return void t.ctx.deactivate(e);const p=1&c&&d,f=!he(e);let g;if(f&&(g=a&&a.onVnodeBeforeUnmount)&&an(g,t,e),6&c)Y(e.component,n,r);else{if(128&c)return void e.suspense.unmount(n,r);p&&Fe(e,null,t,"beforeUnmount"),64&c?e.type.remove(e,t,n,s,te,r):u&&(i!==_t||h>0&&64&h)?Z(u,t,n,!1,!0):(i===_t&&384&h||!s&&16&c)&&Z(l,t,n),r&&X(e)}(f&&(g=a&&a.onVnodeUnmounted)||p)&&St((()=>{g&&an(g,t,e),p&&Fe(e,null,t,"unmounted")}),n)},X=e=>{const{type:t,el:n,anchor:r,transition:s}=e;if(t===_t)return void J(n,r);if(t===Dt)return void N(e);const i=()=>{a(n),s&&!s.persisted&&s.afterLeave&&s.afterLeave()};if(1&e.shapeFlag&&s&&!s.persisted){const{leave:t,delayLeave:r}=s,a=()=>t(n,i);r?r(e.el,i,a):a()}else i()},J=(e,t)=>{let n;while(e!==t)n=f(e),a(e),e=n;a(t)},Y=(e,t,n)=>{const{bum:r,scope:i,update:a,subTree:o,um:l}=e;r&&(0,s.ir)(r),i.stop(),a&&(a.active=!1,q(o,e,t,n)),l&&St(l,t),St((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve())},Z=(e,t,n,r=!1,s=!1,i=0)=>{for(let a=i;a<e.length;a++)q(e[a],t,n,r,s)},Q=e=>6&e.shapeFlag?Q(e.component.subTree):128&e.shapeFlag?e.suspense.next():f(e.anchor||e.el),ee=(e,t,n)=>{null==e?t._vnode&&q(t._vnode,null,null,!0):x(t._vnode||null,e,t,null,null,null,n),S(),C(),t._vnode=e},te={p:x,um:q,m:K,r:X,mt:L,mc:_,pc:G,pbc:F,n:Q,o:e};let ne,re;return t&&([ne,re]=t(te)),{render:ee,hydrate:ne,createApp:wt(ee,ne)}}function Nt({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Tt(e,t,n=!1){const r=e.children,i=t.children;if((0,s.kJ)(r)&&(0,s.kJ)(i))for(let s=0;s<r.length;s++){const e=r[s];let t=i[s];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=i[s]=nn(i[s]),t.el=e.el),n||Tt(e,t))}}function Et(e){const t=e.slice(),n=[0];let r,s,i,a,o;const l=e.length;for(r=0;r<l;r++){const l=e[r];if(0!==l){if(s=n[n.length-1],e[s]<l){t[r]=s,n.push(r);continue}i=0,a=n.length-1;while(i<a)o=i+a>>1,e[n[o]]<l?i=o+1:a=o;l<e[n[i]]&&(i>0&&(t[r]=n[i-1]),n[i]=r)}}i=n.length,a=n[i-1];while(i-- >0)n[i]=a,a=t[a];return n}const Rt=e=>e.__isTeleport;const _t=Symbol(void 0),At=Symbol(void 0),Ft=Symbol(void 0),Dt=Symbol(void 0),Ot=[];let Mt=null;function Lt(e=!1){Ot.push(Mt=e?null:[])}function zt(){Ot.pop(),Mt=Ot[Ot.length-1]||null}let Pt=1;function Bt(e){Pt+=e}function Wt(e){return e.dynamicChildren=Pt>0?Mt||s.Z6:null,zt(),Pt>0&&Mt&&Mt.push(e),e}function Ut(e,t,n,r,s,i){return Wt(qt(e,t,n,r,s,i,!0))}function Vt(e){return!!e&&!0===e.__v_isVNode}function Gt(e,t){return e.type===t.type&&e.key===t.key}const Ht="__vInternal",jt=({key:e})=>null!=e?e:null,Kt=({ref:e,ref_key:t,ref_for:n})=>null!=e?(0,s.HD)(e)||(0,r.dq)(e)||(0,s.mf)(e)?{i:A,r:e,k:t,f:!!n}:e:null;function qt(e,t=null,n=null,r=0,i=null,a=(e===_t?0:1),o=!1,l=!1){const u={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&jt(t),ref:t&&Kt(t),scopeId:F,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:r,dynamicProps:i,dynamicChildren:null,appContext:null};return l?(rn(u,n),128&a&&e.normalize(u)):n&&(u.shapeFlag|=(0,s.HD)(n)?8:16),Pt>0&&!o&&Mt&&(u.patchFlag>0||6&a)&&32!==u.patchFlag&&Mt.push(u),u}const Xt=Jt;function Jt(e,t=null,n=null,i=0,a=null,o=!1){if(e&&e!==Me||(e=Ft),Vt(e)){const r=Zt(e,t,!0);return n&&rn(r,n),Pt>0&&!o&&Mt&&(6&r.shapeFlag?Mt[Mt.indexOf(e)]=r:Mt.push(r)),r.patchFlag|=-2,r}if($n(e)&&(e=e.__vccOpts),t){t=Yt(t);let{class:e,style:n}=t;e&&!(0,s.HD)(e)&&(t.class=(0,s.C_)(e)),(0,s.Kn)(n)&&((0,r.X3)(n)&&!(0,s.kJ)(n)&&(n=(0,s.l7)({},n)),t.style=(0,s.j5)(n))}const l=(0,s.HD)(e)?1:G(e)?128:Rt(e)?64:(0,s.Kn)(e)?4:(0,s.mf)(e)?2:0;return qt(e,t,n,i,a,l,o,!0)}function Yt(e){return e?(0,r.X3)(e)||Ht in e?(0,s.l7)({},e):e:null}function Zt(e,t,n=!1){const{props:r,ref:i,patchFlag:a,children:o}=e,l=t?sn(r||{},t):r,u={__v_isVNode:!0,__v_skip:!0,type:e.type,props:l,key:l&&jt(l),ref:t&&t.ref?n&&i?(0,s.kJ)(i)?i.concat(Kt(t)):[i,Kt(t)]:Kt(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==_t?-1===a?16:16|a:a,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Zt(e.ssContent),ssFallback:e.ssFallback&&Zt(e.ssFallback),el:e.el,anchor:e.anchor};return u}function Qt(e=" ",t=0){return Xt(At,null,e,t)}function en(e,t){const n=Xt(Dt,null,e);return n.staticCount=t,n}function tn(e){return null==e||"boolean"===typeof e?Xt(Ft):(0,s.kJ)(e)?Xt(_t,null,e.slice()):"object"===typeof e?nn(e):Xt(At,null,String(e))}function nn(e){return null===e.el||e.memo?e:Zt(e)}function rn(e,t){let n=0;const{shapeFlag:r}=e;if(null==t)t=null;else if((0,s.kJ)(t))n=16;else if("object"===typeof t){if(65&r){const n=t.default;return void(n&&(n._c&&(n._d=!1),rn(e,n()),n._c&&(n._d=!0)))}{n=32;const r=t._;r||Ht in t?3===r&&A&&(1===A.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=A}}else(0,s.mf)(t)?(t={default:t,_ctx:A},n=32):(t=String(t),64&r?(n=16,t=[Qt(t)]):n=8);e.children=t,e.shapeFlag|=n}function sn(...e){const t={};for(let n=0;n<e.length;n++){const r=e[n];for(const e in r)if("class"===e)t.class!==r.class&&(t.class=(0,s.C_)([t.class,r.class]));else if("style"===e)t.style=(0,s.j5)([t.style,r.style]);else if((0,s.F7)(e)){const n=t[e],i=r[e];!i||n===i||(0,s.kJ)(n)&&n.includes(i)||(t[e]=n?[].concat(n,i):i)}else""!==e&&(t[e]=r[e])}return t}function an(e,t,n,r=null){a(e,t,7,[n,r])}const on=yt();let ln=0;function un(e,t,n){const i=e.type,a=(t?t.appContext:e.appContext)||on,o={uid:ln++,vnode:e,type:i,parent:t,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new r.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:ot(i,a),emitsOptions:R(i,a),emit:null,emitted:null,propsDefaults:s.kT,inheritAttrs:i.inheritAttrs,ctx:s.kT,data:s.kT,props:s.kT,attrs:s.kT,slots:s.kT,refs:s.kT,setupState:s.kT,setupContext:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=t?t.root:o,o.emit=E.bind(null,o),e.ce&&e.ce(o),o}let cn=null;const hn=()=>cn||A,dn=e=>{cn=e,e.scope.on()},pn=()=>{cn&&cn.scope.off(),cn=null};function fn(e){return 4&e.vnode.shapeFlag}let gn,mn,bn=!1;function xn(e,t=!1){bn=t;const{props:n,children:r}=e.vnode,s=fn(e);rt(e,n,s,t),bt(e,r);const i=s?yn(e,t):void 0;return bn=!1,i}function yn(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=(0,r.Xl)(new Proxy(e.ctx,Ue));const{setup:a}=n;if(a){const n=e.setupContext=a.length>1?In(e):null;dn(e),(0,r.Jd)();const l=i(a,e,0,[e.props,n]);if((0,r.lk)(),pn(),(0,s.tI)(l)){if(l.then(pn,pn),t)return l.then((n=>{vn(e,n,t)})).catch((t=>{o(t,e,0)}));e.asyncDep=l}else vn(e,l,t)}else wn(e,t)}function vn(e,t,n){(0,s.mf)(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:(0,s.Kn)(t)&&(e.setupState=(0,r.WL)(t)),wn(e,n)}function wn(e,t,n){const i=e.type;if(!e.render){if(!t&&gn&&!i.render){const t=i.template||qe(e).template;if(t){0;const{isCustomElement:n,compilerOptions:r}=e.appContext.config,{delimiters:a,compilerOptions:o}=i,l=(0,s.l7)((0,s.l7)({isCustomElement:n,delimiters:a},r),o);i.render=gn(t,l)}}e.render=i.render||s.dG,mn&&mn(e)}dn(e),(0,r.Jd)(),Ge(e),(0,r.lk)(),pn()}function kn(e){return new Proxy(e.attrs,{get(t,n){return(0,r.j)(e,"get","$attrs"),t[n]}})}function In(e){const t=t=>{e.exposed=t||{}};let n;return{get attrs(){return n||(n=kn(e))},slots:e.slots,emit:e.emit,expose:t}}function Sn(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy((0,r.WL)((0,r.Xl)(e.exposed)),{get(t,n){return n in t?t[n]:n in We?We[n](e):void 0}}))}function Cn(e,t=!0){return(0,s.mf)(e)?e.displayName||e.name:e.name||t&&e.__name}function $n(e){return(0,s.mf)(e)&&"__vccOpts"in e}const Nn=(e,t)=>(0,r.Fl)(e,t,bn);function Tn(e,t,n){const r=arguments.length;return 2===r?(0,s.Kn)(t)&&!(0,s.kJ)(t)?Vt(t)?Xt(e,null,[t]):Xt(e,t):Xt(e,null,t):(r>3?n=Array.prototype.slice.call(arguments,2):3===r&&Vt(n)&&(n=[n]),Xt(e,t,n))}Symbol("");const En="3.2.39"},9242:function(e,t,n){"use strict";n.d(t,{bM:function(){return ie},e8:function(){return re},nr:function(){return ne},ri:function(){return de}});n(7658);var r=n(7139),s=n(3396);n(4870);const i="http://www.w3.org/2000/svg",a="undefined"!==typeof document?document:null,o=a&&a.createElement("template"),l={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,r)=>{const s=t?a.createElementNS(i,e):a.createElement(e,n?{is:n}:void 0);return"select"===e&&r&&null!=r.multiple&&s.setAttribute("multiple",r.multiple),s},createText:e=>a.createTextNode(e),createComment:e=>a.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>a.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},cloneNode(e){const t=e.cloneNode(!0);return"_value"in e&&(t._value=e._value),t},insertStaticContent(e,t,n,r,s,i){const a=n?n.previousSibling:t.lastChild;if(s&&(s===i||s.nextSibling)){while(1)if(t.insertBefore(s.cloneNode(!0),n),s===i||!(s=s.nextSibling))break}else{o.innerHTML=r?`<svg>${e}</svg>`:e;const s=o.content;if(r){const e=s.firstChild;while(e.firstChild)s.appendChild(e.firstChild);s.removeChild(e)}t.insertBefore(s,n)}return[a?a.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function u(e,t,n){const r=e._vtc;r&&(t=(t?[t,...r]:[...r]).join(" ")),null==t?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function c(e,t,n){const s=e.style,i=(0,r.HD)(n);if(n&&!i){for(const e in n)d(s,e,n[e]);if(t&&!(0,r.HD)(t))for(const e in t)null==n[e]&&d(s,e,"")}else{const r=s.display;i?t!==n&&(s.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(s.display=r)}}const h=/\s*!important$/;function d(e,t,n){if((0,r.kJ)(n))n.forEach((n=>d(e,t,n)));else if(null==n&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const s=g(e,t);h.test(n)?e.setProperty((0,r.rs)(s),n.replace(h,""),"important"):e[s]=n}}const p=["Webkit","Moz","ms"],f={};function g(e,t){const n=f[t];if(n)return n;let s=(0,r._A)(t);if("filter"!==s&&s in e)return f[t]=s;s=(0,r.kC)(s);for(let r=0;r<p.length;r++){const n=p[r]+s;if(n in e)return f[t]=n}return t}const m="http://www.w3.org/1999/xlink";function b(e,t,n,s,i){if(s&&t.startsWith("xlink:"))null==n?e.removeAttributeNS(m,t.slice(6,t.length)):e.setAttributeNS(m,t,n);else{const s=(0,r.Pq)(t);null==n||s&&!(0,r.yA)(n)?e.removeAttribute(t):e.setAttribute(t,s?"":n)}}function x(e,t,n,s,i,a,o){if("innerHTML"===t||"textContent"===t)return s&&o(s,i,a),void(e[t]=null==n?"":n);if("value"===t&&"PROGRESS"!==e.tagName&&!e.tagName.includes("-")){e._value=n;const r=null==n?"":n;return e.value===r&&"OPTION"!==e.tagName||(e.value=r),void(null==n&&e.removeAttribute(t))}let l=!1;if(""===n||null==n){const s=typeof e[t];"boolean"===s?n=(0,r.yA)(n):null==n&&"string"===s?(n="",l=!0):"number"===s&&(n=0,l=!0)}try{e[t]=n}catch(u){0}l&&e.removeAttribute(t)}const[y,v]=(()=>{let e=Date.now,t=!1;if("undefined"!==typeof window){Date.now()>document.createEvent("Event").timeStamp&&(e=performance.now.bind(performance));const n=navigator.userAgent.match(/firefox\/(\d+)/i);t=!!(n&&Number(n[1])<=53)}return[e,t]})();let w=0;const k=Promise.resolve(),I=()=>{w=0},S=()=>w||(k.then(I),w=y());function C(e,t,n,r){e.addEventListener(t,n,r)}function $(e,t,n,r){e.removeEventListener(t,n,r)}function N(e,t,n,r,s=null){const i=e._vei||(e._vei={}),a=i[t];if(r&&a)a.value=r;else{const[n,o]=E(t);if(r){const a=i[t]=R(r,s);C(e,n,a,o)}else a&&($(e,n,a,o),i[t]=void 0)}}const T=/(?:Once|Passive|Capture)$/;function E(e){let t;if(T.test(e)){let n;t={};while(n=e.match(T))e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}const n=":"===e[2]?e.slice(3):(0,r.rs)(e.slice(2));return[n,t]}function R(e,t){const n=e=>{const r=e.timeStamp||y();(v||r>=n.attached-1)&&(0,s.$d)(_(e,n.value),t,5,[e])};return n.value=e,n.attached=S(),n}function _(e,t){if((0,r.kJ)(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map((e=>t=>!t._stopped&&e&&e(t)))}return t}const A=/^on[a-z]/,F=(e,t,n,s,i=!1,a,o,l,h)=>{"class"===t?u(e,s,i):"style"===t?c(e,n,s):(0,r.F7)(t)?(0,r.tR)(t)||N(e,t,n,s,o):("."===t[0]?(t=t.slice(1),1):"^"===t[0]?(t=t.slice(1),0):D(e,t,s,i))?x(e,t,s,a,o,l,h):("true-value"===t?e._trueValue=s:"false-value"===t&&(e._falseValue=s),b(e,t,s,i))};function D(e,t,n,s){return s?"innerHTML"===t||"textContent"===t||!!(t in e&&A.test(t)&&(0,r.mf)(n)):"spellcheck"!==t&&"draggable"!==t&&"translate"!==t&&("form"!==t&&(("list"!==t||"INPUT"!==e.tagName)&&(("type"!==t||"TEXTAREA"!==e.tagName)&&((!A.test(t)||!(0,r.HD)(n))&&t in e))))}"undefined"!==typeof HTMLElement&&HTMLElement;const O="transition",M="animation",L=(e,{slots:t})=>(0,s.h)(s.P$,W(e),t);L.displayName="Transition";const z={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},P=(L.props=(0,r.l7)({},s.P$.props,z),(e,t=[])=>{(0,r.kJ)(e)?e.forEach((e=>e(...t))):e&&e(...t)}),B=e=>!!e&&((0,r.kJ)(e)?e.some((e=>e.length>1)):e.length>1);function W(e){const t={};for(const r in e)r in z||(t[r]=e[r]);if(!1===e.css)return t;const{name:n="v",type:s,duration:i,enterFromClass:a=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:l=`${n}-enter-to`,appearFromClass:u=a,appearActiveClass:c=o,appearToClass:h=l,leaveFromClass:d=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=e,g=U(i),m=g&&g[0],b=g&&g[1],{onBeforeEnter:x,onEnter:y,onEnterCancelled:v,onLeave:w,onLeaveCancelled:k,onBeforeAppear:I=x,onAppear:S=y,onAppearCancelled:C=v}=t,$=(e,t,n)=>{H(e,t?h:l),H(e,t?c:o),n&&n()},N=(e,t)=>{e._isLeaving=!1,H(e,d),H(e,f),H(e,p),t&&t()},T=e=>(t,n)=>{const r=e?S:y,i=()=>$(t,e,n);P(r,[t,i]),j((()=>{H(t,e?u:a),G(t,e?h:l),B(r)||q(t,s,m,i)}))};return(0,r.l7)(t,{onBeforeEnter(e){P(x,[e]),G(e,a),G(e,o)},onBeforeAppear(e){P(I,[e]),G(e,u),G(e,c)},onEnter:T(!1),onAppear:T(!0),onLeave(e,t){e._isLeaving=!0;const n=()=>N(e,t);G(e,d),Z(),G(e,p),j((()=>{e._isLeaving&&(H(e,d),G(e,f),B(w)||q(e,s,b,n))})),P(w,[e,n])},onEnterCancelled(e){$(e,!1),P(v,[e])},onAppearCancelled(e){$(e,!0),P(C,[e])},onLeaveCancelled(e){N(e),P(k,[e])}})}function U(e){if(null==e)return null;if((0,r.Kn)(e))return[V(e.enter),V(e.leave)];{const t=V(e);return[t,t]}}function V(e){const t=(0,r.He)(e);return t}function G(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function H(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function j(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let K=0;function q(e,t,n,r){const s=e._endId=++K,i=()=>{s===e._endId&&r()};if(n)return setTimeout(i,n);const{type:a,timeout:o,propCount:l}=X(e,t);if(!a)return r();const u=a+"end";let c=0;const h=()=>{e.removeEventListener(u,d),i()},d=t=>{t.target===e&&++c>=l&&h()};setTimeout((()=>{c<l&&h()}),o+1),e.addEventListener(u,d)}function X(e,t){const n=window.getComputedStyle(e),r=e=>(n[e]||"").split(", "),s=r(O+"Delay"),i=r(O+"Duration"),a=J(s,i),o=r(M+"Delay"),l=r(M+"Duration"),u=J(o,l);let c=null,h=0,d=0;t===O?a>0&&(c=O,h=a,d=i.length):t===M?u>0&&(c=M,h=u,d=l.length):(h=Math.max(a,u),c=h>0?a>u?O:M:null,d=c?c===O?i.length:l.length:0);const p=c===O&&/\b(transform|all)(,|$)/.test(n[O+"Property"]);return{type:c,timeout:h,propCount:d,hasTransform:p}}function J(e,t){while(e.length<t.length)e=e.concat(e);return Math.max(...t.map(((t,n)=>Y(t)+Y(e[n]))))}function Y(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Z(){return document.body.offsetHeight}new WeakMap,new WeakMap;const Q=e=>{const t=e.props["onUpdate:modelValue"]||!1;return(0,r.kJ)(t)?e=>(0,r.ir)(t,e):t};function ee(e){e.target.composing=!0}function te(e){const t=e.target;t.composing&&(t.composing=!1,t.dispatchEvent(new Event("input")))}const ne={created(e,{modifiers:{lazy:t,trim:n,number:s}},i){e._assign=Q(i);const a=s||i.props&&"number"===i.props.type;C(e,t?"change":"input",(t=>{if(t.target.composing)return;let s=e.value;n&&(s=s.trim()),a&&(s=(0,r.He)(s)),e._assign(s)})),n&&C(e,"change",(()=>{e.value=e.value.trim()})),t||(C(e,"compositionstart",ee),C(e,"compositionend",te),C(e,"change",te))},mounted(e,{value:t}){e.value=null==t?"":t},beforeUpdate(e,{value:t,modifiers:{lazy:n,trim:s,number:i}},a){if(e._assign=Q(a),e.composing)return;if(document.activeElement===e&&"range"!==e.type){if(n)return;if(s&&e.value.trim()===t)return;if((i||"number"===e.type)&&(0,r.He)(e.value)===t)return}const o=null==t?"":t;e.value!==o&&(e.value=o)}},re={deep:!0,created(e,t,n){e._assign=Q(n),C(e,"change",(()=>{const t=e._modelValue,n=oe(e),s=e.checked,i=e._assign;if((0,r.kJ)(t)){const e=(0,r.hq)(t,n),a=-1!==e;if(s&&!a)i(t.concat(n));else if(!s&&a){const n=[...t];n.splice(e,1),i(n)}}else if((0,r.DM)(t)){const e=new Set(t);s?e.add(n):e.delete(n),i(e)}else i(le(e,s))}))},mounted:se,beforeUpdate(e,t,n){e._assign=Q(n),se(e,t,n)}};function se(e,{value:t,oldValue:n},s){e._modelValue=t,(0,r.kJ)(t)?e.checked=(0,r.hq)(t,s.props.value)>-1:(0,r.DM)(t)?e.checked=t.has(s.props.value):t!==n&&(e.checked=(0,r.WV)(t,le(e,!0)))}const ie={deep:!0,created(e,{value:t,modifiers:{number:n}},s){const i=(0,r.DM)(t);C(e,"change",(()=>{const t=Array.prototype.filter.call(e.options,(e=>e.selected)).map((e=>n?(0,r.He)(oe(e)):oe(e)));e._assign(e.multiple?i?new Set(t):t:t[0])})),e._assign=Q(s)},mounted(e,{value:t}){ae(e,t)},beforeUpdate(e,t,n){e._assign=Q(n)},updated(e,{value:t}){ae(e,t)}};function ae(e,t){const n=e.multiple;if(!n||(0,r.kJ)(t)||(0,r.DM)(t)){for(let s=0,i=e.options.length;s<i;s++){const i=e.options[s],a=oe(i);if(n)(0,r.kJ)(t)?i.selected=(0,r.hq)(t,a)>-1:i.selected=t.has(a);else if((0,r.WV)(oe(i),t))return void(e.selectedIndex!==s&&(e.selectedIndex=s))}n||-1===e.selectedIndex||(e.selectedIndex=-1)}}function oe(e){return"_value"in e?e._value:e.value}function le(e,t){const n=t?"_trueValue":"_falseValue";return n in e?e[n]:t}const ue=(0,r.l7)({patchProp:F},l);let ce;function he(){return ce||(ce=(0,s.Us)(ue))}const de=(...e)=>{const t=he().createApp(...e);const{mount:n}=t;return t.mount=e=>{const s=pe(e);if(!s)return;const i=t._component;(0,r.mf)(i)||i.render||i.template||(i.template=s.innerHTML),s.innerHTML="";const a=n(s,!1,s instanceof SVGElement);return s instanceof Element&&(s.removeAttribute("v-cloak"),s.setAttribute("data-v-app","")),a},t};function pe(e){if((0,r.HD)(e)){const t=document.querySelector(e);return t}return e}},7139:function(e,t,n){"use strict";n.d(t,{C_:function(){return p},DM:function(){return A},E9:function(){return re},F7:function(){return S},Gg:function(){return G},HD:function(){return O},He:function(){return te},Kn:function(){return L},NO:function(){return k},Nj:function(){return ee},Od:function(){return N},PO:function(){return U},Pq:function(){return o},RI:function(){return E},S0:function(){return V},W7:function(){return W},WV:function(){return g},Z6:function(){return v},_A:function(){return K},_N:function(){return _},aU:function(){return Z},dG:function(){return w},e1:function(){return i},fY:function(){return r},hR:function(){return Y},hq:function(){return m},ir:function(){return Q},j5:function(){return u},kC:function(){return J},kJ:function(){return R},kT:function(){return y},l7:function(){return $},mf:function(){return D},rs:function(){return X},tI:function(){return z},tR:function(){return C},yA:function(){return l},yk:function(){return M},zw:function(){return b}});n(7658);function r(e,t){const n=Object.create(null),r=e.split(",");for(let s=0;s<r.length;s++)n[r[s]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}const s="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt",i=r(s);const a="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",o=r(a);function l(e){return!!e||""===e}function u(e){if(R(e)){const t={};for(let n=0;n<e.length;n++){const r=e[n],s=O(r)?d(r):u(r);if(s)for(const e in s)t[e]=s[e]}return t}return O(e)||L(e)?e:void 0}const c=/;(?![^(]*\))/g,h=/:(.+)/;function d(e){const t={};return e.split(c).forEach((e=>{if(e){const n=e.split(h);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function p(e){let t="";if(O(e))t=e;else if(R(e))for(let n=0;n<e.length;n++){const r=p(e[n]);r&&(t+=r+" ")}else if(L(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}function f(e,t){if(e.length!==t.length)return!1;let n=!0;for(let r=0;n&&r<e.length;r++)n=g(e[r],t[r]);return n}function g(e,t){if(e===t)return!0;let n=F(e),r=F(t);if(n||r)return!(!n||!r)&&e.getTime()===t.getTime();if(n=M(e),r=M(t),n||r)return e===t;if(n=R(e),r=R(t),n||r)return!(!n||!r)&&f(e,t);if(n=L(e),r=L(t),n||r){if(!n||!r)return!1;const s=Object.keys(e).length,i=Object.keys(t).length;if(s!==i)return!1;for(const n in e){const r=e.hasOwnProperty(n),s=t.hasOwnProperty(n);if(r&&!s||!r&&s||!g(e[n],t[n]))return!1}}return String(e)===String(t)}function m(e,t){return e.findIndex((e=>g(e,t)))}const b=e=>O(e)?e:null==e?"":R(e)||L(e)&&(e.toString===P||!D(e.toString))?JSON.stringify(e,x,2):String(e),x=(e,t)=>t&&t.__v_isRef?x(e,t.value):_(t)?{[`Map(${t.size})`]:[...t.entries()].reduce(((e,[t,n])=>(e[`${t} =>`]=n,e)),{})}:A(t)?{[`Set(${t.size})`]:[...t.values()]}:!L(t)||R(t)||U(t)?t:String(t),y={},v=[],w=()=>{},k=()=>!1,I=/^on[^a-z]/,S=e=>I.test(e),C=e=>e.startsWith("onUpdate:"),$=Object.assign,N=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},T=Object.prototype.hasOwnProperty,E=(e,t)=>T.call(e,t),R=Array.isArray,_=e=>"[object Map]"===B(e),A=e=>"[object Set]"===B(e),F=e=>"[object Date]"===B(e),D=e=>"function"===typeof e,O=e=>"string"===typeof e,M=e=>"symbol"===typeof e,L=e=>null!==e&&"object"===typeof e,z=e=>L(e)&&D(e.then)&&D(e.catch),P=Object.prototype.toString,B=e=>P.call(e),W=e=>B(e).slice(8,-1),U=e=>"[object Object]"===B(e),V=e=>O(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,G=r(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),H=e=>{const t=Object.create(null);return n=>{const r=t[n];return r||(t[n]=e(n))}},j=/-(\w)/g,K=H((e=>e.replace(j,((e,t)=>t?t.toUpperCase():"")))),q=/\B([A-Z])/g,X=H((e=>e.replace(q,"-$1").toLowerCase())),J=H((e=>e.charAt(0).toUpperCase()+e.slice(1))),Y=H((e=>e?`on${J(e)}`:"")),Z=(e,t)=>!Object.is(e,t),Q=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},ee=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},te=e=>{const t=parseFloat(e);return isNaN(t)?e:t};let ne;const re=()=>ne||(ne="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{})},9438:function(e,t,n){n(8675),n(3408),n(4590),n(1703),e.exports=s;var r=null;try{r=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(E){}function s(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function i(e){return!0===(e&&e["__isLong__"])}s.prototype.__isLong__,Object.defineProperty(s.prototype,"__isLong__",{value:!0}),s.isLong=i;var a={},o={};function l(e,t){var n,r,s;return t?(e>>>=0,(s=0<=e&&e<256)&&(r=o[e],r)?r:(n=c(e,(0|e)<0?-1:0,!0),s&&(o[e]=n),n)):(e|=0,(s=-128<=e&&e<128)&&(r=a[e],r)?r:(n=c(e,e<0?-1:0,!1),s&&(a[e]=n),n))}function u(e,t){if(isNaN(e))return t?w:v;if(t){if(e<0)return w;if(e>=b)return $}else{if(e<=-x)return N;if(e+1>=x)return C}return e<0?u(-e,t).neg():c(e%m|0,e/m|0,t)}function c(e,t,n){return new s(e,t,n)}s.fromInt=l,s.fromNumber=u,s.fromBits=c;var h=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return v;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return d(e.substring(1),t,n).neg();for(var s=u(h(n,8)),i=v,a=0;a<e.length;a+=8){var o=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+o),n);if(o<8){var c=u(h(n,o));i=i.mul(c).add(u(l))}else i=i.mul(s),i=i.add(u(l))}return i.unsigned=t,i}function p(e,t){return"number"===typeof e?u(e,t):"string"===typeof e?d(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}s.fromString=d,s.fromValue=p;var f=65536,g=1<<24,m=f*f,b=m*m,x=b/2,y=l(g),v=l(0);s.ZERO=v;var w=l(0,!0);s.UZERO=w;var k=l(1);s.ONE=k;var I=l(1,!0);s.UONE=I;var S=l(-1);s.NEG_ONE=S;var C=c(-1,2147483647,!1);s.MAX_VALUE=C;var $=c(-1,-1,!0);s.MAX_UNSIGNED_VALUE=$;var N=c(0,-2147483648,!1);s.MIN_VALUE=N;var T=s.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},T.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=u(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}var s=u(h(e,6),this.unsigned),i=this,a="";while(1){var o=i.div(s),l=i.sub(o.mul(s)).toInt()>>>0,c=l.toString(e);if(i=o,i.isZero())return c+a;while(c.length<6)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return i(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(i(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(k)},T.neg=T.negate,T.add=function(e){i(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,a=e.high>>>16,o=65535&e.high,l=e.low>>>16,u=65535&e.low,h=0,d=0,f=0,g=0;return g+=s+u,f+=g>>>16,g&=65535,f+=r+l,d+=f>>>16,f&=65535,d+=n+o,h+=d>>>16,d&=65535,h+=t+a,h&=65535,c(f<<16|g,h<<16|d,this.unsigned)},T.subtract=function(e){return i(e)||(e=p(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return v;if(i(e)||(e=p(e)),r){var t=r.mul(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}if(e.isZero())return v;if(this.eq(N))return e.isOdd()?N:v;if(e.eq(N))return this.isOdd()?N:v;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return u(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,o=65535&this.low,l=e.high>>>16,h=65535&e.high,d=e.low>>>16,f=65535&e.low,g=0,m=0,b=0,x=0;return x+=o*f,b+=x>>>16,x&=65535,b+=a*f,m+=b>>>16,b&=65535,b+=o*d,m+=b>>>16,b&=65535,m+=s*f,g+=m>>>16,m&=65535,m+=a*d,g+=m>>>16,m&=65535,m+=o*h,g+=m>>>16,m&=65535,g+=n*f+s*d+a*h+o*l,g&=65535,c(b<<16|x,g<<16|m,this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(i(e)||(e=p(e)),e.isZero())throw Error("division by zero");if(r){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?r.div_u:r.div_s)(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:v;var n,s,a;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return I;a=w}else{if(this.eq(N)){if(e.eq(k)||e.eq(S))return N;if(e.eq(N))return k;var o=this.shr(1);return n=o.div(e).shl(1),n.eq(v)?e.isNegative()?k:S:(s=this.sub(e.mul(n)),a=n.add(s.div(e)),a)}if(e.eq(N))return this.unsigned?w:v;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=v}s=this;while(s.gte(e)){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));var l=Math.ceil(Math.log(n)/Math.LN2),d=l<=48?1:h(2,l-48),f=u(n),g=f.mul(e);while(g.isNegative()||g.gt(s))n-=d,f=u(n,this.unsigned),g=f.mul(e);f.isZero()&&(f=k),a=a.add(f),s=s.sub(g)}return a},T.div=T.divide,T.modulo=function(e){if(i(e)||(e=p(e)),r){var t=(this.unsigned?r.rem_u:r.rem_s)(this.low,this.high,e.low,e.high);return c(t,r.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return i(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return i(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return i(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(i(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return c(n>>>e|t<<32-e,t>>>e,this.unsigned)}return c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},s.fromBytes=function(e,t,n){return n?s.fromBytesLE(e,t):s.fromBytesBE(e,t)},s.fromBytesLE=function(e,t){return new s(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},s.fromBytesBE=function(e,t){return new s(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4332:function(e,t,n){var r=n(4805),s=n(6788),i=n(9787),a=n(661),o=n(2629),l=n(3363),u=n(4878);u.alea=r,u.xor128=s,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},4805:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n=u();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}function u(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var r=.02519603282416938*e;e=r>>>0,r-=e,r*=e,e=r>>>0,r-=e,e+=4294967296*r}return 2.3283064365386963e-10*(e>>>0)};return t}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.alea=l}(0,e,n.amdD)},3363:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.tychei=l}(0,e,n.amdD)},6788:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor128=l}(0,e,n.amdD)},2629:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this;function n(e,t){var n,r,s,i,a,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,i=-32;i<l;++i)t&&(r^=t.charCodeAt((i+32)%t.length)),0===i&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,i>=0&&(a=a+1640531527|0,n=o[127&i]^=r+a,s=0==n?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,i=512;i>0;--i)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=a,e.X=o,e.i=s}t.next=function(){var e,n,r=t.w,s=t.X,i=t.i;return t.w=r=r+1640531527|0,n=s[i+34&127],e=s[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[i]=n^e,t.i=i,n+(r^r>>>16)|0},n(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xor4096=l}(0,e,n.amdD)},661:function(e,t,n){var r;e=n.nmd(e),n(7658),function(e,s,i){function a(e){var t=this;function n(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;while(r.length<8)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],e^=e>>>7,n=e^e<<24,e=r[s+1&7],n^=e^e>>>10,e=r[s+3&7],n^=e^e>>>3,e=r[s+4&7],n^=e^e<<7,e=r[s+7&7],e^=e<<13,n^=e^e<<9,r[s]=n,t.i=s+1&7,n},n(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorshift7=l}(0,e,n.amdD)},9787:function(e,t,n){var r;e=n.nmd(e),function(e,s,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,r=(e+t)/(1<<21)}while(0===r);return r},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?(r=function(){return l}.call(t,n,t,s),void 0===r||(s.exports=r)):this.xorwow=l}(0,e,n.amdD)},4878:function(e,t,n){var r;n(7658),n(8675),n(3408),n(4590),function(s,i,a){var o,l=256,u=6,c=52,h="random",d=a.pow(l,u),p=a.pow(2,c),f=2*p,g=l-1;function m(e,t,n){var r=[];t=1==t?{entropy:!0}:t||{};var s=v(y(t.entropy?[e,k(i)]:null==e?w():e,3),r),o=new b(r),c=function(){var e=o.g(u),t=d,n=0;while(e<p)e=(e+n)*l,t*=l,n=o.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return c.int32=function(){return 0|o.g(4)},c.quick=function(){return o.g(4)/4294967296},c.double=c,v(k(o.S),i),(t.pass||n||function(e,t,n,r){return r&&(r.S&&x(r,o),e.state=function(){return x(o,{})}),n?(a[h]=e,t):e})(c,s,"global"in t?t.global:this==a,t.state)}function b(e){var t,n=e.length,r=this,s=0,i=r.i=r.j=0,a=r.S=[];n||(e=[n++]);while(s<l)a[s]=s++;for(s=0;s<l;s++)a[s]=a[i=g&i+e[s%n]+(t=a[s])],a[i]=t;(r.g=function(e){var t,n=0,s=r.i,i=r.j,a=r.S;while(e--)t=a[s=g&s+1],n=n*l+a[g&(a[s]=a[i=g&i+t])+(a[i]=t)];return r.i=s,r.j=i,n})(l)}function x(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(y(e[n],t-1))}catch(i){}return r.length?r:"string"==s?e:e+"\0"}function v(e,t){var n,r=e+"",s=0;while(s<r.length)t[g&s]=g&(n^=19*t[g&s])+r.charCodeAt(s++);return k(t)}function w(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),k(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,k(i)]}}function k(e){return String.fromCharCode.apply(0,e)}if(v(a.random(),i),e.exports){e.exports=m;try{o=n(5042)}catch(I){}}else r=function(){return m}.call(t,n,t,e),void 0===r||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)},89:function(e,t){"use strict";t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[r,s]of t)n[r]=s;return n}},65:function(e,t,n){"use strict";n.d(t,{MT:function(){return ee}});n(7658),n(1703),n(541);var r=n(3396),s=n(4870);function i(){return a().__VUE_DEVTOOLS_GLOBAL_HOOK__}function a(){return"undefined"!==typeof navigator&&"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{}}const o="function"===typeof Proxy,l="devtools-plugin:setup",u="plugin:settings:set";let c,h;function d(){var e;return void 0!==c||("undefined"!==typeof window&&window.performance?(c=!0,h=window.performance):"undefined"!==typeof n.g&&(null===(e=n.g.perf_hooks)||void 0===e?void 0:e.performance)?(c=!0,h=n.g.perf_hooks.performance):c=!1),c}function p(){return d()?h.now():Date.now()}class f{constructor(e,t){this.target=null,this.targetQueue=[],this.onQueue=[],this.plugin=e,this.hook=t;const n={};if(e.settings)for(const a in e.settings){const t=e.settings[a];n[a]=t.defaultValue}const r=`__vue-devtools-plugin-settings__${e.id}`;let s=Object.assign({},n);try{const e=localStorage.getItem(r),t=JSON.parse(e);Object.assign(s,t)}catch(i){}this.fallbacks={getSettings(){return s},setSettings(e){try{localStorage.setItem(r,JSON.stringify(e))}catch(i){}s=e},now(){return p()}},t&&t.on(u,((e,t)=>{e===this.plugin.id&&this.fallbacks.setSettings(t)})),this.proxiedOn=new Proxy({},{get:(e,t)=>this.target?this.target.on[t]:(...e)=>{this.onQueue.push({method:t,args:e})}}),this.proxiedTarget=new Proxy({},{get:(e,t)=>this.target?this.target[t]:"on"===t?this.proxiedOn:Object.keys(this.fallbacks).includes(t)?(...e)=>(this.targetQueue.push({method:t,args:e,resolve:()=>{}}),this.fallbacks[t](...e)):(...e)=>new Promise((n=>{this.targetQueue.push({method:t,args:e,resolve:n})}))})}async setRealTarget(e){this.target=e;for(const t of this.onQueue)this.target.on[t.method](...t.args);for(const t of this.targetQueue)t.resolve(await this.target[t.method](...t.args))}}function g(e,t){const n=e,r=a(),s=i(),u=o&&n.enableEarlyProxy;if(!s||!r.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__&&u){const e=u?new f(n,s):null,i=r.__VUE_DEVTOOLS_PLUGINS__=r.__VUE_DEVTOOLS_PLUGINS__||[];i.push({pluginDescriptor:n,setupFn:t,proxy:e}),e&&t(e.proxiedTarget)}else s.emit(l,e,t)}
/*!
 * vuex v4.0.2
 * (c) 2021 Evan You
 * @license MIT
 */
var m="store";function b(e,t){Object.keys(e).forEach((function(n){return t(e[n],n)}))}function x(e){return null!==e&&"object"===typeof e}function y(e){return e&&"function"===typeof e.then}function v(e,t){return function(){return e(t)}}function w(e,t,n){return t.indexOf(e)<0&&(n&&n.prepend?t.unshift(e):t.push(e)),function(){var n=t.indexOf(e);n>-1&&t.splice(n,1)}}function k(e,t){e._actions=Object.create(null),e._mutations=Object.create(null),e._wrappedGetters=Object.create(null),e._modulesNamespaceMap=Object.create(null);var n=e.state;S(e,n,[],e._modules.root,!0),I(e,n,t)}function I(e,t,n){var r=e._state;e.getters={},e._makeLocalGettersCache=Object.create(null);var i=e._wrappedGetters,a={};b(i,(function(t,n){a[n]=v(t,e),Object.defineProperty(e.getters,n,{get:function(){return a[n]()},enumerable:!0})})),e._state=(0,s.qj)({data:t}),e.strict&&R(e),r&&n&&e._withCommit((function(){r.data=null}))}function S(e,t,n,r,s){var i=!n.length,a=e._modules.getNamespace(n);if(r.namespaced&&(e._modulesNamespaceMap[a],e._modulesNamespaceMap[a]=r),!i&&!s){var o=_(t,n.slice(0,-1)),l=n[n.length-1];e._withCommit((function(){o[l]=r.state}))}var u=r.context=C(e,a,n);r.forEachMutation((function(t,n){var r=a+n;N(e,r,t,u)})),r.forEachAction((function(t,n){var r=t.root?n:a+n,s=t.handler||t;T(e,r,s,u)})),r.forEachGetter((function(t,n){var r=a+n;E(e,r,t,u)})),r.forEachChild((function(r,i){S(e,t,n.concat(i),r,s)}))}function C(e,t,n){var r=""===t,s={dispatch:r?e.dispatch:function(n,r,s){var i=A(n,r,s),a=i.payload,o=i.options,l=i.type;return o&&o.root||(l=t+l),e.dispatch(l,a)},commit:r?e.commit:function(n,r,s){var i=A(n,r,s),a=i.payload,o=i.options,l=i.type;o&&o.root||(l=t+l),e.commit(l,a,o)}};return Object.defineProperties(s,{getters:{get:r?function(){return e.getters}:function(){return $(e,t)}},state:{get:function(){return _(e.state,n)}}}),s}function $(e,t){if(!e._makeLocalGettersCache[t]){var n={},r=t.length;Object.keys(e.getters).forEach((function(s){if(s.slice(0,r)===t){var i=s.slice(r);Object.defineProperty(n,i,{get:function(){return e.getters[s]},enumerable:!0})}})),e._makeLocalGettersCache[t]=n}return e._makeLocalGettersCache[t]}function N(e,t,n,r){var s=e._mutations[t]||(e._mutations[t]=[]);s.push((function(t){n.call(e,r.state,t)}))}function T(e,t,n,r){var s=e._actions[t]||(e._actions[t]=[]);s.push((function(t){var s=n.call(e,{dispatch:r.dispatch,commit:r.commit,getters:r.getters,state:r.state,rootGetters:e.getters,rootState:e.state},t);return y(s)||(s=Promise.resolve(s)),e._devtoolHook?s.catch((function(t){throw e._devtoolHook.emit("vuex:error",t),t})):s}))}function E(e,t,n,r){e._wrappedGetters[t]||(e._wrappedGetters[t]=function(e){return n(r.state,r.getters,e.state,e.getters)})}function R(e){(0,r.YP)((function(){return e._state.data}),(function(){0}),{deep:!0,flush:"sync"})}function _(e,t){return t.reduce((function(e,t){return e[t]}),e)}function A(e,t,n){return x(e)&&e.type&&(n=t,t=e,e=e.type),{type:e,payload:t,options:n}}var F="vuex bindings",D="vuex:mutations",O="vuex:actions",M="vuex",L=0;function z(e,t){g({id:"org.vuejs.vuex",app:e,label:"Vuex",homepage:"https://next.vuex.vuejs.org/",logo:"https://vuejs.org/images/icons/favicon-96x96.png",packageName:"vuex",componentStateTypes:[F]},(function(n){n.addTimelineLayer({id:D,label:"Vuex Mutations",color:P}),n.addTimelineLayer({id:O,label:"Vuex Actions",color:P}),n.addInspector({id:M,label:"Vuex",icon:"storage",treeFilterPlaceholder:"Filter stores..."}),n.on.getInspectorTree((function(n){if(n.app===e&&n.inspectorId===M)if(n.filter){var r=[];H(r,t._modules.root,n.filter,""),n.rootNodes=r}else n.rootNodes=[G(t._modules.root,"")]})),n.on.getInspectorState((function(n){if(n.app===e&&n.inspectorId===M){var r=n.nodeId;$(t,r),n.state=j(q(t._modules,r),"root"===r?t.getters:t._makeLocalGettersCache,r)}})),n.on.editInspectorState((function(n){if(n.app===e&&n.inspectorId===M){var r=n.nodeId,s=n.path;"root"!==r&&(s=r.split("/").filter(Boolean).concat(s)),t._withCommit((function(){n.set(t._state.data,s,n.state.value)}))}})),t.subscribe((function(e,t){var r={};e.payload&&(r.payload=e.payload),r.state=t,n.notifyComponentUpdate(),n.sendInspectorTree(M),n.sendInspectorState(M),n.addTimelineEvent({layerId:D,event:{time:Date.now(),title:e.type,data:r}})})),t.subscribeAction({before:function(e,t){var r={};e.payload&&(r.payload=e.payload),e._id=L++,e._time=Date.now(),r.state=t,n.addTimelineEvent({layerId:O,event:{time:e._time,title:e.type,groupId:e._id,subtitle:"start",data:r}})},after:function(e,t){var r={},s=Date.now()-e._time;r.duration={_custom:{type:"duration",display:s+"ms",tooltip:"Action duration",value:s}},e.payload&&(r.payload=e.payload),r.state=t,n.addTimelineEvent({layerId:O,event:{time:Date.now(),title:e.type,groupId:e._id,subtitle:"end",data:r}})}})}))}var P=8702998,B=6710886,W=16777215,U={label:"namespaced",textColor:W,backgroundColor:B};function V(e){return e&&"root"!==e?e.split("/").slice(-2,-1)[0]:"Root"}function G(e,t){return{id:t||"root",label:V(t),tags:e.namespaced?[U]:[],children:Object.keys(e._children).map((function(n){return G(e._children[n],t+n+"/")}))}}function H(e,t,n,r){r.includes(n)&&e.push({id:r||"root",label:r.endsWith("/")?r.slice(0,r.length-1):r||"Root",tags:t.namespaced?[U]:[]}),Object.keys(t._children).forEach((function(s){H(e,t._children[s],n,r+s+"/")}))}function j(e,t,n){t="root"===n?t:t[n];var r=Object.keys(t),s={state:Object.keys(e.state).map((function(t){return{key:t,editable:!0,value:e.state[t]}}))};if(r.length){var i=K(t);s.getters=Object.keys(i).map((function(e){return{key:e.endsWith("/")?V(e):e,editable:!1,value:X((function(){return i[e]}))}}))}return s}function K(e){var t={};return Object.keys(e).forEach((function(n){var r=n.split("/");if(r.length>1){var s=t,i=r.pop();r.forEach((function(e){s[e]||(s[e]={_custom:{value:{},display:e,tooltip:"Module",abstract:!0}}),s=s[e]._custom.value})),s[i]=X((function(){return e[n]}))}else t[n]=X((function(){return e[n]}))})),t}function q(e,t){var n=t.split("/").filter((function(e){return e}));return n.reduce((function(e,r,s){var i=e[r];if(!i)throw new Error('Missing module "'+r+'" for path "'+t+'".');return s===n.length-1?i:i._children}),"root"===t?e:e.root._children)}function X(e){try{return e()}catch(t){return t}}var J=function(e,t){this.runtime=t,this._children=Object.create(null),this._rawModule=e;var n=e.state;this.state=("function"===typeof n?n():n)||{}},Y={namespaced:{configurable:!0}};Y.namespaced.get=function(){return!!this._rawModule.namespaced},J.prototype.addChild=function(e,t){this._children[e]=t},J.prototype.removeChild=function(e){delete this._children[e]},J.prototype.getChild=function(e){return this._children[e]},J.prototype.hasChild=function(e){return e in this._children},J.prototype.update=function(e){this._rawModule.namespaced=e.namespaced,e.actions&&(this._rawModule.actions=e.actions),e.mutations&&(this._rawModule.mutations=e.mutations),e.getters&&(this._rawModule.getters=e.getters)},J.prototype.forEachChild=function(e){b(this._children,e)},J.prototype.forEachGetter=function(e){this._rawModule.getters&&b(this._rawModule.getters,e)},J.prototype.forEachAction=function(e){this._rawModule.actions&&b(this._rawModule.actions,e)},J.prototype.forEachMutation=function(e){this._rawModule.mutations&&b(this._rawModule.mutations,e)},Object.defineProperties(J.prototype,Y);var Z=function(e){this.register([],e,!1)};function Q(e,t,n){if(t.update(n),n.modules)for(var r in n.modules){if(!t.getChild(r))return void 0;Q(e.concat(r),t.getChild(r),n.modules[r])}}Z.prototype.get=function(e){return e.reduce((function(e,t){return e.getChild(t)}),this.root)},Z.prototype.getNamespace=function(e){var t=this.root;return e.reduce((function(e,n){return t=t.getChild(n),e+(t.namespaced?n+"/":"")}),"")},Z.prototype.update=function(e){Q([],this.root,e)},Z.prototype.register=function(e,t,n){var r=this;void 0===n&&(n=!0);var s=new J(t,n);if(0===e.length)this.root=s;else{var i=this.get(e.slice(0,-1));i.addChild(e[e.length-1],s)}t.modules&&b(t.modules,(function(t,s){r.register(e.concat(s),t,n)}))},Z.prototype.unregister=function(e){var t=this.get(e.slice(0,-1)),n=e[e.length-1],r=t.getChild(n);r&&r.runtime&&t.removeChild(n)},Z.prototype.isRegistered=function(e){var t=this.get(e.slice(0,-1)),n=e[e.length-1];return!!t&&t.hasChild(n)};function ee(e){return new te(e)}var te=function(e){var t=this;void 0===e&&(e={});var n=e.plugins;void 0===n&&(n=[]);var r=e.strict;void 0===r&&(r=!1);var s=e.devtools;this._committing=!1,this._actions=Object.create(null),this._actionSubscribers=[],this._mutations=Object.create(null),this._wrappedGetters=Object.create(null),this._modules=new Z(e),this._modulesNamespaceMap=Object.create(null),this._subscribers=[],this._makeLocalGettersCache=Object.create(null),this._devtools=s;var i=this,a=this,o=a.dispatch,l=a.commit;this.dispatch=function(e,t){return o.call(i,e,t)},this.commit=function(e,t,n){return l.call(i,e,t,n)},this.strict=r;var u=this._modules.root.state;S(this,u,[],this._modules.root),I(this,u),n.forEach((function(e){return e(t)}))},ne={state:{configurable:!0}};te.prototype.install=function(e,t){e.provide(t||m,this),e.config.globalProperties.$store=this;var n=void 0!==this._devtools&&this._devtools;n&&z(e,this)},ne.state.get=function(){return this._state.data},ne.state.set=function(e){0},te.prototype.commit=function(e,t,n){var r=this,s=A(e,t,n),i=s.type,a=s.payload,o=(s.options,{type:i,payload:a}),l=this._mutations[i];l&&(this._withCommit((function(){l.forEach((function(e){e(a)}))})),this._subscribers.slice().forEach((function(e){return e(o,r.state)})))},te.prototype.dispatch=function(e,t){var n=this,r=A(e,t),s=r.type,i=r.payload,a={type:s,payload:i},o=this._actions[s];if(o){try{this._actionSubscribers.slice().filter((function(e){return e.before})).forEach((function(e){return e.before(a,n.state)}))}catch(u){0}var l=o.length>1?Promise.all(o.map((function(e){return e(i)}))):o[0](i);return new Promise((function(e,t){l.then((function(t){try{n._actionSubscribers.filter((function(e){return e.after})).forEach((function(e){return e.after(a,n.state)}))}catch(u){0}e(t)}),(function(e){try{n._actionSubscribers.filter((function(e){return e.error})).forEach((function(t){return t.error(a,n.state,e)}))}catch(u){0}t(e)}))}))}},te.prototype.subscribe=function(e,t){return w(e,this._subscribers,t)},te.prototype.subscribeAction=function(e,t){var n="function"===typeof e?{before:e}:e;return w(n,this._actionSubscribers,t)},te.prototype.watch=function(e,t,n){var s=this;return(0,r.YP)((function(){return e(s.state,s.getters)}),t,Object.assign({},n))},te.prototype.replaceState=function(e){var t=this;this._withCommit((function(){t._state.data=e}))},te.prototype.registerModule=function(e,t,n){void 0===n&&(n={}),"string"===typeof e&&(e=[e]),this._modules.register(e,t),S(this,this.state,e,this._modules.get(e),n.preserveState),I(this,this.state)},te.prototype.unregisterModule=function(e){var t=this;"string"===typeof e&&(e=[e]),this._modules.unregister(e),this._withCommit((function(){var n=_(t.state,e.slice(0,-1));delete n[e[e.length-1]]})),k(this)},te.prototype.hasModule=function(e){return"string"===typeof e&&(e=[e]),this._modules.isRegistered(e)},te.prototype.hotUpdate=function(e){this._modules.update(e),k(this,!0)},te.prototype._withCommit=function(e){var t=this._committing;this._committing=!0,e(),this._committing=t},Object.defineProperties(te.prototype,ne);ie((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=this.$store.state,n=this.$store.getters;if(e){var r=ae(this.$store,"mapState",e);if(!r)return;t=r.context.state,n=r.context.getters}return"function"===typeof s?s.call(this,t,n):t[s]},n[r].vuex=!0})),n})),ie((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=[],n=arguments.length;while(n--)t[n]=arguments[n];var r=this.$store.commit;if(e){var i=ae(this.$store,"mapMutations",e);if(!i)return;r=i.context.commit}return"function"===typeof s?s.apply(this,[r].concat(t)):r.apply(this.$store,[s].concat(t))}})),n})),ie((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;s=e+s,n[r]=function(){if(!e||ae(this.$store,"mapGetters",e))return this.$store.getters[s]},n[r].vuex=!0})),n})),ie((function(e,t){var n={};return re(t).forEach((function(t){var r=t.key,s=t.val;n[r]=function(){var t=[],n=arguments.length;while(n--)t[n]=arguments[n];var r=this.$store.dispatch;if(e){var i=ae(this.$store,"mapActions",e);if(!i)return;r=i.context.dispatch}return"function"===typeof s?s.apply(this,[r].concat(t)):r.apply(this.$store,[s].concat(t))}})),n}));function re(e){return se(e)?Array.isArray(e)?e.map((function(e){return{key:e,val:e}})):Object.keys(e).map((function(t){return{key:t,val:e[t]}})):[]}function se(e){return Array.isArray(e)||x(e)}function ie(e){return function(t,n){return"string"!==typeof t?(n=t,t=""):"/"!==t.charAt(t.length-1)&&(t+="/"),e(t,n)}}function ae(e,t,n){var r=e._modulesNamespaceMap[n];return r}},2483:function(e,t,n){"use strict";n.d(t,{PO:function(){return P},p7:function(){return tt}});n(7658),n(1703),n(541);var r=n(3396),s=n(4870);
/*!
  * vue-router v4.1.5
  * (c) 2022 Eduardo San Martin Morote
  * @license MIT
  */
const i="undefined"!==typeof window;function a(e){return e.__esModule||"Module"===e[Symbol.toStringTag]}const o=Object.assign;function l(e,t){const n={};for(const r in t){const s=t[r];n[r]=c(s)?s.map(e):e(s)}return n}const u=()=>{},c=Array.isArray;const h=/\/$/,d=e=>e.replace(h,"");function p(e,t,n="/"){let r,s={},i="",a="";const o=t.indexOf("#");let l=t.indexOf("?");return o<l&&o>=0&&(l=-1),l>-1&&(r=t.slice(0,l),i=t.slice(l+1,o>-1?o:t.length),s=e(i)),o>-1&&(r=r||t.slice(0,o),a=t.slice(o,t.length)),r=w(null!=r?r:t,n),{fullPath:r+(i&&"?")+i+a,path:r,query:s,hash:a}}function f(e,t){const n=t.query?e(t.query):"";return t.path+(n&&"?")+n+(t.hash||"")}function g(e,t){return t&&e.toLowerCase().startsWith(t.toLowerCase())?e.slice(t.length)||"/":e}function m(e,t,n){const r=t.matched.length-1,s=n.matched.length-1;return r>-1&&r===s&&b(t.matched[r],n.matched[s])&&x(t.params,n.params)&&e(t.query)===e(n.query)&&t.hash===n.hash}function b(e,t){return(e.aliasOf||e)===(t.aliasOf||t)}function x(e,t){if(Object.keys(e).length!==Object.keys(t).length)return!1;for(const n in e)if(!y(e[n],t[n]))return!1;return!0}function y(e,t){return c(e)?v(e,t):c(t)?v(t,e):e===t}function v(e,t){return c(t)?e.length===t.length&&e.every(((e,n)=>e===t[n])):1===e.length&&e[0]===t}function w(e,t){if(e.startsWith("/"))return e;if(!e)return t;const n=t.split("/"),r=e.split("/");let s,i,a=n.length-1;for(s=0;s<r.length;s++)if(i=r[s],"."!==i){if(".."!==i)break;a>1&&a--}return n.slice(0,a).join("/")+"/"+r.slice(s-(s===r.length?1:0)).join("/")}var k,I;(function(e){e["pop"]="pop",e["push"]="push"})(k||(k={})),function(e){e["back"]="back",e["forward"]="forward",e["unknown"]=""}(I||(I={}));function S(e){if(!e)if(i){const t=document.querySelector("base");e=t&&t.getAttribute("href")||"/",e=e.replace(/^\w+:\/\/[^\/]+/,"")}else e="/";return"/"!==e[0]&&"#"!==e[0]&&(e="/"+e),d(e)}const C=/^[^#]+#/;function $(e,t){return e.replace(C,"#")+t}function N(e,t){const n=document.documentElement.getBoundingClientRect(),r=e.getBoundingClientRect();return{behavior:t.behavior,left:r.left-n.left-(t.left||0),top:r.top-n.top-(t.top||0)}}const T=()=>({left:window.pageXOffset,top:window.pageYOffset});function E(e){let t;if("el"in e){const n=e.el,r="string"===typeof n&&n.startsWith("#");0;const s="string"===typeof n?r?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!s)return;t=N(s,e)}else t=e;"scrollBehavior"in document.documentElement.style?window.scrollTo(t):window.scrollTo(null!=t.left?t.left:window.pageXOffset,null!=t.top?t.top:window.pageYOffset)}function R(e,t){const n=history.state?history.state.position-t:-1;return n+e}const _=new Map;function A(e,t){_.set(e,t)}function F(e){const t=_.get(e);return _.delete(e),t}let D=()=>location.protocol+"//"+location.host;function O(e,t){const{pathname:n,search:r,hash:s}=t,i=e.indexOf("#");if(i>-1){let t=s.includes(e.slice(i))?e.slice(i).length:1,n=s.slice(t);return"/"!==n[0]&&(n="/"+n),g(n,"")}const a=g(n,e);return a+r+s}function M(e,t,n,r){let s=[],i=[],a=null;const l=({state:i})=>{const o=O(e,location),l=n.value,u=t.value;let c=0;if(i){if(n.value=o,t.value=i,a&&a===l)return void(a=null);c=u?i.position-u.position:0}else r(o);s.forEach((e=>{e(n.value,l,{delta:c,type:k.pop,direction:c?c>0?I.forward:I.back:I.unknown})}))};function u(){a=n.value}function c(e){s.push(e);const t=()=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)};return i.push(t),t}function h(){const{history:e}=window;e.state&&e.replaceState(o({},e.state,{scroll:T()}),"")}function d(){for(const e of i)e();i=[],window.removeEventListener("popstate",l),window.removeEventListener("beforeunload",h)}return window.addEventListener("popstate",l),window.addEventListener("beforeunload",h),{pauseListeners:u,listen:c,destroy:d}}function L(e,t,n,r=!1,s=!1){return{back:e,current:t,forward:n,replaced:r,position:window.history.length,scroll:s?T():null}}function z(e){const{history:t,location:n}=window,r={value:O(e,n)},s={value:t.state};function i(r,i,a){const o=e.indexOf("#"),l=o>-1?(n.host&&document.querySelector("base")?e:e.slice(o))+r:D()+e+r;try{t[a?"replaceState":"pushState"](i,"",l),s.value=i}catch(u){console.error(u),n[a?"replace":"assign"](l)}}function a(e,n){const a=o({},t.state,L(s.value.back,e,s.value.forward,!0),n,{position:s.value.position});i(e,a,!0),r.value=e}function l(e,n){const a=o({},s.value,t.state,{forward:e,scroll:T()});i(a.current,a,!0);const l=o({},L(r.value,e,null),{position:a.position+1},n);i(e,l,!1),r.value=e}return s.value||i(r.value,{back:null,current:r.value,forward:null,position:t.length-1,replaced:!0,scroll:null},!0),{location:r,state:s,push:l,replace:a}}function P(e){e=S(e);const t=z(e),n=M(e,t.state,t.location,t.replace);function r(e,t=!0){t||n.pauseListeners(),history.go(e)}const s=o({location:"",base:e,go:r,createHref:$.bind(null,e)},t,n);return Object.defineProperty(s,"location",{enumerable:!0,get:()=>t.location.value}),Object.defineProperty(s,"state",{enumerable:!0,get:()=>t.state.value}),s}function B(e){return"string"===typeof e||e&&"object"===typeof e}function W(e){return"string"===typeof e||"symbol"===typeof e}const U={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},V=Symbol("");var G;(function(e){e[e["aborted"]=4]="aborted",e[e["cancelled"]=8]="cancelled",e[e["duplicated"]=16]="duplicated"})(G||(G={}));function H(e,t){return o(new Error,{type:e,[V]:!0},t)}function j(e,t){return e instanceof Error&&V in e&&(null==t||!!(e.type&t))}const K="[^/]+?",q={sensitive:!1,strict:!1,start:!0,end:!0},X=/[.+*?^${}()[\]/\\]/g;function J(e,t){const n=o({},q,t),r=[];let s=n.start?"^":"";const i=[];for(const o of e){const e=o.length?[]:[90];n.strict&&!o.length&&(s+="/");for(let t=0;t<o.length;t++){const r=o[t];let a=40+(n.sensitive?.25:0);if(0===r.type)t||(s+="/"),s+=r.value.replace(X,"\\$&"),a+=40;else if(1===r.type){const{value:e,repeatable:n,optional:l,regexp:u}=r;i.push({name:e,repeatable:n,optional:l});const c=u||K;if(c!==K){a+=10;try{new RegExp(`(${c})`)}catch(h){throw new Error(`Invalid custom RegExp for param "${e}" (${c}): `+h.message)}}let d=n?`((?:${c})(?:/(?:${c}))*)`:`(${c})`;t||(d=l&&o.length<2?`(?:/${d})`:"/"+d),l&&(d+="?"),s+=d,a+=20,l&&(a+=-8),n&&(a+=-20),".*"===c&&(a+=-50)}e.push(a)}r.push(e)}if(n.strict&&n.end){const e=r.length-1;r[e][r[e].length-1]+=.7000000000000001}n.strict||(s+="/?"),n.end?s+="$":n.strict&&(s+="(?:/|$)");const a=new RegExp(s,n.sensitive?"":"i");function l(e){const t=e.match(a),n={};if(!t)return null;for(let r=1;r<t.length;r++){const e=t[r]||"",s=i[r-1];n[s.name]=e&&s.repeatable?e.split("/"):e}return n}function u(t){let n="",r=!1;for(const s of e){r&&n.endsWith("/")||(n+="/"),r=!1;for(const e of s)if(0===e.type)n+=e.value;else if(1===e.type){const{value:i,repeatable:a,optional:o}=e,l=i in t?t[i]:"";if(c(l)&&!a)throw new Error(`Provided param "${i}" is an array but it is not repeatable (* or + modifiers)`);const u=c(l)?l.join("/"):l;if(!u){if(!o)throw new Error(`Missing required param "${i}"`);s.length<2&&(n.endsWith("/")?n=n.slice(0,-1):r=!0)}n+=u}}return n||"/"}return{re:a,score:r,keys:i,parse:l,stringify:u}}function Y(e,t){let n=0;while(n<e.length&&n<t.length){const r=t[n]-e[n];if(r)return r;n++}return e.length<t.length?1===e.length&&80===e[0]?-1:1:e.length>t.length?1===t.length&&80===t[0]?1:-1:0}function Z(e,t){let n=0;const r=e.score,s=t.score;while(n<r.length&&n<s.length){const e=Y(r[n],s[n]);if(e)return e;n++}if(1===Math.abs(s.length-r.length)){if(Q(r))return 1;if(Q(s))return-1}return s.length-r.length}function Q(e){const t=e[e.length-1];return e.length>0&&t[t.length-1]<0}const ee={type:0,value:""},te=/[a-zA-Z0-9_]/;function ne(e){if(!e)return[[]];if("/"===e)return[[ee]];if(!e.startsWith("/"))throw new Error(`Invalid path "${e}"`);function t(e){throw new Error(`ERR (${n})/"${u}": ${e}`)}let n=0,r=n;const s=[];let i;function a(){i&&s.push(i),i=[]}let o,l=0,u="",c="";function h(){u&&(0===n?i.push({type:0,value:u}):1===n||2===n||3===n?(i.length>1&&("*"===o||"+"===o)&&t(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),i.push({type:1,value:u,regexp:c,repeatable:"*"===o||"+"===o,optional:"*"===o||"?"===o})):t("Invalid state to consume buffer"),u="")}function d(){u+=o}while(l<e.length)if(o=e[l++],"\\"!==o||2===n)switch(n){case 0:"/"===o?(u&&h(),a()):":"===o?(h(),n=1):d();break;case 4:d(),n=r;break;case 1:"("===o?n=2:te.test(o)?d():(h(),n=0,"*"!==o&&"?"!==o&&"+"!==o&&l--);break;case 2:")"===o?"\\"==c[c.length-1]?c=c.slice(0,-1)+o:n=3:c+=o;break;case 3:h(),n=0,"*"!==o&&"?"!==o&&"+"!==o&&l--,c="";break;default:t("Unknown state");break}else r=n,n=4;return 2===n&&t(`Unfinished custom RegExp for param "${u}"`),h(),a(),s}function re(e,t,n){const r=J(ne(e.path),n);const s=o(r,{record:e,parent:t,children:[],alias:[]});return t&&!s.record.aliasOf===!t.record.aliasOf&&t.children.push(s),s}function se(e,t){const n=[],r=new Map;function s(e){return r.get(e)}function i(e,n,r){const s=!r,l=ae(e);l.aliasOf=r&&r.record;const h=ce(t,e),d=[l];if("alias"in e){const t="string"===typeof e.alias?[e.alias]:e.alias;for(const e of t)d.push(o({},l,{components:r?r.record.components:l.components,path:e,aliasOf:r?r.record:l}))}let p,f;for(const t of d){const{path:o}=t;if(n&&"/"!==o[0]){const e=n.record.path,r="/"===e[e.length-1]?"":"/";t.path=n.record.path+(o&&r+o)}if(p=re(t,n,h),r?r.alias.push(p):(f=f||p,f!==p&&f.alias.push(p),s&&e.name&&!le(p)&&a(e.name)),l.children){const e=l.children;for(let t=0;t<e.length;t++)i(e[t],p,r&&r.children[t])}r=r||p,c(p)}return f?()=>{a(f)}:u}function a(e){if(W(e)){const t=r.get(e);t&&(r.delete(e),n.splice(n.indexOf(t),1),t.children.forEach(a),t.alias.forEach(a))}else{const t=n.indexOf(e);t>-1&&(n.splice(t,1),e.record.name&&r.delete(e.record.name),e.children.forEach(a),e.alias.forEach(a))}}function l(){return n}function c(e){let t=0;while(t<n.length&&Z(e,n[t])>=0&&(e.record.path!==n[t].record.path||!he(e,n[t])))t++;n.splice(t,0,e),e.record.name&&!le(e)&&r.set(e.record.name,e)}function h(e,t){let s,i,a,l={};if("name"in e&&e.name){if(s=r.get(e.name),!s)throw H(1,{location:e});0,a=s.record.name,l=o(ie(t.params,s.keys.filter((e=>!e.optional)).map((e=>e.name))),e.params&&ie(e.params,s.keys.map((e=>e.name)))),i=s.stringify(l)}else if("path"in e)i=e.path,s=n.find((e=>e.re.test(i))),s&&(l=s.parse(i),a=s.record.name);else{if(s=t.name?r.get(t.name):n.find((e=>e.re.test(t.path))),!s)throw H(1,{location:e,currentLocation:t});a=s.record.name,l=o({},t.params,e.params),i=s.stringify(l)}const u=[];let c=s;while(c)u.unshift(c.record),c=c.parent;return{name:a,path:i,params:l,matched:u,meta:ue(u)}}return t=ce({strict:!1,end:!0,sensitive:!1},t),e.forEach((e=>i(e))),{addRoute:i,resolve:h,removeRoute:a,getRoutes:l,getRecordMatcher:s}}function ie(e,t){const n={};for(const r of t)r in e&&(n[r]=e[r]);return n}function ae(e){return{path:e.path,redirect:e.redirect,name:e.name,meta:e.meta||{},aliasOf:void 0,beforeEnter:e.beforeEnter,props:oe(e),children:e.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in e?e.components||null:e.component&&{default:e.component}}}function oe(e){const t={},n=e.props||!1;if("component"in e)t.default=n;else for(const r in e.components)t[r]="boolean"===typeof n?n:n[r];return t}function le(e){while(e){if(e.record.aliasOf)return!0;e=e.parent}return!1}function ue(e){return e.reduce(((e,t)=>o(e,t.meta)),{})}function ce(e,t){const n={};for(const r in e)n[r]=r in t?t[r]:e[r];return n}function he(e,t){return t.children.some((t=>t===e||he(e,t)))}const de=/#/g,pe=/&/g,fe=/\//g,ge=/=/g,me=/\?/g,be=/\+/g,xe=/%5B/g,ye=/%5D/g,ve=/%5E/g,we=/%60/g,ke=/%7B/g,Ie=/%7C/g,Se=/%7D/g,Ce=/%20/g;function $e(e){return encodeURI(""+e).replace(Ie,"|").replace(xe,"[").replace(ye,"]")}function Ne(e){return $e(e).replace(ke,"{").replace(Se,"}").replace(ve,"^")}function Te(e){return $e(e).replace(be,"%2B").replace(Ce,"+").replace(de,"%23").replace(pe,"%26").replace(we,"`").replace(ke,"{").replace(Se,"}").replace(ve,"^")}function Ee(e){return Te(e).replace(ge,"%3D")}function Re(e){return $e(e).replace(de,"%23").replace(me,"%3F")}function _e(e){return null==e?"":Re(e).replace(fe,"%2F")}function Ae(e){try{return decodeURIComponent(""+e)}catch(t){}return""+e}function Fe(e){const t={};if(""===e||"?"===e)return t;const n="?"===e[0],r=(n?e.slice(1):e).split("&");for(let s=0;s<r.length;++s){const e=r[s].replace(be," "),n=e.indexOf("="),i=Ae(n<0?e:e.slice(0,n)),a=n<0?null:Ae(e.slice(n+1));if(i in t){let e=t[i];c(e)||(e=t[i]=[e]),e.push(a)}else t[i]=a}return t}function De(e){let t="";for(let n in e){const r=e[n];if(n=Ee(n),null==r){void 0!==r&&(t+=(t.length?"&":"")+n);continue}const s=c(r)?r.map((e=>e&&Te(e))):[r&&Te(r)];s.forEach((e=>{void 0!==e&&(t+=(t.length?"&":"")+n,null!=e&&(t+="="+e))}))}return t}function Oe(e){const t={};for(const n in e){const r=e[n];void 0!==r&&(t[n]=c(r)?r.map((e=>null==e?null:""+e)):null==r?r:""+r)}return t}const Me=Symbol(""),Le=Symbol(""),ze=Symbol(""),Pe=Symbol(""),Be=Symbol("");function We(){let e=[];function t(t){return e.push(t),()=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)}}function n(){e=[]}return{add:t,list:()=>e,reset:n}}function Ue(e,t,n,r,s){const i=r&&(r.enterCallbacks[s]=r.enterCallbacks[s]||[]);return()=>new Promise(((a,o)=>{const l=e=>{!1===e?o(H(4,{from:n,to:t})):e instanceof Error?o(e):B(e)?o(H(2,{from:t,to:e})):(i&&r.enterCallbacks[s]===i&&"function"===typeof e&&i.push(e),a())},u=e.call(r&&r.instances[s],t,n,l);let c=Promise.resolve(u);e.length<3&&(c=c.then(l)),c.catch((e=>o(e)))}))}function Ve(e,t,n,r){const s=[];for(const i of e){0;for(const e in i.components){let o=i.components[e];if("beforeRouteEnter"===t||i.instances[e])if(Ge(o)){const a=o.__vccOpts||o,l=a[t];l&&s.push(Ue(l,n,r,i,e))}else{let l=o();0,s.push((()=>l.then((s=>{if(!s)return Promise.reject(new Error(`Couldn't resolve component "${e}" at "${i.path}"`));const o=a(s)?s.default:s;i.components[e]=o;const l=o.__vccOpts||o,u=l[t];return u&&Ue(u,n,r,i,e)()}))))}}}return s}function Ge(e){return"object"===typeof e||"displayName"in e||"props"in e||"__vccOpts"in e}function He(e){const t=(0,r.f3)(ze),n=(0,r.f3)(Pe),i=(0,r.Fl)((()=>t.resolve((0,s.SU)(e.to)))),a=(0,r.Fl)((()=>{const{matched:e}=i.value,{length:t}=e,r=e[t-1],s=n.matched;if(!r||!s.length)return-1;const a=s.findIndex(b.bind(null,r));if(a>-1)return a;const o=Je(e[t-2]);return t>1&&Je(r)===o&&s[s.length-1].path!==o?s.findIndex(b.bind(null,e[t-2])):a})),o=(0,r.Fl)((()=>a.value>-1&&Xe(n.params,i.value.params))),l=(0,r.Fl)((()=>a.value>-1&&a.value===n.matched.length-1&&x(n.params,i.value.params)));function c(n={}){return qe(n)?t[(0,s.SU)(e.replace)?"replace":"push"]((0,s.SU)(e.to)).catch(u):Promise.resolve()}return{route:i,href:(0,r.Fl)((()=>i.value.href)),isActive:o,isExactActive:l,navigate:c}}const je=(0,r.aZ)({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:He,setup(e,{slots:t}){const n=(0,s.qj)(He(e)),{options:i}=(0,r.f3)(ze),a=(0,r.Fl)((()=>({[Ye(e.activeClass,i.linkActiveClass,"router-link-active")]:n.isActive,[Ye(e.exactActiveClass,i.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive})));return()=>{const s=t.default&&t.default(n);return e.custom?s:(0,r.h)("a",{"aria-current":n.isExactActive?e.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:a.value},s)}}}),Ke=je;function qe(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)&&!e.defaultPrevented&&(void 0===e.button||0===e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){const t=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(t))return}return e.preventDefault&&e.preventDefault(),!0}}function Xe(e,t){for(const n in t){const r=t[n],s=e[n];if("string"===typeof r){if(r!==s)return!1}else if(!c(s)||s.length!==r.length||r.some(((e,t)=>e!==s[t])))return!1}return!0}function Je(e){return e?e.aliasOf?e.aliasOf.path:e.path:""}const Ye=(e,t,n)=>null!=e?e:null!=t?t:n,Ze=(0,r.aZ)({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(e,{attrs:t,slots:n}){const i=(0,r.f3)(Be),a=(0,r.Fl)((()=>e.route||i.value)),l=(0,r.f3)(Le,0),u=(0,r.Fl)((()=>{let e=(0,s.SU)(l);const{matched:t}=a.value;let n;while((n=t[e])&&!n.components)e++;return e})),c=(0,r.Fl)((()=>a.value.matched[u.value]));(0,r.JJ)(Le,(0,r.Fl)((()=>u.value+1))),(0,r.JJ)(Me,c),(0,r.JJ)(Be,a);const h=(0,s.iH)();return(0,r.YP)((()=>[h.value,c.value,e.name]),(([e,t,n],[r,s,i])=>{t&&(t.instances[n]=e,s&&s!==t&&e&&e===r&&(t.leaveGuards.size||(t.leaveGuards=s.leaveGuards),t.updateGuards.size||(t.updateGuards=s.updateGuards))),!e||!t||s&&b(t,s)&&r||(t.enterCallbacks[n]||[]).forEach((t=>t(e)))}),{flush:"post"}),()=>{const s=a.value,i=e.name,l=c.value,u=l&&l.components[i];if(!u)return Qe(n.default,{Component:u,route:s});const d=l.props[i],p=d?!0===d?s.params:"function"===typeof d?d(s):d:null,f=e=>{e.component.isUnmounted&&(l.instances[i]=null)},g=(0,r.h)(u,o({},p,t,{onVnodeUnmounted:f,ref:h}));return Qe(n.default,{Component:g,route:s})||g}}});function Qe(e,t){if(!e)return null;const n=e(t);return 1===n.length?n[0]:n}const et=Ze;function tt(e){const t=se(e.routes,e),n=e.parseQuery||Fe,a=e.stringifyQuery||De,h=e.history;const d=We(),g=We(),b=We(),x=(0,s.XI)(U);let y=U;i&&e.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const v=l.bind(null,(e=>""+e)),w=l.bind(null,_e),I=l.bind(null,Ae);function S(e,n){let r,s;return W(e)?(r=t.getRecordMatcher(e),s=n):s=e,t.addRoute(s,r)}function C(e){const n=t.getRecordMatcher(e);n&&t.removeRoute(n)}function $(){return t.getRoutes().map((e=>e.record))}function N(e){return!!t.getRecordMatcher(e)}function _(e,r){if(r=o({},r||x.value),"string"===typeof e){const s=p(n,e,r.path),i=t.resolve({path:s.path},r),a=h.createHref(s.fullPath);return o(s,i,{params:I(i.params),hash:Ae(s.hash),redirectedFrom:void 0,href:a})}let s;if("path"in e)s=o({},e,{path:p(n,e.path,r.path).path});else{const t=o({},e.params);for(const e in t)null==t[e]&&delete t[e];s=o({},e,{params:w(e.params)}),r.params=w(r.params)}const i=t.resolve(s,r),l=e.hash||"";i.params=v(I(i.params));const u=f(a,o({},e,{hash:Ne(l),path:i.path})),c=h.createHref(u);return o({fullPath:u,hash:l,query:a===De?Oe(e.query):e.query||{}},i,{redirectedFrom:void 0,href:c})}function D(e){return"string"===typeof e?p(n,e,x.value.path):o({},e)}function O(e,t){if(y!==e)return H(8,{from:t,to:e})}function M(e){return P(e)}function L(e){return M(o(D(e),{replace:!0}))}function z(e){const t=e.matched[e.matched.length-1];if(t&&t.redirect){const{redirect:n}=t;let r="function"===typeof n?n(e):n;return"string"===typeof r&&(r=r.includes("?")||r.includes("#")?r=D(r):{path:r},r.params={}),o({query:e.query,hash:e.hash,params:"path"in r?{}:e.params},r)}}function P(e,t){const n=y=_(e),r=x.value,s=e.state,i=e.force,l=!0===e.replace,u=z(n);if(u)return P(o(D(u),{state:"object"===typeof u?o({},s,u.state):s,force:i,replace:l}),t||n);const c=n;let h;return c.redirectedFrom=t,!i&&m(a,r,n)&&(h=H(16,{to:c,from:r}),ne(r,r,!0,!1)),(h?Promise.resolve(h):V(c,r)).catch((e=>j(e)?j(e,2)?e:te(e):Q(e,c,r))).then((e=>{if(e){if(j(e,2))return P(o({replace:l},D(e.to),{state:"object"===typeof e.to?o({},s,e.to.state):s,force:i}),t||c)}else e=K(c,r,!0,l,s);return G(c,r,e),e}))}function B(e,t){const n=O(e,t);return n?Promise.reject(n):Promise.resolve()}function V(e,t){let n;const[r,s,i]=rt(e,t);n=Ve(r.reverse(),"beforeRouteLeave",e,t);for(const o of r)o.leaveGuards.forEach((r=>{n.push(Ue(r,e,t))}));const a=B.bind(null,e,t);return n.push(a),nt(n).then((()=>{n=[];for(const r of d.list())n.push(Ue(r,e,t));return n.push(a),nt(n)})).then((()=>{n=Ve(s,"beforeRouteUpdate",e,t);for(const r of s)r.updateGuards.forEach((r=>{n.push(Ue(r,e,t))}));return n.push(a),nt(n)})).then((()=>{n=[];for(const r of e.matched)if(r.beforeEnter&&!t.matched.includes(r))if(c(r.beforeEnter))for(const s of r.beforeEnter)n.push(Ue(s,e,t));else n.push(Ue(r.beforeEnter,e,t));return n.push(a),nt(n)})).then((()=>(e.matched.forEach((e=>e.enterCallbacks={})),n=Ve(i,"beforeRouteEnter",e,t),n.push(a),nt(n)))).then((()=>{n=[];for(const r of g.list())n.push(Ue(r,e,t));return n.push(a),nt(n)})).catch((e=>j(e,8)?e:Promise.reject(e)))}function G(e,t,n){for(const r of b.list())r(e,t,n)}function K(e,t,n,r,s){const a=O(e,t);if(a)return a;const l=t===U,u=i?history.state:{};n&&(r||l?h.replace(e.fullPath,o({scroll:l&&u&&u.scroll},s)):h.push(e.fullPath,s)),x.value=e,ne(e,t,n,l),te()}let q;function X(){q||(q=h.listen(((e,t,n)=>{if(!oe.listening)return;const r=_(e),s=z(r);if(s)return void P(o(s,{replace:!0}),r).catch(u);y=r;const a=x.value;i&&A(R(a.fullPath,n.delta),T()),V(r,a).catch((e=>j(e,12)?e:j(e,2)?(P(e.to,r).then((e=>{j(e,20)&&!n.delta&&n.type===k.pop&&h.go(-1,!1)})).catch(u),Promise.reject()):(n.delta&&h.go(-n.delta,!1),Q(e,r,a)))).then((e=>{e=e||K(r,a,!1),e&&(n.delta&&!j(e,8)?h.go(-n.delta,!1):n.type===k.pop&&j(e,20)&&h.go(-1,!1)),G(r,a,e)})).catch(u)})))}let J,Y=We(),Z=We();function Q(e,t,n){te(e);const r=Z.list();return r.length?r.forEach((r=>r(e,t,n))):console.error(e),Promise.reject(e)}function ee(){return J&&x.value!==U?Promise.resolve():new Promise(((e,t)=>{Y.add([e,t])}))}function te(e){return J||(J=!e,X(),Y.list().forEach((([t,n])=>e?n(e):t())),Y.reset()),e}function ne(t,n,s,a){const{scrollBehavior:o}=e;if(!i||!o)return Promise.resolve();const l=!s&&F(R(t.fullPath,0))||(a||!s)&&history.state&&history.state.scroll||null;return(0,r.Y3)().then((()=>o(t,n,l))).then((e=>e&&E(e))).catch((e=>Q(e,t,n)))}const re=e=>h.go(e);let ie;const ae=new Set,oe={currentRoute:x,listening:!0,addRoute:S,removeRoute:C,hasRoute:N,getRoutes:$,resolve:_,options:e,push:M,replace:L,go:re,back:()=>re(-1),forward:()=>re(1),beforeEach:d.add,beforeResolve:g.add,afterEach:b.add,onError:Z.add,isReady:ee,install(e){const t=this;e.component("RouterLink",Ke),e.component("RouterView",et),e.config.globalProperties.$router=t,Object.defineProperty(e.config.globalProperties,"$route",{enumerable:!0,get:()=>(0,s.SU)(x)}),i&&!ie&&x.value===U&&(ie=!0,M(h.location).catch((e=>{0})));const n={};for(const s in U)n[s]=(0,r.Fl)((()=>x.value[s]));e.provide(ze,t),e.provide(Pe,(0,s.qj)(n)),e.provide(Be,x);const a=e.unmount;ae.add(e),e.unmount=function(){ae.delete(e),ae.size<1&&(y=U,q&&q(),q=null,x.value=U,ie=!1,J=!1),a()}}};return oe}function nt(e){return e.reduce(((e,t)=>e.then((()=>t()))),Promise.resolve())}function rt(e,t){const n=[],r=[],s=[],i=Math.max(t.matched.length,e.matched.length);for(let a=0;a<i;a++){const i=t.matched[a];i&&(e.matched.find((e=>b(e,i)))?r.push(i):n.push(i));const o=e.matched[a];o&&(t.matched.find((e=>b(e,o)))||s.push(o))}return[n,r,s]}}}]);
//# sourceMappingURL=chunk-vendors.a0611c48.js.map